(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1729034,      37943]
NotebookOptionsPosition[   1692273,      37395]
NotebookOutlinePosition[   1692669,      37411]
CellTagsIndexPosition[   1692626,      37408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SEI2HR-Econ model with quarantine and supplies scenarios", "Title",
 CellChangeTimes->{{3.793231637005781*^9, 3.793231649850358*^9}, {
  3.793313889637662*^9, 3.793313890469223*^9}, {3.793444944223502*^9, 
  3.793444944496438*^9}, {3.795024630992848*^9, 3.7950246399596367`*^9}, {
  3.795024680123042*^9, 3.795024693915018*^9}, {3.795024842384151*^9, 
  3.795024845498603*^9}, {3.795024917006781*^9, 3.795024921483469*^9}, {
  3.795256383712455*^9, 3.795256390203548*^9}, {3.795257944261325*^9, 
  3.7952579479405403`*^9}},ExpressionUUID->"2bd8657f-501a-44a7-94dc-\
8941a5a92819"],

Cell["Version 0.9", "Subtitle",
 CellChangeTimes->{{3.7950123770513983`*^9, 3.795012381169182*^9}, {
  3.795103452719776*^9, 3.7951034535738287`*^9}, {3.795114180451474*^9, 
  3.7951141812029037`*^9}, {3.7952563921941767`*^9, 3.795256392785343*^9}, {
  3.795565063030241*^9, 3.795565064862945*^9}, {3.79559984358601*^9, 
  3.79559984394436*^9}, {3.795602474394536*^9, 
  3.7956024749788*^9}},ExpressionUUID->"47676929-840e-41ae-a627-b2f184faf4f1"],

Cell[TextData[{
 "Anton Antonov\n",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "\n",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "\nMarch, April 2020"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvflC9cSe4teOqfWaU0G0nfrkm8uBNP/Kp3dB9Gz5
/YKzK187Gi1wEAbRwv/ercqoe+2o0rBsNYhuMr+6A0QvaVy5G0TPUmqf2zn3
teO6ib3zQLS3gvo6ED2t0wNM+z5fuK8XSD/48RBMvz+5/3M/kP6Z8QJMb+9Z
0x6y77Wj1xXHDhBtc6teZO+J144sbn9EQfSm7S9Xh5167Wjhp7EGRAvPZf0Y
f/G1o9DmvWD63nrOC9GXXzvGLCgA0z6dj+8X3X7t2GzE8QBET3PWTv5277Wj
xAqGFBD91sLRSvDBa8dTW2+A6SKVqZfalN44PhPWvQyiz7ManjkPpBeWLgbT
Z3a58h60eOO4YMdGMK2/yUZByvKNo5FCvhqIDq3cpnvR4Y3jOcmLYPryD/bk
fLc3jovcpFJANAByIMZs
  
  "],ExpressionUUID->"f6053c3c-480e-490f-9a22-3e19ead9ce24"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.793463899655674*^9, 
  3.7934639020296097`*^9}},ExpressionUUID->"04c76682-7ae6-48c1-8dc3-\
8ee07083bf48"],

Cell[TextData[{
 "The ",
 ButtonBox["epidemiology compartmental model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 ", [Wk1], presented in this notebook -- SEI2HR-Econ -- deals with all three \
rectangles in this diagram:"
}], "Text",
 CellChangeTimes->{{3.793463933373004*^9, 3.7934639875984297`*^9}, {
  3.795024707955104*^9, 3.795024715177804*^9}, {3.79516842628983*^9, 
  3.79516844505552*^9}, {3.79516849910369*^9, 3.795168499105081*^9}, {
  3.7951686164881783`*^9, 3.7951686341165257`*^9}, {3.795256403590843*^9, 
  3.7952564085109158`*^9}, {3.79526774919901*^9, 3.795267750143429*^9}, {
  3.795606399282728*^9, 
  3.79560639968967*^9}},ExpressionUUID->"e21dada7-c755-4b2f-97a7-\
be5e6daec8c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\<https://github.com/antononcube/SystemModeling/raw/master/Projects/\
Coronavirus-propagation-dynamics/Diagrams/Coronavirus-propagation-simple-\
dynamics.jpeg\>\"", "]"}], ",", "900"}], "]"}]], "Input",
 CellChangeTimes->{{3.793897740252342*^9, 3.7938977449565268`*^9}, 
   3.7938977791148243`*^9, {3.7951683808194847`*^9, 3.795168403602941*^9}, {
   3.795168640294828*^9, 3.795168640843747*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"2c1f215d-af39-4b73-a6f0-42d4b4cc43a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
RpMtMjrR1Y0nWT96GquO9PS7Nls9yEUuz+P0iTMRxc0MjRmPjepLOiUhFo+o
+pT8F3KJD4/vKRH7GKrNly/fpsZ5fdabNSpCEwjFWfce5BeWsdkSOkMccFsd
WNQL4tmZMl0QbHpJjcZ2j8zuiKnhoqWdjA9taK7gh6s6tox5St7oqXywHK3p
SEo9fp/qSpgE1PLxjpSzTxt9PHcKBN7ubryKiuqY+FQ3N75kfW85KEYXF15c
XHJLcxvcOA7X49jhE1El9UwtNW1Dby6uHfaNssnBKvKeIKsQeIrF3jZb3dVr
AUyGWLx+rlHovLCY4sycwvzi5zyunM6QXL98Q/eox51KaYsd5lyduaIFKc+B
sdndcTW8IAtdY8oxonHtD9cq8C8AWXeJQCAQCFsJfvrU1tbK5XJQpPY3zul0
Pa+NrjIxNabzWc34/Rv5rfCYxpKDrzNJwmsyHpllYoVI6MOgi221jdGxya6u
PLFkIw8YHJCZmd3U1MrnK7g8z3279qU8bqJr0OQ9cai5c3hqV2yNT2xjcuZD
IR+FLCkUe9rbu27cCGQyJWIxirNelcKUyggk8uZxpDkPnxU/M3I5aIHyC+cu
64vb0LrzWIjqLLwgc1k9Wt5xcmbhcHIDS2tmak2xz3re5Fp9NDiuz808NGeY
rTVduLdkFXktyIGpxxMhTNKIutRCg6fMF7Qojyt7UW2NS8py27CHAsKSRhOk
pt7taO+iEoF67PLdk15Wxwyy4SmdzQOT+xLqvGKa0+49gDIFfIWHx67e3oGb
t9RMpnQDjysKlONI0gue5z0xi4QeTJbs1IlzEY9asccVzytgB5lwQoDp2YUT
aQ3sIDNDbQotRYsgfOhGAb8Dz58/J+vREwgEAmFrcOYXvXnzJs4v+gbloMmB
57KaWRoTS2sMeICScM4vLF7IbmYi1WEFhcDRGn3iGlPynokFnnwBGig31bbF
xaWC1NxQdaCR9Ny8hz09fXKP3Ryup4+n371nTawgG19nlYSaByfm9ibU7Els
TU65x2KKeXzPHTsOTkxOBdzRMlBWSaw61tAefBC6As+UQsPDilohV8bmeh45
eDymBKQF6A2TwJHTyVRgGaTaaD9/t4mpMYIWDaRa9+F6wLYGbF3Tcwsn0xs5
OhNLY1AXtuP3QZQyUA8FtKgVrMIvrikxu1QiUPD4CpnM96mxOSnlrtuGVoEj
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
/ROzJ332/8mvLtyy3GxruO2qOV89OjVnttsnF3dNO5QgS1pvzXpT9sbKQGhZ
Y3Rv0YtONr1ijb65Q+CiaCbiophW1LZ0UwtS3YYcL917Nd/fc7qDow+5jLey
csnYvo8iObj/qKW5s4vIRR2cvKd5zzh1p8AqPtslWemamm0WlXXk4RP78/Sb
W93hlKyyT5T77oRU3HRzESiuYfXf5eqVWxRz+tadlpYGqbB1Xxy8NPFC0SbR
Chkz8OSKhi7Prci84APULkHhuy2X/IiNDi5KvUFOTs6HH37I9aIcHBwcHMOJ
7u7uN+v1T38gt1XjlKhySFKITEDlk57dT7UYfr7ywJVsL1fBSg/tF7W2djty
+AQ9PXr0lK2NaAhU5gvW4Sbzycqv8NoueHsEDbCJV2Sr23XSKWbxp6VLOy0j
d3Jk5vTdxfuOfSdz9nIyWIy0tXXPzFRQzPv2HTY3d3J1FU9L2XksnLco+Xxe
0lVyNKPPfFN7j/e2HHvR3L19otIzLae8oZMNiot25K71l/0fq9mcFGods9Ls
eJpH5ErzsOBJmoJQ1pV449DMTUumCOvmDVG7o50Fyse2qS7Mi15lfjjJdZb7
xxf2Tt8abr923tezPT7OvjC/53HYAt/PhJNK3UkHElxiQixYbRTIYcJaK5DG
lXO+qrizhHUmzPH8pFkRwmoiF/r/rSt/3WzPjxuzVrGW2AD3v3TlhbKy8PCl
U5JCrfbEyHraEx6cmI283Tg0Y/2CiYxtLbu9FFkK9ptQn7kyYZ118fVFXQWh
SLSrZMOK2V82PFyJ1HWvvUavr7q61m430RGSsyAVimkZeXVtetUiVW3s5co9
l1Q+Hn4Ojt7OTt40Xzh65DRFcub0Rbsn/gt8HRw8C4rLV58on7jlkWWMwi1V
VVzXr5mEw2irjpV8s+mhV0bh/uPfOTuSmS/BVhi4qFyupGDHjp6WpMLO3mP+
3AUp53K23hQomVard9DQ1tUrelsQpAJ02iMtu7i2f3IjFyT57e3t9+/fR59g
7OxwcHBwcIwJEP/E0DN+/Pg3ZeueGYbm8oYuR1Ep6pisso1XCg5AuwwmmMQA
GXdq91zIFLWXvmTA3N7e47vL1yiS69duOdh5Si6THBy866qq7j1u907PAY0h
n+N9bSzRZX51p39GTtD+0oPHLjo4eEjWy+3s3IuL9eePTp48Rw4fBbujDl6B
AUGpZ5UHH5HHeX2MPb06v+25tnGCkx1HweK98rG4wUA7GC66LsDjL23Zq1n1
llVzv7ae+P6uKKeQwK/bc9YyXcr5nd5blpmx2khw0b2xsu2bHbVdCfdPzE5Y
Y3ks2W110DfV2WvuHQu4sMtnyazPK+4sbc9eE+T9KSvbwFjK1nA7UFZh72hj
dOI6q/O7fEMXTAQX1ao3LZr+N5DP7sL1y2Z/0Z67Jth/QkNWiLZsw0L/CW3Z
a1pVa6NXWcSuNs+IdGBs1/mdPqCmd48FbFkxVduZmHtpftSKqYv8J1TeW7Z5
2dSCK8GsIyE5zDpswcStG21Z9WbD8aXXW6MnOlfRoHFJJvdYSpsExbx9BSQV
BqFg+x427DqX6eXm62TgovZ2Htev3aZY7ty+7yju9hRc0sumWdm6l5eWNnfq
Is+XrTtZkq1u6yfDdNXU0RN7sSzuau3xU5fsbF0l/0rW1q4FBUUU8vKlq2Zm
T6Rizoy5qaeyDj8ynKsyuI2asyffSvRC65iklCWp8qra+8nhyAXVW1lZma+v
b1NTE+N6UQ4ODg6O4YJGoykvL39z446eVhTWdjomKhzFIyrWcYpVx0p69DaY
9GT1Ql7rjtN33WTeghsdgYsKJugVchXFkpuTLzOssOPXydErP0+gDa1dPQb9
av8MG07H9HRotMePn7WxcZW56B2AIma1Wu9u/sKFK+R1FDE7OHrNmDZr6+nM
87nCFoVeOkLDdL06FrS3wEZgHQpxc6CCNGCD4qJr/GV/astZrVOHt+at//f/
56entnqd3eG9LOCLHSkegd6f5l1dqC3fxJqid0U5pm6wYz1JD07O3rBocl3u
2uBpn+3b6rlh0aSr+/yXzf4y73Iwa4lN2WCzbsG3B7d5W3/7PuiocOCoWVij
R5whgd+U31oC0hvk/QnIZ2/x+oX+n3Xkrp3r9Ul9Zgir2DTH65PW7LWgx2uC
vrl5eLq79e8zUtwXz/h805Iptw7NDFs4iWkScy/P37R0SqDXJ3WZK1PD7DYu
ntyjjqh5uPLPv/9/5acDWc0WRDsom07C/wqqOzGVEPSiKcJR9DXHH2t1BqER
L64Xt+84dcfNxYts2jtBKhy9cnLyKZaiwseuLn6ieVhBYY4phlKZY2gOgy2n
Z8RRaq8zp89b6jd++JJLr5IS/VmnmzfvWFvrvY46Onr7+cxIP3X/XLYwQevV
H1sTfhcdLLISDrUJ2n6IR04lcdHRwNmooqqqqkJDQ9/gjh0ODg4ODo6XgPSi
CoXi66+/JuvWb2T0oaFZqW6zT9DvCTSPkUddKGcGpkC/imrNtqPXXZw8nQTX
8L6Ojl5ubn4VFWqKpLq6xs3VT1y+Fx0n2Xs8eigXqaJoyVziHs8kTaf4Dx08
YWXYFIqYfXxnV1XXUphbtx84iufryYmPl7vv3vOPrhdKpEKIFqQ05FixTazC
UTBIpQD9yK8SPUu+LhcVjcar7y3Vkh37ik11j1Y2yENAIOVn5p7f7lP9YDmr
jBAsO5WFNylCGuUCY+zKW1f9YAXugw2ez/DKPDMXN6sfLOsqWM9KBTuid47O
urTbt+r+sjbBPNRGVr4RzBPXtQ9XdBcKhpjwqLdIMBNac385Iq+6t5wIZNW9
ZdpiIScIgLdU54PObfeqvLcc77Zmr0HedEi9YH39o5UIgDy35ay7d2y2Tszb
gmmfacs2vcqi/gvX6PWbk8vaaAuxLEVwfxB9saKfVBQ19G4/+p2rs5dIF33I
F1JVZTVF0tDQ6OU1S2o+W1u3u3cfCYYUBOu4Oq1W96xQEMvt6RHmL8eOnTYz
0y/EIxJ//8DKKn3Mjx4pxGmLoImFQLq7+uw/d/dGsTgBkcqhY6EnH1vFkisx
lUW0UlExergooamp6fDhw52dncbOCAcHBwfHGEJdXd3Bgwff3A4xHa103ylq
sY8XjkuDdZhFZW2/IQz6Wt0Tvai6VZe6/5zM0UMm6kUdHDw9PWe0NLdSLK2t
rR7u08kVjrix0/3a1ZtMtP/50oFf1yOqsfbuOWguGv8hHhsYuLi5uZlC5OUW
uLkJrpcoZpmD+/GrmfcrxCV4kXVQ9qIvlFvHKkSzTirrOHlfg1SUkPAzIFv3
GwXDTaJheb2ZpvJwEEJhj2h9JP4UrsliUnm4YDQJYUA4KyJ0xaHCvtD6KFa9
RVeyUbguDRcuEFK04yREVSbZut8kmGmq2KTPSUWEPvUK0cw+mWwSLNiHC2am
9PfDRCNOUULgsnBiuYIBKITEU8E+/0bhfkNUvSJkjscnNw7NZDVbxNy+xOj9
S9bohT9vFjSJu3BVgoP46Ky0a2pmMMlFhLRJw9IFqfAU9eHCmXdMSZoa9W2n
0WimTZsDUSEz+DY2bpcvXWMGovsi60oCFxVdORw+dGKqmQOmPLRtY978pW1t
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
vk3iojdu3BWcwzr7QiqsrV1Wrlz/yrajp50dXUsWC6fhDAbtPRWKbDFR/eo/
5M3SmvSiftY2ruHh0Uy/UXRwpRlhoEooKyubPn0697vEwcHBwTE8oNEnLy/P
zc0NjJQNu150XehmcWegv0zmB5Jw9eotekQHRu7ff+goetihlfRVy8O0Bs9N
LwLlv7WlbcG85aLln2nOjj6I//FjsqmuZx03b961sHAycFHXdesi2GDLriPF
mY7xf+w5q+6vXZn43bghyspSJp5Z87G397h2TbArK80j5FlKFzSrE5rVD223
eHEInXd7SfPRo7bW9qCgZYjQxeCNq7xczfpIxcOHcktr8o8AaXQLCQkbg1wM
/cDt27e5P3oODg4OjuEBjdEVFRWbN2/u6uoa/qRXhWywtHYRvToKqqpHj/Ta
S1ouLy5+7O4xw9HRm07ZL1ywkqyPvoR1EFltbGgKmBXsANYhm+bk4OPhMb2x
Ub8DgfYcgnVIZ1jAZ5YvX8fG0mrsUOEN1d66NZuEc/Su05xE50pKvfZSv7+i
vKzCx3u2o4MnKKWdnce8oKVk8emVXLSlpW3mzAVkV9bJSRCq+nq99o+4aE5O
vrX+7JI/uOiiRavGlDhQJeTm5v7+97/nNp04ODg4OIYHNNbU1tbu3btXo9EM
c+raXu3SZWsw+ru6THN09PL0nPH4cZmQKwPraGpq8fObK1BKl2n29p6zA4Kb
Gl+2dCjZLa+rrRet2XvJXHydHDx9fAI6OvSW/ImsKpXZTjJvZxkIiZ+NtdvC
hSsZ56LGBrVdT2/PimVrbUXbSg6Onu5eM9XqKibu5tWrN9vaAwKC7eyEpXY7
e8+ZM+Y31Deyl0mFgYs2t/p4Bzg4eIgOQL39/AIbG5/iooWFxUjU2clHnPu4
zQ5czMaeVPT09KBD4DadODg4ODiGBzRGK5XKiRMnvkF/9ANMt7Ojc8GCZTa2
rq6uAtWcMXMeOQCVDj739vaKRuk9ZSCrDl5+0+ZWVFS9PJNkKLKmps7dYyb4
hsxFcNwTGLi4vV3PReldkF4fH8GtOWiwrY37/PnLxxrlMEHorXe2dwTPXy76
P/Kzt/fw85/b9rTaExdoL9r26eDk7eMzu7RUzV4mFTrDCfEWdzd/RydIhS/k
bf685a2ttC9FP/dRqyv9/YMwhRFYrp17wOyFvU+Mi45+EP/Mzs7+n//5H64X
5eDg4OAYTnR1dZWVlQ2nJsTAOtrBEu3sPVxd/BwcPAMCgp+11xQUtMQeXFTm
5+zs6+k5s7S0gr2CiwqPqqpqRG9Nvi6yaWA1y5at6+7u6RugpaUVydk7eCJp
OzuPuXMWSqZHOYwF/Qyls3N+4FK0mrv7dMwj/P3mGgihTgqzeHGIra2bm5u/
k7Ovl9es8vJKNgAu2tTU4iLzdZb5uLtNt7FxXb06vK9PJfx2dHQGBULePNyE
pD39/YLIi/0Y4aIE9Aagoz09PcbOCAcHBwfHmACNxffv3x8/fvww23SihDZs
jJw81R6sw8zMEdd9MqDnD4mJW82mOoJ1mJs7r169saurcyAnpkEqFgavtLCU
ubv5T53isHv3Afa0Yg2/oaGbp0y2E5Ke6qA/Ma19cgiHwygggdy968DUyQ72
9p5Tptjv3XNQXGTXe9okzfbJk+fMzR3t7T0mTbaL3BKvfZkFWD0QANON2NjU
KVPs8OLUqQ6nTp2XUpQutqXvFpJ28Jw0yebgweNsLK3RUx2WlJTY29s3NDQw
rhfl4ODg4BgudHd319TUDPMOMRrmKqtqlixZa2Ptunjx6praOoFSaJ8wRqCh
oXF9aISNjcvs2cF06nmAHnby8gpmzZxvY+WyOSKuu7un76hKMVdV1yxfKiS9
cOGqurp6xkdeEwDtoejp6dm5Y/+C+ctBSvs80/+fBOD8+csIEBub0to6oL0l
9Lyntzc1NWPBguWHD5/s9xZJRXdPz67dB4KDV2zftouM3I4dqZB2j8fHxw+z
VQ0ODg4OjjELGtazsrI+/vjjN+sDdODQaLorKiq7up5zckpvory3R62uahW3
s74W2lpb8eJzF98pZnBUJN3ZOdyHtjheCv1co1vzHLNCfeVz0HaHuvXH9PqL
uuTUfvjP8ZkCqG4bGhrS09M7OjqMnR0ODg4OjjGEpqam8+fPG2WHmFb7ZE38
uTS4n+Zq4DG/MnBf/arOgIHHzzFk0Ek7NF6y+E7N9/qtpg//grd0rwowmkFV
WlRUZGFhwdfoOTg4ODiGB9IOsSVLlpAH6uEffXTk2/vF/jd1ZIlJ+9r79ui9
F1BcSlr38qQ5jIiX80yy1DQIcR3IW2OZg2k0moKCgmdPEXJwcHBwcAwFaMwt
Li4ODAw0FhcdIHSDOVX08vAmWtIxj2FoF970z4Fk0+ndd9+trq5mJtwbcHBw
cHCMGhjsLjZfv36dW3Hh4OBAPzD8Jxk5ODg4OMYsaMTJzMz86KOPjHV2iWPk
oq+ZrH4ms95gEs9G+MqtxcaCKeRh0KDeIC8v709/+lNtbS0b4cXh4ODg4BhB
6OnpqaurG+C4gwGrtw+MsL+0T4qSj/I3mA0pzpcEeFNpjQ70a5EhSsK41f5K
kRgFtI2KgDnplStXxqYlAQ4ODg6O4Ydk6/7dd98dtK37UTAKc3xP1NbW5uXl
SUaWnqsm1YqQXiF62TdYvz/73ZHC0E1MoPoG6Jtiv4ReEqEUmxSgL+l9thR9
Az87D8IdaaPLQIpjaqC8VVRUBAYGNjc3Gzs7HBwcHBxjCJ2dnYWFhQO0IZ+f
n3/48OEjR47g98KFC7SyT0/7aUolDao0jtOf7Gk1lzRAU4C+9yVS0e8RURH8
mZ2dXVRUJOVN4ipSolKu+kUr3ZFyQiFx8ejRo6oqweu99KLuaVy6dIlK3TdA
v5hNmXK8QVAx4+PjfX19g4OD3d3dUTkDefFZg1rPfSQFwETp6tWruN67d+/R
o0dzcnJWrVrVN3xGRsa2bduYqOTvm7eXpP66bdTV1TV//nzIxrO5Rd40Go1a
raZc9Svda6ViRFBWUYpFixYNsxc2Dg4ODo4xC+nkrKWlZVvbK/zXUOCwsDBr
a+vIyMiIiAgMzdOnT29sbBzS9dOXZGnLli0pKSlMpIWv9eJLAgQEBJw9e/bZ
+6A6165dw0VsbCztphvjoEZHnXh6eoKn4frKlSsuLi7t7e0QCaLrmObU1dUx
saqzsrJyc3Ol18F57t27J9lUh/hlZmaSOq67uxtcCDHgFXIAdP78eVtbW1R7
SUkJXrx9+/bixYtBCx8+fEjK2FgRFFVeXh5mTP1y29TUBLoIUa+sfOK8vqCg
ADEQfUUGkFs8ValUFKC+vp4+CtzHNV5HScvLyyk25A03cY1fOzu7ixcvIrBc
LqeYEQylo8zjdZQFRUMBqbymzPGQVdQ2X6Pn4ODg4Bge0JhYXV2dnp7+Si82
xD3Cw8N37dol3XR1dcUozETnTevXr09KSgKLIGUjgi1ZsuTo0aMU8vjx46tW
rUJCePro0aMLFy7QfRAY/ImLAwcOrF27lnggyAyiPXXq1MmTgq9G/OLRkSNH
dAY3hWChu3fvXrdu3d69e5lBG4Z4Ll++jCSQSeIJuJ+RkYF0jx07xkTagPhP
nz4dEhJy8+ZNJp7bIoYJ2oD4cbF8+XJS7iGqDRs2gOsiM6gi8I3Zs2dXVFQg
PGmNEB4x79ixA4VF7Z07dw6PUAn79++XlKhvpp1MEhIXnTp1KmqeWBb4Ie6j
EtDc+PPOnTuQAdQDZi4LFizw8vLCI9xHXYHXYSLj4eEBXldcXDxjxoyFCxfi
jkKhAKlzc3NbtmwZKtzPzw/NHRUVNWHCBIjEnj179u3bB6r57bffovL9/f2D
g4ORYnJycnx8PGJGyLkiYmJidHq/XcI8Bc2KWQbilMlkpGKFnCC5efPmBQYG
gkuj0Z2dnSFRyCTaHQEgclQKUF+8jgsfH5+Ghoa7d+9C7JE68nb//n08/fzz
zzFHUyqVYMgIBgHz9fVFcRAAAvP48WMUEyKH3CItlM40ZUM6u/Txxx9LMwhj
Z4qDg4ODY5SDxprKysrExETShLxSL7pp06bQ0FAMrwUFBRhzZ82aVVNTg/EL
IzioQmpqKigHEzWWQUFBGMptbGwwWIO2YVzGcL9o0aLNmzfn5uY6OTkhRXBF
sI6ioqKtW7eCJ4AkgEXgrebm5q+//hqR37t37+DBgxjB8Wjp0qVpaWmIHFFF
R0efOHECYcBMmLh+it/IyMivvvoKDBZcFGGYqMVFtMgYuAEoIljNH//4R5CW
Q4cOWVpalpaW4vWVK1ciJEoBKoIygjvdunUrOzvbxcUFicbGxiLPra2t4C0g
J2CzCIaRGhwY9AklAuVAcogBlAzvIvMoGrHZMWIwHKQOleno6Ijik+YTLYVW
w8WNGzdA9sDz//a3v6nVaiZOSVCZIIQPHjxgInUEX0UNg9LjT7TpzJkzEf6v
f/0rZjdM5JAQKjA6alC0HWYH4KJTpkwhrSPSRQx4fdu2bWg1/ElMD3QRgscM
rkLd3d2RFhNpMKIqKyuztbUl70Jgs5gHYeqBOLtF4FFJSQmaG/eZyLchzLjw
9vaGAECcQEEpM8RRIRv4IiBOIKsonYODA3gp7oMPg3vj+4Kgogi4g88EIs1M
+AQcPkmaUBg7IxwcHBwcYwLEPHNycuzs7GhkfyUXxfBqZma2ePHi+fPnf/nl
l7RBDpQPlKOwsDAzMxOUDKMtuB9GczzCTblcDtpGxACUDzyks7PT398fzAHU
BeQTMYOyHj16FIETEhKmTZuGEd/KyorWeRF++/bteAT6B+IKejN79mzK0rp1
6/CIGbhoREQEckKPkAGEBHmgNVmkjrdAGJAQBQBxxbsgP4iEibpWEAmwR/Co
7777rqOjAwwZOQTDQaIUOWnJECeKBvpBbAocAwHAakB+wHBwJy4ujnR0Y4GL
kosECA/qCjUJ0tXW1kYsDs0KVo/2RQDMNcASISQQNsxcwAbRZFQ/qGo0MaYw
aDuwWTBDVC+aDzEjhjNnzuA+Jj54BcKJSROoL5gephhMlEnMejDLyMjIQGse
O3YMYoPwmC6hmc6fP88MOvM5c+aAsiI85AHTBzRrSEgIxYDXIQxIaPXq1Uz8
BJB/UNONGzeCUSMAMWom6kUhwJiJYCoEyQexJOGBMEBawEWRCmhqQEAAEkXp
UHykpVKpMKui6sJXc+XKFWaSsiHt2Bk/fjy3dc9hXPTbpS8dHJDOAPa9KT16
NnzfR9LrbySq1wpvsqXoF9VrleL7VAgvxUgUzu//Xb8cIAOgB68cHLWGNXrQ
Ra14ZBicwd7eHmQMQz+owubNmzdt2gTWcfPmTYzOoGdEAxobG/EUI3V3dzco
n4eHB1IEeUhJSUlLS9u3bx/+BEXEsI7XEQkoX3FxMWJAKiA24HgrVqyIEAG+
unv3brAIrXhKKDk5mfRpxEWjoqJASIgGrFy5cteuXaAQiAHpgiQHBgYSK9CJ
R5/AbJFVRLh+/XqduDkQCSFa0GxwD+JLyFJsbCx4kVZcdwYzQUhQ5UePHoFv
lJeXI+aqqircQelmzpyJqkDSY4SLUunQiFRYAuQBbBN1RXszTp06hSlAS0sL
KBwa4ty5c5j1gOqDxdFEA9MWNI2np+fZs2dJwY7KxwWIKynq0YhoVkwiMJ3B
n0lJSaCRSAJ1TimCxF64cAFSAUk4efIk5jjgiogBlI+mIZRPiBMtzSMq0OOL
Fy+iBSkGEFGUAndAFOkORAV0F1JNsw9MWGj6g0QhwHgRTdzc3AwSu2bNGiYq
6kHeIA8IhukVikPKWFQC2DVkA6/oRF6H3NKekGH4rgcHVDu+69EtuhwmCx2f
/nBwjD3QgPjgwYP33nvvlSdnKfCGDRvAB6SQ3t7e4A/p6emgi0zUQYG8gXy6
u7vfunULd8AtT58+DU546NAhJi7aOjk54aKoqAgjO5ihWq1GVA4ODrQme/v2
7cOHD4NOgK5gWMQjScGVnZ29c+fO/Px8KysrUseBA/TTi5L+CsTAxcWlrKxM
JpPJ5XIm6uWWLl2KaL/++mtkD3cQEtGCAhEDAU2aOnUqLhYuXAiCBI4BYszE
XaPgqLjAHVqxRdHAOZFzUBT8CWYFdo2CI5+0DhsTEwOuwkY7FyV5AC03NzcH
D3z48CEKjrpCW4AuomnABvEnaBjoOprs7t27kDS0C/4EQ0P1ovItLCzAfDCn
WLRoUUFBAWYZYJ5o908//RR1iBggLYgZDWdpaQlJQxIQMFx88MEHkCiQPQQA
y8VNPML0ByQWZI8ahdTUNCHChAJZunPnDpobMSMJyAbmI9evX4fsIWlw0Y8/
/hgiQep3BIDMgNmCwaIUmGiQlCLzIJz4BFAWiCgoLsqLOygyWKizszMaHUWO
jo5GtiEqiLawsJBEiIkSS/urTVA26ItGbidPnkzbrTkx4Bh+6Aw7x/Ct4UvH
XBXSiM+wvb0d3zV6b3x6tAyBzxlTQnTReIQPGd0+ppAqlQov4k90C3iEcQ3B
EBiCjU8SXQQiQXj0LYgW3RcGFMwiMe4gJMLjLQxSiAHDjUKhwKwW/QnC4xHS
wtCA/qq4uPj+/ftNTU0UFfKGDorOZmI4u3nzJibaCI9fDIIYFFAKOuoolQLv
UikwNUbHKJUCaSFFpIvUkQfkRCoFcogODT0V8oxSIP9UClzjDu73LQUevaQU
SBHpInWUAvXZrxTILfKMnEulQIlQLpQOTxGmbykQA2oDddKvFJizI92cnBy0
Y79SIJ+oc6kUHR0dVAq0DkqBMqK9+pYCzYo2RcuiFGjWvqVAs6IUqEmpFNSs
kJl+pUAGpFKAEvQrBZqVSoELqVmpFAhMpcDrVApEKJWChJPagoQTpYCkkXBK
pZCEE8CFVIp+wvlsKZDEs6VAZpAlZAzZo2aVSvEi4URgSTilUkjC+WwpUKVS
KahZ8RaipcO8QwcM1sjJK8cd4h7glikpKQjc3d2NXwzxx48fR8HBzVavXj1n
zhxwCdwHtQPVXLZsGQKQxHp6eoaHh/v4+JBeCMArYCB0DQ6AR2FhYfhFo0Dq
MMqTZgwih5vgwIgK0TKRD4MbICcY4oniEhdNTEwEtwHJAUnIyMhg4nkovLVx
40baM4Ca//bbb0GbQTgDAwPp3DQIA+4gq7RGjwtIGj4BRIIX165di1TQlKAQ
uIDkI2lkTyoRgqFNURt4nbhoQkICcsJMkm+8WZDM0LE11CGaHtLLxCX7tLQ0
1MNVEUw8xASeuWrVKlww8Rw6+Cfeos2TqKjdu3evXLkSv0ycSqC9wAnB/2ka
wsSTYpcuXUL/Rh8OJjiYmCAGOvaOb4f2cCIAmgyCREfppVWG4ODg+Ph45BDS
S3KFbxbtu27dOpo0gdZieoI4kSg+QyaerE9NTUU+r4tAVCdPnoSkoReC7OE+
+nlMhSAM+MxBXHGfTt4he+Ci+BzoTwSQLDNAiqiKTJDmUZYwKKAVJPsGHBzD
CVoZxBj9/vvv79mzBx8aOmoMoN988w0+nC+++AJfOmaI6FvwqaJDxuc/YcIE
9O1Tp069cOECeiH0MxgmMEFGX/3ZZ59h1Mb8F1FhuoquGx3Ol19+CSb21Vdf
oS/CgBUZGYlhAnNYfMUIj28f095Tp06hZ8CUGUMzpmYIj1TQt6DPx6wT3QI6
KLCpzz//HI8wpmBQW7BgAQYmOiIBTvXXv/4VXZCdnR06LgxJ6FswpqAUCI+3
8C6mpZjSYpzCAASKQqWYMmUKejmMQeg9zpw5g+FMKgXmufv27cOMG1NdjInI
P5UC1zT53b9/P8IgJMLjLZQCMaA3Q2yIEzEjfqSCtDBPR7rowWiNj0qBvCGH
mKpjUENniJwj/4gKZbG1tT127Bh6S5QRPSHKK5UC9YAeFd0gagb1Q6VAjYG9
oPbQFaOjRk5Qq4iKzokgn+iHMX9H/X/99ddoVrQI2gV8AG2Ebl8mk6EUiApd
NNoRnSdqAy2LzhOtTKVAu6PeIAMYaiEP4AyQDSoFpCUoKCgiIuLw4cP29vZU
CmQA7XLixAkMDRgL0F4TJ05E+L/97W8YUDB2Y8BKT0/HaI6xHjfxaNKkSWj9
xYsXh4aGoue3srKiUoC8QVogM5CcuXPngi2gFAiPUmAMmjFjBgYadKGQOmQS
4VEKMzMzyCSGP4xxkFL8iZt4hABubm4IDHkG4cHrKAUqBBFiVILkb9myBQzH
wcEBiVIprK2tUQoMfOBOYI/IJCoEGUa2vb29UQSMRCgOBmWpFBiCQXjwCl5E
JVApUC2IFlX03E8MmUHF7tq1C58YBAZRITyiooMwQ7GoJ6m2fv/73w/QBygG
KdJJ6gxeWuhFkDEUp68tHTK5I/ExcHjUCcZl+hOvY1gnQqszGDaUjqjjLTpu
TIFpFtP3bC9N38CiiYWS7gvfIxoCrUz8hEqH5sAnRtGCPOCzRR7w/UpWa0D7
Udv4E+VC5OBR9AjEElJKqZMRJ0zZkCsEoOQQD2LuO2pT3jpFDKpBRh6eFZhX
ilC/AM+GhyRIisTXivC5MZMYoL8icw0vCok+kHaQDjDRAcIEOeeLoOtjpGKo
578cHM8FCSHED0NhZWUlelr0xviE0c/TkKEVjZbQRqx+j3CHzh7STemXDsm+
KCqAopJuUlQIT4/6hn9RVJT0s7nCtRTVK3Ml/Uq5kuLvG9XLK6RfeKlC+hbw
tSrk5UlTVM+2hRRV35vPrZCXl6JvW7woqpdUyGsl/fIKGWDSz62Qfm0xEIl6
ZVu8KKoXtcUgKqTfd1FfX090a+hAOufvo8TrO+D2JQDSnX5/vjyGfqz72cif
BZFDzLbARfuG7Pcu6CsI/4siH8h9CVRdoKOYutLRG0z3JEPrYwpaETrRWUDf
1j9+/DgInrQXWgIzeBaQ/mRifdIeYCbODrZt20byL4mlFF5KizYtS9uq+11I
oCzt2bMHE3z69CTZoMDUapgMIsP9AkjuDChOyVOD5MSB7mgN7hXoV4q5b/i+
pRja9hgspLkbZvS0j2UEEWmO0QTM5Q8cOCApLjg4OIwFGgVaWlq++OILMsU5
FEOYtENs5syZA7TC/SKllu55HhslnedLAvT9s2+AlzzqF7k0vmMeje7rWeor
vYsurri4+NkAfWPrmwHpTt9HUqK4uHjx4rhx49555x0vLy8bG5sB6pZHN6hu
Kyoq3n777dDQUDa8exWo8quqqmjJnuN1gW9ELpePzVkVh9FBvUd9fb21tbVC
oZDuPNsDv+jmSx49e3PYonqDSb9WKkasECMmzdviDSZNwCBOW3zZ0IBSLCsr
CwkJGWrt6xBB4jnDrG6iwTo1NfW3v/3thx9+SCZGR/0G0VdCJ9oowMVf/vKX
KVOmsMG2y6Bbk1JPSUl59913pSyxPq5mXwTd0zOUMQgqfk5Ozm9+8xtSSb28
xjg4hgj4iouLi/tuBuPg4DAK6ANsb28PDg5++PAhG0q9KLjuqVOnRqImhLgf
ncJjBl0le2n39aaqkapr7ty5dnZ2aKBx48aRdakxTkep+IsXL/7nf/5nOhA3
zEMJtUtaWtoHH3xAd/hY9lpABdbV1Y1xWs5hLNDXiqnQRx99REsbXBQ5OIwI
+iQxMYyIiMjOzmZDM6TSZy6Xyz/77LNX+qM3NVBWDxw4AB44YcIEo3j6JlMM
uJg9ezayQUekx2znSUSU9i3Q8fnhrwqJi/7mN7955cSEoy8kveiHH37I9aIc
RgR6kvLy8hG6VMfBMfpAXs7JZPfQjQtksH1kMSg6G7Jjx46f/exnv/jFL/71
X/8VdLqiomL4FXHMoI+dOHEi5vJsAMvBoxLUIrW1tT/96U/JG5dRVMSci35P
YE734MEDstXPwTHMoK+1vr5+8uTJZHF6ZA1MHByjDPRJtrS0WFpaktPAofgk
Kc779++PHz/+lbbuTQfSZtoJEyaAjn766afp6ek2Njbbtm1jw35SRmKezc3N
P//5zwMDA5mBEY0FSAJD1f7NN9+gOZhYA0aRJc5FBw2qqNLSUm9v76amJsar
jmPYIS0InjlzhhwucHBwGB34MKurq4faWKVGoyGN4pCm8mZBuSVDoP/93/9t
dNvylPS9e/fGjRtH7pnG1MZRKmxYWNiPf/xjcqRlLG0GcdGtW7dyLvq6oIpC
h4N25BYhOIwCSQmzdu3akpISxoWQg8OooKG8ubn5z3/+M2aIbGi4DaWiUCi+
/PLLEbdflIAM/+xnPyMPpNLZJaOAGig2Nvbv//7vi4uL2ZhZXaKC37lzBzz8
1KlTzKg8nHPR74mmpqaDBw+OHWcNHCYFaY1pwYIF5P6Mf78cHEYHyExVVdVQ
jwv19fWHDx8eiTvEqJt6//33IyMjmbG5qE70i4oLOzu79957jzwmjPqOlLaJ
Yuz4xS9+MXfuXGZshTDnooMGTZ0KCgq++uqrvj7OODiGGRqN5saNG+hVGBdC
Dg6jQlqqsLa2Hrr9opRKeXn5hg0bRq4xt48++ig2NpYZmwUxw/bR9vb2//zP
//T19WVjYOMo1bmtre3vfvc7yRuR0fPDueiggTlUWVnZGFHpc5gaSPAwFSJ3
54x/vxxDDV3f/4m/gsgJcofxvG8ILf4W/4kyKQ4ubPQLJ32AGBdOnz6tVqvZ
0HySFGdBQYGPj49RbCK9EYCLSnpRY+dF35cqlcq33npr+M9SDTOoaAkJCT/8
4Q9NZFsC14sOGtR22dnZ48eP5zadOIwIfMWVlZV0HICDY5gg8ExRoSSQTf1A
Rnee7QsFUip6t9axUd5LSscJo6KicnJy2FCOC21tbQ8fPhy5lOnPf/7z5s2b
mcmwPkk193d/93cqlYqZAEMbCkisG8XcvXs361P/RuQwnIt+T2D+i8nvqJRY
DtMHfa21tbXo1bmte45hgaABhZT1Pj1SdGh6u3oE2ZNsNKobNafkDTmV7R3d
T8mkqCwdxvwOLyS/S/PmzXvw4AEbSptOIKIffvjhSDw5S7n9+OOPTcoFp+QH
09vb+1e/+hVm96PP4ijZ1Orq6vqv//ovFJOZzG4EzkUHDeoN8vPz//rXv/L9
ohxGBL7inJwcDH/GzgjH2ALG6YqGrqt5jQmXKwL35i85WJRT2UaPapq75+7J
nxold0lRBe3Lj7lYfjmn8XF9R0/vmOgk8UlmZmY2NjYOdSoNDQ0jcdyhPGPo
DAsLYybDRZlh4yio2q9//WsHBwdm7HNVbxxE+Tw9PcFFUUzTIduUsfT09Pff
f5/IlYlkzPQhHWE+efIkd3nDYRSQEGLIc3NzI4eDXC/KMaTA2NXU0ZNZ1rrz
VvXKoyWeW7Ot4xQ2cQrbeKVltNwmTn74YW1zR8+qYyUTt2Q5Javwzy5eYRmb
ZRkr90jNWXa4eOv1ypuFzYjE2EUZEkg2nT7//PPz58+zodSLPnjwAAP3CLJ1
L4Fy+9lnn4WGhjJT4qLMULeFhYVvv/12fHw8MxnN4fcH1fOuXbveeustUxsv
JC7K9aKvC6qoqqqqVatW0SoJB8cwQ1oQTEtLG2qHgxxjFYaTR6Jo3X/c4p2e
7ZiktI4VmKdTkhLXtnEq61iF77ac8DOlt4qaHtd3XM9vjjhX6pWeIzJVpXNS
tiwl2zFRaROvMIvKckvNflxnOP09GgUW5cIMcai3cOPDVyqVpkMnBg6SJdD1
NWvWMBPjosyQnwMHDowbN+7u3bvM9HI4CJCcFBUV/ehHPzK6i4Fnwc/RDxrU
smVlZTNnzuR+lziMAhK5trY2TCc5F+UYWoiS1dmtTbyitoxROCVl2yeoLGPk
smTVyqPFJ+X16iY99cqr1m8XqWzsPiWvW3W02DUl2yJWbpugcExUOCYpbhaS
/bGRR6JeCWm97K9//eu5c+fYUOpFc3NzXVxcaHPOyPrwKbdffvllSEgIMzFS
RCA13ezZs3/xi1+0trbq9OYgRipo7wHw29/+1sbGhpmespfrRb8n0A/cvHlz
JFob5hgFkNboXV1dac1l1H+/KN8oPvliktD1sd2k/3vr9UoQ0Tl78nfcrsqt
atcamoRG7Pzqju4++0K1Ol1+VcfO29WBewvtE5R770lWR0YhFyWAXOXl5dHq
+VCAPnO1Wh0VFTUSDWhQ/r/++mvJ75Kxc9QfdI4J5O1///d/zczMmElmcuAg
pjdnzpxf/vKXEEvT2SYqgaqXuCjfL/pakGamf/jDH7hNJw4jou/ZpTEihLpR
bxvIVCGtqT+u10iEU9fHvhP+LKnr7NWSZoP1HfR6tCyn0nDCbpS2n7RU4e/v
f+fOHTaUtu5ra2t37949crnot99+u2zZMmaqNE9a+vzxj3+8fv16Znq6xJdD
+vCoek+cOPGDH/yAthyY4L4OyuS2bds4Fx0cIJzoEEywZTnGAkjwIIH/93//
Z1SbTkO+gIXYe0VDlpVNXUp125O7HMZAR7d2393aS7mNHRqDZVGtyEXFJlE3
arR6K6N6dgrUt3Yfz6pbf7o041a1qEo1WuaHFPQhdHV1paamDp1bXopTpVJN
njx5JPqjp9xOmjRp8eLFzFS5KDNk7MyZM+PGjbt27Roz4ay+CKQCVavV77zz
zsaNG5mpFkHiovwc/etCsnX/3nvvcb0oh1FAIoev2KRs3eteBbF3fM2PxRA8
4lypZYw85VplRWMXV44aBS0dvRtPl06OzLSJUyzYX3BKXtfUoR/diIJWNWu0
fU4l1bR2771bE7AzzyZegbemRMrTrql7tNKZKKMVZChAgo2P8eDBg6WlpWwo
xwUwXiQxEjUhVCdTp04NDg5mpsqOCKQLXbp06U9+8hMM9LTr0tiZGijImigu
Pv3002+//ZaJxTFNosK56PcEeoPc3NyRpbrnGDWQluq++OIL8gFq1H5yqLoO
nbC8q61v675R0GSfoHRKVn0d8XDHzWrG+N7R4QPVdLdWF3629OuIR7KUbNfk
bBvBXpM8YFf+gfu1NS1603YNbT20Rl/ZpMm4WTVte65wmj5BjpCBe/JvFTQL
C/pPtp+OqiaU1uhlMtmNGzfYUJ5dun///vjx40euTSdzc/P58+cz0+aiEp37
mwg2oiyOEjNZvnz5T3/6UzJFa7JEmnPRQYMqqqSkxNbWFq3MeNVxGAkajeb6
9etkzMGoEBRd3d09XV2azs6uTvyn0eC67z+Nplt81EXXA4mUzsVcz29yTVa5
pWQ7JarsE1T+O3JrW4XX+Tc3zMAwnFnWsuF0qV280jI2yzlZ5ZKisouXizad
clOvqTu79U2SfK3CMVFhESt3EE05IeTOW1U1zaL2Xkf7Tkdt42EwLS0tHWr3
E93d3aSpG9JUhgI0VlpaWgYFBTHT5qJMbE2gurr6Jz/5CXgdM/kMEyiTV65c
GTdu3MWLF5lpZ5tz0UGDKqquri4xMXFMHRvhMB1IBmSCg4OHbnPaQDIibRnd
tm2Pu/v0wMDFc2Yv8vcPnD49yN9f/0+8Dpw9eyGeenrOjIlJenmGdYYzSh2a
3sA9+VaxcsckpSw5xzwma/fdKmagqRxGwcPS1tBTpTZxCqtYhSxFBcJpGSs/
9LC2TaNt6+otqeu8V9ISfqYUdNQ8Wr7iSIm8ou20vH7XnSpxZ6neYqmxC/Hm
QfKMieFf/vKXs2fPsqEhADRYZ2VlIZWR6AOU8m9tbT1nzhxm2hyJ0JfXnT59
mpl8nmmbaENDw89+9jM6IGbiq7eciw4aVFH19fVpaWkdHR3Gzg7HWAQJYUtL
y5o1a0pKSpjxuKhkf+/8+e8iImK8vGbiX1xcWkxMsvQvOjopPj4NpNTFxTci
Iu7YsdPSmy+Klpye779fDf4pSxHMqjsnqWziFUsPF9GpGd5bDT9o/f1SduP1
guYbBU0rjhRbRGd5pGY/KG3Nq+7YdK60okETtLcg5Zq6qlmjqmi/kN2YrW6P
PF86ccujyPNlbHSS0KcAkcbQMNRbuMF4L168aOIc47kgsmFraxsQEMBMntcR
KJMbNmz4h3/4B7Vabcrr3WSQChcTJ07EbIUZqKmx8/UycC46aEheDKysrPga
PYdRQCLX2dl59uxZjH3MeELYL9klS9asWbvpuSE3b04IDFxseOtluaWH1c1d
nluz7RLkYKFOSSpZsrA0vPbkY02Pln9wxoD+aPyG0yUWMfLYS+WZZa1X8prK
6jX3S1qdkhSzd+fXtHTP2pk3OTLTOz37yMPak/J6r/RscgMad7mCjWouKk0P
J02adOnSJTaUNp0w/Vy0aBE+fzbSRh+qEwcHhxkzZrARwkWZQbU4efLkP/7x
j7SP1DSrnfIZHh7+zjvvkA8Uk6XNEjgX/Z7AzDc/P3+kfEocowySch4DX1ZW
FjPq90sp65jQRS9ctCokZKP2aeA+fjdujJo7Z3Fv7yuOc5JpSlzEXqwA53FO
VjgmKZ2SlPaJStDRsvpONqopjSmDuGj0pTLLGMwLFC4pqm23KnfdqXJIVJnH
ZAYfKKxq1gTsyrNLVKCxzGOyzKPl9glKBLOIUcReGuVclAAycP369draWjaU
Np2Ki4vnzZs3crmok5OTv78/GzlclBZxmpqafvnLXwYGBjKTXPimun3w4MEP
fvCDo0ePshFSvZyLDhqSTadf//rX1dXCkV5edRxGAb7i8vLyrq4uY2fkieXz
hQtXrQ7ZwJ7+KOg6PDxq7tzFr5ynE+FRqttAYxyTsh2TlY6JSudksB15xs1K
fQD+wRkDNEeIulBmJRDRbIdEhXlspmWsoLi2iZPP259f3dIdsDPfTjivJDQZ
ZhBOySqx7bJiLpezUc1FScg7OjpWr14tl8vZUHLR5ubmq1evmiAdeiXo85fJ
ZL6+vmyEkCUCZfX+/fvjxo3bv38/65N5UyAAtHOgtbX13/7t32j/w0gRD6rG
7du3g4vStSnU5wgCGnqEnmTkGAWQbN1/9NFHRrV1/xTQhyxaFLImJJw9j4sK
etFXc1FB/9Cr1a04WmQVK+wRdUhSOCcpbeMV/jtymzupp2Kj+ii2yUK/Rk9c
FGwTVJM4J36t4+Tz94t60Z35aCynZGGLL/1DAMsYedxo14tKXDQkJIS46NDZ
dMrMzPzTn/40cs8uubq6enl5sRHFRZkhtzExMT/60Y+KioqYafS6BMqbg4MD
eS8y/W2iEjgXHTQkH6CgAUO3FsPB8RKQyGFCVFxcTEt1poDvz0WJ7VzOabCM
lcuSs4XVeUEpqrSIkZ9TNUoBOIwCsl4QfbFM0IX2YZtOL+aiTkkCa7UU9peO
ci5KwCd548aNoR4Xuru76+rqRuK4Q5+/u7u7h4cHG2lclBmUjaB8IE5oBRPZ
OErVmJqa+sMf/pDMqpgOSX4lOBcdNCSbxteuXTMdlzccYwrSflEbGxuFQsFM
o/P5nlyU1t7bunpn7cq1S1A4GbRqVnGKpUeKusVeX8sYX6E3FmgisOVCKZin
LFk1EC4qGuNSWsXIoy+NiTX6lpaWiRMnDt3ZJcnW/bvvvjsSbd1T/r28vFxd
XdkI5KK0FI7R/9///d+9vb2ZCRjAlzYNvvXWWzt27GAjrVY5Fx00qKIqKirm
zJnT3NzMeNVxGAmdnZ0HDx4kR7SmgO/JRYnq7LlTZREtpyVgxySVc5IKvFRe
0cYkX0v8azMSqIHiLldM2pLllCRsBCXO+SIuSov4+P1286PE70Y5FyVA1Ovq
6oZ6CzfiLyoqMoXp5+uC8gwWJ5PJ2EhjTQQqglKpBPcDg2JG3ZlJh/ohD+PH
jx+hqmbORQcNqii1Wr1kyZKRODPlGAWQlPNRUVHl5eXMNITw+3BRCl7R0OWa
qnRIJCKqkCVnW0ZnRZ0XvHtrtXo76aOf0Jgq9G3UpIm+UO6WKuwCtU8Q3Co5
p/TjonIncR+pvWgG3zU1O/piOVp2dDfdcNq6V6lU5ubm+PyZaXz4Awfl39fX
18nJiY1A4kSgbKenp//gBz8Yur3BAwHRYB8fn//4j//QaDQjaJuoBM5FvyfA
Qs+dO8fX6DmMAmngmz59el5eHjON73eQXFQ8jKQVjyNtOVdmHisn4/aOgh0n
hXtqdmWTho0BldqIgNSsRTWdyVfUXmnZYKSYO9jGKxYIXLQ7YFe+bYLCLkFh
GaPwSc9NuVpZWNvR791RjKH2AUp1WFNTg7G7u3tAvnRNCkQ2/P397e3t2Yjl
osxAAr29vX/1q191dXUZhQRS7e3fv/+tt94iy34jsT45Fx00aDAFAfjkk0/q
6uoYrzqOYQeJHKZCDx8+NJ3jtIPWi5KxoKzSNtt40ojqd4qaRWftvSuYTeNH
lowPg1ZT10e9Wd7Ytf1mpf/23MlbMufsEWw6+WfkTomS43fH7aqKJv1S9Ut9
bI0SUAHxMbq4uNy4cYMNpa37ysrK+Ph40oSMrIolsjFjxgwbGxs2MrkTQVoc
//Wvf+3o6MhEdjqcbUHSVVJS8vbbb8fFxbGRY8SpHzgX/Z5Au6NDGIk7djhG
Aehrra2t/fTTTx88eMBM4/sdHBclntLdq11ysNDacEDbKVlpE6+Ysyevq7tH
yy2KmgwMfg1Yr+5JE9e0dO+4Vbn+dIm6UbPmRMmBe3X1rfphEa3dKzSfqDUa
1W0oTQ/3799fWlrKhuaTpDhzc3MdHBxI+2oKH/7AQWQjICDAysqKjWQuygxs
sLCw8O///u9jY2PZMLJB8vWJDPzhD3+QapIkYWTJA+Nc9HtAOrY2fvx4buue
w4iAKFZVVZnORhF8CEuWrF67ehN7vq376KCgpc9yUVKKnlM0WMTInQyns8FF
bUUu2twhdO+92lHOZEYG+mhEdeQhS/dEZd2u6dX06Lq69X9qJV2oTrIJO/rR
1dWVlpZGdnWGblzo6OgAHR2JRI7yPHv2bHNzczbCuSgzkM+DBw+OGzduOO08
U7pBQUE///nPW1paRuI2UQkkAxkZGeCiVK6RWxajAATg8ePHI/1T4hihkPSi
n3zyCelFja6ip0Wr4OAVK5aHsudx0dDQiNkBwcJKlmSq3sBtQDj9t+faxitF
1/OSaUqBjs7YmXuvRDohyM3cGw16e1pMsmVg4Jl6QzdPQvaKiuw+LTwm5hHS
cUI/P787d+6wobTphE/+vffeG4knZ2nEDAwMnDp1Khv5XJT1YdeghY2NjWRn
fojSoramFM+cOQMCfPPmTTbCq5Fz0UGDKgoz34kTJ9bX1zNedRzDjmf3ixor
I/RD3e+5c5fNzZ2OHzvDnh6I6frixSsWFk6HD50Q3tDpn5KZpm031BbRWaLX
SBWxUPGf4NDHJl5uF684/LCWAo8JWjNCIOo9daJqVGgVrc5APPWH0XRPVKN9
meuoBkQ9Ly+PWOLQAUM2hp6ROO4Q8Zg3b96kSZPYCCdRBGm5/KOPPhoGgk1c
V61W/+M//mNoqDDrH6HbRCVwLjpoUEVhBrR3717TcXnDMaYgCeH06dNzc3OZ
MfWiOkq6oqJSJvNdty6it1fb76yK9GfElngHe8+ighLKMC3vFtd2gIU6JpJx
+2ynZKVDgtIuQWEdp3BMUrgkC66XzGMU225UCW/pRv/OQ9NEX1Yp8kxJUy1A
S8RUp3v2lJlWNA8+6puN6qe5ufnTTz89d+4cG0q9KGagv/vd70zn0OLAQcRj
wYIF33zzDRsVXJSJjYJWKCsre+edd8LCwtiQlYvWnnDx2Wefffnll8wELO1/
f3AuOmhIVjUiIiLIwhsHxzBDWhCMjo42un1RdMXoQ9auDXdz869UC4xR98z2
TuIt9fWN03znLl4c0q0RzNEQgQk7XWoZI3dOJo2oyiFR4bU153ZRc8bNKpt4
hX0C6KjKOUlpHq3YfUfYnt2r5T2VESDyTNav7tu7tMqKtoIayWqT8Hs5t2Hd
yeJDD2uV6ra2rp6nIxnVfFSspYaGhqHewg0Wevfu3ZFI5CjPCxcu/Oqrr9ho
4aLMUJDTp0+PGzfu2rVrbGhmIkTVQkJCfvKTn4CBDOl+gGED56KDBrX+48eP
3dzcGhsFH9m86jiMgo6OjgMHDgy18+uXQq8UPXPmgpmZw4ULV5nhA3k2N3T/
xo275hbOBw4cFS2KsnslLTZxCie9Bx/BlY9FTBatyAuBCxpdU4Vdo6L7nmzL
WCV4DuMmnoyKHq2urF5zKacx9lLZ3D35TklKt1TVoQe1nd3iVsbHLS4pgol7
0We9KmB3fuT50nPKhsKaDk3vs602wHYcAc0t6UU///zz8+fPs6HUixYWFk6f
Ph2fPxtpow8Rj8WLF3/xxRdsFHFRZiCKy5Yt+6d/+qehIIoU2/Xr10F3SfE+
OmqPc9Hvic7OzqysrJG+VYNjhIK+1r7+6N/U9/ta8dC2T7W6ykXmF7Y+Uqvt
fam7eT1x3bI53s3dr729o7tXN39fgVW8graJOidn28QpA/fmd3YLuk86X69U
t3luzbZLULokZ9sngvZkCx58RGNBHMMD/UG5Vs3dkuaMW1XLDhV5bs2xjFVY
xSns41UOiZg+yCdtyUq+Wlnb0h18oGBqlJyOoYGL2iUorMBLY+Tgq4sOFcdc
rqhspuGGPX0M7UUH0+iO1vTpqHSuJDMzk3QUQ5dKWVnZmjVrhtrT6FCAiAcI
24QJE9hoYVME2jjKxAV0Kt0btDhKq/MNDQ3/8i//AibPRlHVcS46aNB4mpOT
88EHH5ArcF51HMMMEjl8uUVFRW9EPTIIqyAitxToZVhYpKurn1pdyV6lC6Kn
pY/Ljxw5iYvjmbXS6jy5nreOVdwsbGIGzSctxz8qbRGW7xNVshSVZax87YmS
/htSOYYMOsP5srvFLSCWFrHCUTLhZFmywjZebhWbhdnBuhOPz6nq1U2akrrO
qubuc4qGNSeKXVOFxrKJF9rXJVklS1aZRcnn7smva+tluv7iSvMUcS7TK21D
1d/s1Q5COIcflMP29vb58+cPnWkLaRJ64sSJkeh3icjGihUrPv30UzaKCBWB
BBWs4Kc//eny5cvZmzhYRF0dxTNlypSPPvqIjYptohI4F/2eQAXW1dWNgt0a
HCMR0qblP/3pT2/Qrt1rdQKkt7x65YaZmdPp0xcGngdKo6Gtx3dbrn2C0ll0
Pe+cnG0VK193spiIiqQg6xEXdk9k1VrGKsBFQWysYhW3C5sZX6kfRlBNf5fb
6JystI5XoAnAS4MPFOy7W11c++T8pkrdJoUvruncd69m4cFCu0RQVoVFtNw/
I0/daHAV9Kq2e/a5iY9QlL3Ozs4tW7bk5OSwockwfWJyuXzChAkj0R89kY1V
q1b95S9/YaOOizJDia5evTpu3LhTp06xN1FGiiEqKurtt99+/PixtMA0OsC5
6KDxXL0oB8fwA19ueXl5V1fX94+qurqajEIMlE/q9TONPt4BK5av6+nuEaN5
2RtPviAxXPJVtVlMliwl20HYC6pyAh1NURWKp2D6kEwd6eUQdcixEqvYLFmy
0ipOvvRwESeiwwyq72u5TfP3FcZfrnxY2trV80RUROdKrLAW9546St/1/7P3
HXBRXNv/aoymmJeX+H/JSz7v99KbxiTmpWnyjJrkpVrpHRRFbNi7sSJ2LBQB
QSliFxVsqIgUG0rbXXovyy67sAVYYIGd/5k57GQFpCwMuwvzzWQdZu7cuXPr
95x77rkNjUklcr/bpevO5SUVkuu+m2gHpRr/ZGflxsXdu3cv4c6dB1Cp8KJY
XHknPuH+/UdxsfdysvP0f5oeoFQqr127xufzCSaHVHiLQCAwREKCZGPr1q1j
xowh+iIXJdQftWvXrhdeeAFrQndKivacMHDgwLCwMKLPZRrLRbsJhUKRnJxs
iLMkLPoMpFLp1KlT09LSuh/VkiVLxo0b17muQEUvWTrsF2Rqak/xhGY1aTvP
IJCo5JTXNNuINluKpk314ByJE7T19mZukyWoMfchZ4et/XjmPjxOSTWh4dOS
RS8AS7iq7q+hsEG9PgMLraCinjKrUGFgSqfdXDb5IoWmAwQNYYM89T8cMnmS
hYWFo4mxfWoKF28lJaaamjpYWs6a9IfZYb9goi3/DPoD/BC5XG5sbBwTE0Mw
uXbp0aNHH3zwgSH6uscexs3N7auvviL6HK1CqNRT6n/88cc333yDbka0KyYV
ZSZaXV395ptvzp8/nzB8b6KtgXXg2LFjLBftKjCjioqKZs6cCWSAoHhpNQsW
vQ6xWAziZEFBQTfjqaqqysvL+/bbbydNmiSTyVQdqThxQOTxMoyNbI8dO0NQ
3LTjhoMufSh64na5YLoX5dzel9xoydSHMycws7K6ofXaFXwSOeeua8XTPDl2
AelAXP1jKfNU/eUmfQ9kTueJatefzz1wsySNr3jcuSh5zpfUo9NYWjBpbFQ9
LJDvuFw042jaitM5VzhiNLqgdaf4YFDgSWNjOzs7ZyvLWZxUHt5KTeZZWzvZ
2c01MrI5euQ4od9cFAGfIxAImPY7XV9fz+fzDXHIRrKxffv2L774guijXJRQ
mzpDX/r6668vXryY0NbCE/PHysrq448/hqzrS2aiNFguqjUwo4RC4e7du9Hb
8IQJE4YOHfrcc88NZcGiF/HMM8/87W9/e/bZZ7sTA9bbF1544V//+teAAQM6
XKSJLs3r65Vr1m6dP3+FTFbVIXdtfgyipX5jMqVAJimNKNfSj2dD+XG6kiom
WpmAqtTzufhgfI7U2JtjjVvVH89WNqDzKLbjYhwoI3BLq+cdyzLy5hh5k/a9
u64WJhbK1ayT/Ecgr6eVn3UNTVBemy/mW/hyjb04UOKORzKucSuba4u60LDm
BB49YWRka2s7x9LCkeaiKclcK6vZtrbO06dbHwkIJfSbi6KABvRj7Nix166R
W48xQbRoe9Eff/yx2mDtRXfu3Pn5558TfZeLEuqSevjw4cCBA8+dO0d0/WMx
fFBQ0NNPP52VlUUwo2nXOVgu2k1IpdIzZ86g/JuXl8flcnk8HpcFi15EQkLC
hg0bbt261c14YGhLTEz8/vvv//Of/xQUFLTPLdGP09WrN6dOtYqLI3dDblJ1
todsopyK5pYrlp7KNvUhWaidf5qJN7kKpr6hvZ15MDlVtUqn4AwzH3LRPZDY
fLGCvsWCOWAG1zU2bbtU8MeBFHMoOH9Smz3dKxXON4fn38mVofNQWW0DcFFJ
TUNUeuXasFyzQ2mmhzggPlj58nxul4qqqIVLtPRA/fYZLooAttALetGKioqL
Fy8aooUYko09e/Z88sknRJ/mooT667y8vIYMGZKdnU10hUxiyPT09Keeeiow
MJDou3nF2otqDawkOTk5P//8s1gs1nVyWPRrxMbG9oibwfXr148cORLrc/s+
QuFHIpE5Oi5w3bobfZh0sutAl5Ko+fSLKZ3mmWrhS+6mZOzFSSykLN/aeKbl
6bZL+cbUgnqTQ9zoDLXfe7bv6hUA1YxIrXA5nj3dkwOihF0AuUOBySHOFI/U
DRfy65TN1cb9evGv+1KmeqaCyAAhV5/NuZMjE1U177SlSUGJPsRFaXtRIyMj
5uxFVWr/otu3b0fGa1gDN5INd3f3jz/+mOi7/ApBG45aWFgg0erkJDuaiQIg
l6BVEH06o2i9KHwsileGVaV1Dsi0oqIizMYmFix6F9CtwW95efmPP/6YmJgI
51AVtYsKH+RwOKWlpcSTOz3sH9AOMDDwOLlkKSePaK/fUNuGagAfL6qscziS
buyduvJszuFYvvetYrhYIa6sq2tv50Sc+w2+WzbVgwMsaKon58QDcq1TY1+c
t9JnCKTK84nlc49lQEGANGHkzV14PDulpDpPVCuUKm+lS3NFiqj0yiUns20P
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
AwZlN2iS8fHxTO+Bgj6dDHHcwc7z8uXLwEUN0T9qd4CqThcXl3//+981NTWt
1RqYOd7e3kOHDs3JySH0UsPQ42C5qNbAjAKZDvocQ9wRmDn0h4ajJ6DtRY2M
jFAJo1eZT3PRVWdzp3mSik1zH5JPahx4hWdG3SK3UvJPg8PmcJoVtYl580GR
UiuKnVr5pmnGYAFcyIuz6ER2dV2zS3wWzKB5ZEgqqgKGOc2LYwLygm8alAj8
SdpR+PHWhuWdSywvENWSh7gOzuEKFByQVSgpKFMoWagDUw6mzg/JFMioreTJ
MahpzZotU6dZz5+/0sVlzZIl6xYvWbtkyfoFC1dZmjsaG9sZm9g5zlq4bPmf
S5auX+iyeu7cZfPnrZhLulwg1Z5WVrOcnJYsW/YnPAhPwbF06XqXRattbOeQ
dy1nOc9Zunz5Rvru8mXrXVxWGZvYR9+OJxhoLyr12qXff/+dubVLhu7rHonH
1atXgYviVryGlX6tQRvKDhgwAHdtbq32pBUdFhYWI0eOxO0w+nz+sFxUa2BG
lZSUgICDbsbZrCPUmcDn8x88eKBQKKKjo+vq6tCMPzMzMy0tDYgTsHe4ePv2
bWDy0J0WFxcXFhZCw6yqqoqJiYF6GBcXJ5FIOBxOdna2UCi8d+9ebW0tRAW/
cC4QCEBahLsQJjY2FsJDVNAhJyUlFRQUQGwPHz6EmOEivAXeBW+E98LbIQ13
7tzBV4NACimEdObl5aWkpEAJYlSQADiHK3AdvwJCYlTwLMSQkZHR+ivgjThF
rhNAtoSFhaFyXq/QzEUbVKvP5QBdsfIjeQt9mFMHkEkLXy51Qp5TGjbyMCMv
kgecmPmof32oYBqRWPpxjVgu2ru4wq2AnDf14Rl5AyPluIRmBcTxeaXVDQ3N
uZ9R1uzjTtmo4pZWH4krW3Qii9q2ngsM1vFoRp4Id26l1uA3Na1d57p+vWtt
bV11dY0cegF5tVxeraip3bplN7l3kpm9l5c/3JXJqiBAdbUCblVUSJYuW2dh
OdPYyDbs3CXyrlROPkiFKSoqcXJabGk5y9x8ZtTN2/RdiEGhqE1J4ZqYOMTE
3iUYk92gGxSLxUybcBvuHqBIPCIjI4GLQjdO9I/RE0sKhpXnn39+3759xBOI
KKHeDA6GnnfeeWfWrFlEPzAcZbmo1sCMKisr+/PPPw1RMmUIUKPc3Nysra2d
nJygnxw7dixQx8mTJ0dFRcH19evXAy/95ZdfgDh99913ubm59vb2UP2OHj06
e/bsrKyscePGwa0ff/wR2N3KlSv37t177dq16dOnQ/uFqEpLS42MjECadnd3
X7FiBdBXCAnh4SmgmhDDkSNHTpw4YWdnB0wS4i8vL//111+BQ0IZwdtv3bo1
adIkSM+3335bVFQEUuf58+e9vb0XLlwIzHb8+PEwfEyYMIHL5S5YsODQoUNA
8CAM8GT8CngW+LCrq+uGDRsgTogZ4sevgBi2bNlC9HodoJXz+/fvB7Go9xOA
aNGjqu0WcA9NVX1D09bwfPuAtDnkRHzG7MB0OJyCM2YHpVNHBnkeSJ7PCkp3
gj/xOnml+fpsvA6PU4E1jzkhGTOOpK8Py2+eo2ebIHPQcNl0nVcx91jm7mvF
cdlSmULD2o2ab8wR1jY0Pra+Xl7bGJ8jdY8sWhCaFZdF6sFof1zwwOo1m//c
sK3ZNal6yhJq0ebNu83MHIxN7Ly9j9BTmfhbo1AsXbbewnKGiZHdxQtXaXMa
vCsUlDvNdgEuamE+Mz7urobtDRkJl5duamIfw6ReFH3dQ99FMOnrHoTiKVOm
GKK9JebJjRs3gIv2jjM6fQCW2pgxY37//XeiI3qJWQSD0aBBgwIDA4m+bjiK
XwfDN3BRFOL6Q5XoQQALhQ6H8SXMBoXDhw/HxMSATAdtDfoZaIAg+YKkU01B
qVTCn3CxsrISqp9MJqulACfwJ1zEWxCsqqoKwsODmuGhk4crEDnchfjp8HDe
IirNV7eICm5hVBBYoVBAIbaICq7AK6BYIQydqja/AqPi8XjwyYSOuCgkEsgz
MPneTwB2ICACAEXHKzt37gwKCmoRTNFAyOuJiiqlRNEkV5Ln4iol/OJRUd1Q
RQWQ1akqaxqqqADwK66qxwDVDWSYimply3VPcFQrRVX1EnLtEmst2ktAd6FA
L+krjY3Nfu2xCAoratE3LLnovom8S4fMFzdbNdPrlkguunrz5s07Wr9om6u7
mZk9cNHD/sGt765YucHC0tHIyO565K0Wt2pqquc4L7a0cLSwmPnwYVKLu7l5
hSYm9rExDOpFIdri4mLm9gDFZg6y8LFjx6AvYugtzAH7jaioKOCi/WG1hYra
2RNO1q9f/8orr8DYQctH7QBzCbrTp556CoYYQs9MsHoWLBfVGlgrsrOzv//+
e7FYTLBZp8bVq1fR4rr/ZMipU6cmTpxI6IiLAkNOTEzUiXKeNrO3tbUlJ1fl
cnNzc8gNqAAHDhyIjo6Guzk52Xm5ObnZJFWuqZLlZGVkppP9qrCsNDszvbS4
CM7zcrILC/LKBWWNyrrC/LyCvJz8XLIKlZWW5OZkwbmqsY9PURkMcD5IWr/j
ckFAbBnQTvXlv9zd8yX1Tc1TjX89l1Za7RFV7HI8a3N44e1MSaPaLRR0pH/+
uW3WLJfQ0DOhx84cO3Y6JPTUsdDTIcdOzZ+/wtIS+KTj8mV/wpVjx07hcTz0
zJGjoY6zFlpbzTI3m7lp80549lhI81049/E7am8/19pqNjy7Y/u+48fPhoTA
dSqG0DP7D3ibmNjGxtwhGNOLQluwtraOj2dE9Uq/hc/ne3l5GeKEJvYb0D8A
F+0PHhHxe2/evDlgwADUWnRSyYkM1tHR8a233oJK1YcNR1ku2k1AVSkrK+vD
0ooWmDNnTlhYGBpga06r0bNsmrNpmivTu3pL80/N8C1CMvpqvAXVQCe6cUyD
SCQCgQgt4Xut/dITqQTVgWzevBkSkJCQsG3btoCAAFdX1+TkZKCjN27cWLFi
JZfL27x5S2FR0Y2bN7dudfX19RUIhWvXrcvIzNy3b3/07dsLXVwePny4b98+
Xlra4sVL0tLSXV23RUff3rvXPSU1de68eVnZ2Y3oxlTDv71K7Wud6U3GWSAw
m3NFiqWnsqd6php5cR2O8LyjSzLLHlMACmX1jept6OGR5OKq3ZGFNv48Yy/O
pIMpVn5pYYnlDWrmCsW6adMOY2PbGQ5z7e3m2tk629nNsbWD37nW1k7U6iRy
Rby9/Tx7uGXrbG9HHra2c6ysqMXyVrNsrGc7wF07Z+pZ8q6NDdydbQOPk7/k
XfpB4Kh2dk7GpF6UQS4K/PDcuXNFRUUEM00S48zMzLSyskLtq2EN3NhvACsD
LgoDKGFo6e8S0AFLZWXlyy+/vGnTJqIrs+04jML4MnLkSHQA1VcNR1kuqjVo
X/cffvhhf5DsOo/c3NwOTYA6f6tHImHu1diCjh49+uWXX7b/CHOAqigQCHTi
zIH+/PDw8KCgIGChUVFRy5YtQwMnIKJw0dvbG85DQoK5XC6MPkBQIyMjgakC
IyUoH4PHjh3D8/3793M4HE9PTzg/efIk/HnmzBmC0rtCQyPazF40YlQLCCyY
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
kHE8yF3qEFeFou4EkDH6wgdZVM2/4GDoHY+QKMOTxbCiB0mYuCZZRxWYRvJW
e3MPnuPv2HFw08adR85yVH24WC/K0/Ifg5hOHR0d8L1Avk8VF9OpsrISfoT2
9vaC0e15GBkkMNd2UmZKEsyitMUUJtMdr5ZqL0FzEXX8dRSUHhKj9TTa5U3Q
0yot4HGlY7QI/Zm2+AvWfL5CH1NiSpGGmZF5wTCNXBpWajMd1Qsp1/dT0NMi
33dCxkCIhfD1k4zmW0iBqfkG7bFDioukXyAfLxmX6TX/puEG6v9kLLVAd0e/
NekjS8ZGoRH2tNo/kFJU9R/MGQfp77IN/j971wFQ1ZG13d3UTdkkm6zZZLPp
MX33T9vERFOMqTZ670pRQAQRpUqRIiAqiHRBUASs2ABBxN5B6SAICFYQe4f7
f+8e3+RK8wHvPUDul5fn5b650+7Mme/MzDkjeT49okXntRazj1q0/t26YDL3
gPKxLnDz5k2QtAfVSIeVKyIignaHnjp1ihNMh3aI6dOnb9y4kesHXNTAwOBP
f/rT448/bm5uHhwcHBgYGBQUFNgR5s2bZ2pq+sgjjyB8t7go4datW7RSpmRQ
MRsbG3/55ZcubJdkx103wMz9CUGyS0sS7fr1mWPH62hrmWpqmmhqGsvxo61t
Mnac7oYNmb0vggi5QLZ50RLtNly0O5EHZtapLCo0jC1B/I4pFTOcfKwkXPSw
VgzPRaOKdWIrQ5ZlByRk68Ud04u6Z7Wd/tSKKJq6osp/blho3Br9hOqZKSXg
opbmUz1Sj6pHlOr3xX5R6juQHnl5eYrbNs/mB+zs7PqCi979akk3a/H80x2J
tfuzLT6PceXr+F/u3H3Bl8+2RPznNriixOPTE3dC/sVdqOMDdH0EOW+7FPfN
bZ+H7/g/J5lWnfMYV5NHMd+1yL5y5k7QUCkXfaIldBh3+SQfYHDRj/6E1rs6
SvriVtdxknORLjdLuSgLwr+73JRW57GtIVatDVX8TamRQAfvTuq+hWezLcn+
LTN/bU305m5el+q9d5+8a2+wPrLVZVxrhEPreYkNy+BxJiv16VT63nvvPXg+
ncjIBRdVVVWjRo168cUXk5Pp/Pr7b38qKSlRju0S4idrow6OEOLfjpGR0ZAh
Q5iZ/32xZMkShDcxkZwH0a150bi4uE8++YTrozaAPDQ0NJBPpx5ngN/k1cLQ
2sYole/4mzdna2qZGBtZGRpaGhpayPFjbGypqWmK+DmRi/YPKI2L6seUqEeV
OqRUODp5W02UcFHt6DL9qCKtyCLLpIqFUckuyw5rRJaSUbzktPqoEv1omvMs
Qsg5KYfMTS09QpIMEqrARe3tXSaZTvZKK1CPLNWXebOo3Lko+GFAQEBxcTGn
GJnAZl/37NnTFzMhd1ddW1I1W3ivTS0STvhXrl5y3J7EooSq787tO4mj7/g8
LFln930K7LHlbCH/dEtX1Uv7RaO/uOP9kMTXvd9Td4KHtp48cPdBejnXm+7M
f7VlzpN02NOd4Jfunsr0AA3B/QTMTqQ9Ohx5JW/n6iXp9T3792huQ/LDNem8
jfRxsqvtKJFWdoCJ5P+rFzrJpjQiadJddODO0xrYAGMB73rAisZoWGho6F//
+tcJEyaw6dAuSsqaJR2GzinYp1ObnLTpFPSrlpbWs88+e+3aNfx548YNsLXb
9wJ38Csubt26hTD4fuSRR/T09LhuzosiHsWd99cF2vu6l2NTROSokGtXr59v
ar52VbIda9OmLeoaRoYGlvr6Fvr65nL8gI6qqxsj/h4XQcKeO/jIqzIGHZTD
RceHFU6ML5uzYm/g+oppM7ytJk1xu+vTqVArutQpKT8iLtUqsUxbMgtaIjGZ
5z/aEZIZUY3wIxMTj/mHp2ioaPuHJRslHCMuamps4Zsmoa8GMbzHp744dwlS
xd3dXS5LFR2C4iwoKPj8888VZ7vUKSitO7dakn674/3obf4A0BbfJ1ob+bOG
SY2l6c1VuvzxSX+/4/cMiGXr8W1/BOgy/jtRn0o2gs79u4Rwhr3T2nxc+iCf
9PXmlqjPWiTHgD4jOfXJ/5nWiyIX7Ruwhtd6d2eo9OXefVl/zIreDdJyhz15
37gF/zJG275zSqdkW6UG+x2EeZDBjMq/+uqrc+ckZ90+APOibPG9pqZm9OjR
f/vb3xISEugn2blZXV2don3dU8xgSvv27SMO1iY5ejvq6uovv/wysUQUZOHC
hZy0IMSTV69eHRgYyP68fv06iqyrq8t1c1505cqV48aN4/qoDSCrVVVVvTGg
Q7aPFBRlZeWuXbsxISE5NDRyzpx57u6+s2Z5OTi4Wk9xKDgsmdDYuDGz33JR
uaDrzSeDCsrhomNDj9osr1ywKC4svWDqDB8rc2uPlHxtibVRoU5cpX98TtCS
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
t9I6puJkAlKhFWfZHyGNu80WPjbz2Sr1nctJ5xjbb88TxsDCkxhkj1D49jG0
8CfRs2oRRsXA5mCF6VLINgHaTKWyUkARYIetCPPA8tzEo30eWA30T8ohR1Ax
MfKCboGS0f5b0DzQNhBCcDyOP6WI/MxHRUWRK/J169aRQ1dwPLS90NBQ5qIc
pC4vLw+sIzExkeM95NPE6bZt2+jYejC6tLS0xYsXg6MWFBSAl5KJHBLF6Imn
EBvHN+mcnBw0EnojmZmZdAoYx+/EQ0jERkd2Ioy5uTno7sSJE2l5dM+ePe7u
7qDTtra29CpBMuvq6hA5GcuApqKwIJbq6up4fMOGDXRiFOLctWsXOPOmTZso
LZBSBHZxcaGDxnJzc8nRWT/Rp9qArcUcPHiwbx3nCqdDhw4d+uuvv9JhZ0pe
iRDOi9L05n17NHFRtMk///nP5C/0rbfeEkZFs5RM7FCEq1evZoe/UwxBQUEo
eG/W6NuvTMn+IMfvMaA99kpGq3S/6Lhx42iVoTud5Y9iXrt2c8YMD5BGIyMr
ff1JtBCvpWVyOP9IL3NYXVVDFJSno+aIX1vbbMrk6eeb2not7qLmhSt0TY3N
WVm5xYWFi3acVl1UZBhTqh9dQh/DmBK18KO7qiS2S+rhhff+VKq2uCgoq5a7
y7JEMnofyLpGT2xf4typWDOySDOiRCOyRDOqVCu6XDumQjumUie2QjcW38e0
Yys7+lRox1VqxZTpRhZrRRQ5rTw+b8kGB0d3i4k2lpNsZjr7BCVkWi8v14gs
MogunbKsYmrKMdsVkg9/Uck+Nisqp6ZUWiwt1Y4s0o8r912Z7+49b7K5tbW5
tZ3drMClWZOXV0lKEV2maC7aKnVtMWHCBLLZUcT41SL1dT9s2DCF7k2iaNeu
XQsu0SaVbqm9EN1kOI/hkliKLI/fd3Kgw1+hBRBzaPPr2bNnaTUtjUe3ivCA
gbF9cDBwPF1dXVROWVnZrFmz4uPjiRaCdoKtIQyIHDgnLlauXOnj44ML0D+M
vCEhIcQ8genTpyMqsFa8ZQTAfbxlXGRkZICm0rFZS5YsKS4unjp1Ktot0sIF
J+WicXFxuOD4PXho0mSJxvG7COi8To4//ROvD7yRzOKgbpiYmBBzpk2Se/fu
RfaKioooZgAB6uvrl/IA+0UxV61ahYES+UevWbNmDR3KALq7c+dOT09PtBx6
0MzMrLq6GjWwY8cOlGLLli3k6Kw/c9ETJ06gKmScBpQ7mAYHQTFmzJinnnpK
aCzfVx0tPz+/veDqEMQk0XKGDBkCLorvd955h+tEBFGJGhsbP//8c0gS/Hnz
5k2owOQA5MUXX0TjvHPvQTb3RZtUerBLmRonaVWyFFkRQCVAoeu+oQRNBUga
ES527zqgoz1JQ3LW0iQd3Unjx+lGLI67dftWqwzHDHUBPL4sKXXCBD0dHTOQ
Uk2J51LDjM2SHUF/BBGw0C4qsFV6bin/7J268zcK66+WnLxW0nCVfQrrr1y8
dvvi9TtFJ/DTH/dxXVh/ua7x+l0eOkiHoG5AZtulu6veIPx6dz/8voioEpqX
5q+L2GaJjj5F/B5OJFECKmuScMx5ZYX7inyPlCOz0ioM48s1Iwv1JNstSrUi
CjV4c6e7nwjhR/KTdiS/ZyCqSCu6zD71mHvKUffkfLdVFcYJFTwRRX46Poxe
7vOiaNYYH5k9hYIAAYihtlvjI0ZbMAraVwZBTcMHxmWM/lCoa2troVOTQShk
WmZmJjod7qupqUVGRtJmQozLq1evJmlz+vTpmpoaxEOD+P79+zdv3sx2Kx0+
fDg9PZ022u3bt++nn37avXv3uXPnmMe/rKwscAPh6Hnt2jVwANAG8ASa7OL4
c5QQjJwScPwZ0xhf8Czi5PiZNNAPmg6qrKxExsAriItCnqMskI0077dixQro
7MgPRm3avXb16tX169eDcVGeUXwkumfPHhRc0f64+hCMukyePBkVjjago6Nz
5MgR3AelhA5FJ7+jDvGicQFWSURx+fLlIKu40NPTwzvatm2bvr4+ht3y8nK0
ELxH0EUQTo73skVnuaJ6nZycEGD8+PF4HXhBP//8M5oB3jIiuXLlCggtiCje
oKamJl5rSkrKp59+yrhobm7uqFGjqEloaWmhvSFaPz8/OuDV1tYWYX755RcQ
YNBdZBg30cBoe0B2dvbXX3+NR8CQQbDRDEBBOb4LjB49GsFwB9wDxbexscFL
R9K4QIUgUeTtDn+kLJ1di1ZtZ2fH9W8uipKiZpSwY6c92Kwj6v+555779ttv
qdezRZa+4qJubm4y2tET90OLYmv0b7/9NidYc4F6ZWlpifZPs464A3lIhlFt
4mGCq7sgvoSWaWRkhNQdHBzQGmVfrKesQvp5eXlxfbRGj+YXEBBArhJ6lIG7
hd29e9+MGR6mZtZWkx3i4pZdvXq9pxHekz0oByuSV9tYzzAztXWwd83IyJH+
1K2YW1lW738q0/3jEXEfyM5FJUQuipkyMbInsWPSiWpzs8NPCf/hH+Gd56tH
FKlHlqhFluBCR8pjdbtisxQJC1YC9qvJR4KPRkQxH0nXeZDzvCjG5eHDh5NR
hiIWfFukhpwYiMmm+H5KnCQ8uamfO3cuZB2kKG2Tw680K4Wh+ffffwedMDU1
nTRpEgZ9Y2Pj6Oho0AAQCR8fHxC2OXPmuLq6IgyG9YsXL2K4/+233xAhwpuZ
mfn6+pqbmxMJCQ8Ph+iOjY3F/YKCAoQEqQAzAaWkKSZPT0/yPG9iYoIiUP5B
rREhfkJCBgYGICeg9Ihz3rx5CEz6PvgS8r9w4UJDQ0PwapBG/EncGAFQ5+DG
dIwpBg7EDxZtYWFBnATVBcIMpoSb4DMgG5CceApMA3/iPmgMqoJS7LpWBzSo
XKBwqAGUHQSSWikuiLAhQEJCAhgax5/tTg5d8/LyiGrSoasIgwt7HqQpgO2T
VgJNgY40wsCNakfzW7x4MdJCc0KTQA1jyKY18YyMDNoJABrj6OhoZWX16quv
slPmQQvxloODg3EfKgPHe3THUIuQLi4uaB6IB80VjRN30GbQGKg9g1TgbQYF
BUGRQWaQEH6iM+6R0Pz580GzoYJhuIfGtHTpUjRRRIXwjjxokRF5JnvqQ4cO
0W6E/twe0B/XrVunaP23DVqlJo1Q99TV1f/+97+T2sL1j721svsXbc9FaY0e
D6LlQDdhvpsee+wxciUKfQdtEg1plQB4Be1vdgEKCfHIlF/KAwGaGidzTbI1
etlPd5Ij2MCHLkYO+nrcWehBtOQTJ042NTYLb8oFFy9cPFFXf/UqecyQQ7TI
WktHH+IRHf/UfwVJv4PMXFT+Hz1mdNaLRP9gqrJFIvd5UcgERdsz0oShLDvE
SBSD3WGA5ngXnVevXgU1JVmHgb60tHTt2rV0PhEEIzmHByUAk8QFTW1VVlZC
JlOEs2fPTklJATmho5RA8MgtM0oN8gDhCRoDfojxcebMmURg6JRksAsPDw+I
cTpqmeM3ANAJLBzPRUEXiVj6+fklJiaCEZHZCMfv/kL8kNW4yfEu+8BDEBhM
mFzqISS4KNgFTd8he5DwCABSjRyeOHGCZtIwXCLmbdu2gY1TzMgbxiyMXLQi
jPwg5v45CSZfsDPcUVhwM9A8op2yEwnmBOm+gwUbbbvYi4VmuXPnTnxT5YND
orWwZ9mD7MBrdDG8KYyAMs5j3zcP7Nze/kw724DqCgTgxx9/VMTx6x2iVeBY
A2T+xRdfHD16NDOW7ye1J/u5S51xUQBaFS3cP/TQQ/TTK6+8gjJClvbAfX1n
QO3Ru/v666//8pe/gPHiGxKbk3m9nl7H8uXLofXLUmT5gpJD/9q7d297NwI9
i016Lcfm1HqPp/qB4z14MKMPuWiffOS+X1RTU3PHjh2cIn06gbkFBwfLYrTI
lmWnTZsGPhkaGoqnKioq8Gd1dTUd7gkhBmqK3GZlZXl6euIClBUkDT85ODiA
+EHfBz/EfbBfcDlQWbBWsBfc2b17t7OzM0KCZIIb4AJclI6GBw9EzHgE9yGp
wEVxc8uWLeAYEJ4giiA/oBaUQ4xl4MOQvQiPcQT5QWDyW4UAM2bMAKUEDUZy
uHPu3Dl7e3uUAlz67NmzCODt7Z2RkZGfn08GL+vWrbOzs0OetbW1QTUpJM3R
If9gniDJiAfJ+fv7o3Tx8fG4gwDIhoWFRd+agSgUrVIzNPqTLgIDA93d3Wlq
kZMyilapRRjXkVVFG/MxtiYrXJwV2nowAtNFVMIs4UWjrbJstH8QuUV7IOPx
NkZ5bE8sQ2d5a5MHtiraxkZPIW9CfkBzhUBQzmxki3R3KHTDCRMmPP7448Lp
0P4zskPZTE9P53oxLwpAyLCDPv8kRV1dXWpqKtgpHbrUS1CKkFRI7ptvvmF5
gPDkurl3FPXf3keuEkAvHT3xhx9+gATmek3wpJJHvv1OMlkp4bYtvVxeF6E8
iFy0N8C4AIolu5vl7oLirKysBMGT8dwljNpkFIwLMzOzlJQUjvdh4ubmRp7A
ae2S48+poRPnwUVBUzn+2M1jx44dOnSI5jY5fiPWypUrt2/fTnuTwDxpiya4
KB6Bgj9u3DiydwbNAxdF9mgGNS8vD/QSP9HUa21tLWQ+raMBkPDq6upEAkFE
ly1btmjRImYEAXp/+vRp8g/J8c4AkRZ0cENDQyLkyB4yf/jwYXBp8Mnff/+d
prnAb48cOYLqoolQRIgsgakyuxhUCOTn0qVLY2Mlro/xLGJ+gLkoA+NdNCfZ
sxg6vO7uI3QBnWLBggXMMZGQu7YPTBAGkD0PnWWp//Ao2UFEq6SkZNiwYbQ1
WqGlYHQ3OTn5hRdeAHdCz+KU5Tu0W0DGZJwo7oKLBgQE0M0///nPREpxDbED
6YT7YJK9nBEFs0WciJwk5IgRI3rGRe9Ifd1/+umnshRZEUAeoJ70ZrN9L7Mt
tFTiOjI9a3On671tvcmJCHlB5KK9wfXr10GiyMu34pr0lStXQOruOxPSKvVT
BEo5Z86cnJyciRMn7t27FzfT0tI+++wzWsaKiYmh1XCw6OnTp+MC/I1W3sEn
wVovXboELgfimpCQALF5/vx50DlaDQcpJZpXXV2tra0NBjh58uTw8PAVK1bo
6uqCuILXge8hOXBFZANZmjp1KtgmYv7kk0+Ki4spqydPnvz+++/ppE7yXYm8
IQay4CaGjAcNDAxwB8yTHFmDnXp4eCxZsgQqeW5uLorm4OAAVoMHyUYbxBi/
YlRSVVU9cOAAXk1YWNiFCxf09PTAP3FNZwDNmzePeG9VVRV+GgxctP+AaAzU
n2eeeab7PmFESPRfKL8KrTQ2P4zOhW7+7LPPkssFrn/sDmVgIheKLVRsTmaf
Tu1tl1olB6Mfe/7554XskUgjBItcuChAk660IarHXJTQt2eAomEMHz788OHD
XF/0394Ptd2NQeSrSoDIRXtab5Inr169CoLUs+MnZAHFmZ+f/5///EcWn04s
V2CDoIh0IBTHm7qDhkHWIQAGMtrude7cObKkBqUkVgDamZmZeePGDaRF3iDJ
Uwq4Im1Tb25uJnsTkHCaDkUkIKJ5eXl4FuwXmjJo6o4dOyAniaIj8vXr14MW
vvnmm3QoAMdPqyI/u3fvBnUkU1yOn/+MjY3dsGEDTX6C/YKIrl69mg7oQc6R
BO7s378fj9AmVcoM/iSzFKjqZBCN8oJgs5LiArwadUK2/Ei9vr6e4+U5O5hS
hHLQIj3I8tVXX6X2IHJRGcH2i0IXU9x+UUbnli9f/o9//GPUqFHsLKp++6bQ
zZmr4a5DdsZF6T5kCygWGOlLL70ELZvERX/jovQW1q1bRxMIfbJfFAoROi+t
sCgtA8KEMFhs3Ljx4MGDdBMDFgapFoFjWIwFeH2tAs/Ywi1JzL8W/qytrUVx
WDDW/oXB2s+7ipA7RC7aG6ChgsyQyFIcIKMgaXvWF9C/QMwgVzMyMrgejfty
6YNgg+AebF4UfNXU1FSYRPv1FJBV8ubUdR7a/9R+saZ3eRchT9DrAKH66quv
2JpvX2dqYICqDioYnW0q9/jZ7lAomKqqqo8//jjZPHL9bHcoA8vSxIkT6ejY
HsyLsjV68mUHbRqKObOy5HinE/2Ki1KpQcbWrl3b3RrrPSj15uZmCHCaClBm
/6W0kpOTkfr8+fNtbGymTZuGetuyZQut3DHExsYyN8KdgTYs+fj4kCIjom8h
ctGe1tvdceGHH36giTvFzYuCTH788ccy+rpn5hst/MnIHL91kxzvsABtbDqE
u/WEJidMx2z/CMfdYznCdExOsJOHGbMAkFrgouQ5ByFRbzk5OfST0KJE+OD2
7dvBYNucl3RHeng9KyYnOJ6+RXAyFAvTvjjCDW8iEeoToNrBpsTK7xaoMZ8+
fRqjJ/MDIC8wFpeWlvbiiy8OHz6c1jX64e7Q9gDrYJO3XYdsz0XffPNNji/1
hx9++O9///v1119/9913hw0bhgs6fax/clEQZnIzomRQ6leuXAHZk/F8Afkm
3dTUpKGhQfulOd49MoaV3bt3u7m55efnp6am0i50jDiNPKqrq/fu3bt69WpS
36D/1tXVbdq0idxro86PHDmCb2jHGG4yMzMxMLHBBX/u2bMH4emUjX6ojj1I
ELlo72qvFRqiov2lQ3eD5OnuTi1FdJwexEkDGcY1yHniov1/aBMhoh+COg4d
XiDHc5eYBopBXFdX97nnniPbRq6/Toe2x8KFC8lgswd29O+88w7K+M9//nMI
b17Uhj2eOnUqJSXl4Ycffvzxxx/uNR577DF8k2VoL9fowaYmTZrE9dEa/bVr
1xITExV9+HX7pAEkbWJi4u7uvm/fPtLIUG87duz4+eefAwMDPTw8rK2tEQx6
BDSUbdu2jRo1avHixbNmzbKzs8N9JycnPT298PBwRJKUlIQ7RkZGiNPb29vA
wAD3DQ0N6ehAT09PBweHRYsWjRkzZt26dVw/2yz94EHkoj2tt7vzot9++62M
R370ABRnRUUFOk6PN+e09OnB61QEaKNsXpRNTt73wQExDoroFuid1tXVqaio
VFdXc+JsQzcBObB//355GdwJjeWHDh0KacYcmA8gnTEgIIA2ineLi9IZoG+9
9RYKq6Gh0X4ac9iwYWAp0dHRvZ8RFQJpcb22Xbp06RK0kp5XWU9BvfX8+fP6
+vrK3+9NqZ85cwZUExnQ0dEB/0QbzsnJoTrkePfaGJf9/f3BRbOyssgADQDn
RNt2dHSMi4vj+FEVjzQ1NU2cOPHGjRszZ86Mj4/HfTQkENeamhr24IwZM8h4
VuSiCoXIRXsDWn0ml7+KAHW9kydPzp8/f4CeVinkoqLdtAg2Tw7mI7aHboEq
CgLn008/Ze6wehMbmw7V1NR89NFHg4OD6aeBMh3KsHv3btrhKeMaPZ1HL1yj
hwxfunRpZGRkVFQUfQNk+YgKj4iIACON7DUQJ6Ii2jxy5MiecVF6ayBOX3zx
hSxFli8oOWQVXE5GN4PyxeXLl9mK+cGDBydMmLBmzRpoZ+T4GjoauCUCEBfN
zMyEnkIbvXx9fXfu3Ont7Z2Xl4dgoNMODg5gp5aWligIzaOiU2zfvh3X2dnZ
Pj4+1EfwylasWMGJXFTBELloT+vtrsW6jY0NnVysiCG1VepYOC0tbYC6HhK5
qAghGBd9/vnnyRWD2B66BdAACIReVhrjD6tXr37ppZe++uorcvjWt2so3QUr
haGhYWpqKiez7RJxUTYv2sWe2G7NVcoO5LyX86It/KGlishb12A+ndBmFOdA
pkPQyy0pKVFXV2eJzps3DyT/8OHDdOQ0wkyaNAkdZO7cubm5ueCiGKApJO7X
1dU5OTlhMOV47yvm5uZgtrgPLurp6Unrm+CiHh4eRUVFdBgWx1vRivOiSoDI
RXtab5Inb9y4QSe5c4pRD1uk59H/+uuv9z2Pvn+COaJ57bXXRO4hghngTJs2
jTxrDbgm3Vdg7rA++OCDHhhTMFM+2v1SU1OD0fbZZ58VGssrINfKADiGjBto
hVyUzJHASKEmv/LKKy+//PJL9wI3//3vf+P7JfkBqfzrX/+CMHz00UeZNVMP
5kUTExO//vprWYqsCCAPJ0+eVDIZpgaMpMEbLS0toX0EBgbq6OjU1tZu3brV
3t6eMqarq4vegTAgonl5eSNHjoyPj/fy8iJn2o6OjuSPGkQUMaAvaGlpgYuC
o27evJnj1+jpjGxXV9fZs2eHhYWNHTtW3C+qBIhctDdAZ1y7di3t21GcTEAq
SGKAUjiRi4oQIUdcv34ddLS783VCxxE0pIaHh3/22WfkYXhg7Q5lYCJXQ0OD
7E26NS8qF9P4XqIHXJSZk5NLJSWDUm9sbBw9ejT5r1b+flGkmJubGxMTs3Ll
SrLlJ3t5CoDecevWLXI5Cw7p4+Oza9cu0E4ydHJxccFT69evJ49PaDAI38Kf
B02enaDUVFZW0pi7f/9+RAvGm5WVpeSSDkKIXLSn9SZ5Es1bT08PTZ1TpO3S
oUOH3n33XRl9OvU3MC766quvHjlyhBN7tAhevaqqqqJDDUTICOr7NTU1Ojo6
zc3N3P2kQRuGWV9fL3SbySa16AgMheRYWSgpKZHxUFQhF2VHz/+5L9BjLkrv
NCcnhyb6+mS/KHrujh075OjMofdZ6hDQUOiQQQa8euT8vg+iaJaWlqCsGzZs
wCOKO1pCBIPIRXsDiAVI+J4d8C07oOVB0g7QjkCSE9rlm2++qXw9WkR/A2sP
b7zxhujjq1tgu8cXL14su1cNmirEqOrj4xMQEJCYmCh88MGofAcHh02bNnEy
29EL50XpmHglA0mT/6gec9EDBw4sXLiQ6yMuevHiRRcXl77yg8GcWrcIzqNv
4zKa7O+g8B4+fFjoXHrv3r10hC6bQmd+XdpEVVdXl5CQEBcXh/B9UszBBpGL
9gzUXNElv/7668zMTE4xm0kolaNHj44YMYKWGAZcj2Dzoi+88EJfnV8sov+A
cdFXX31V3LPRLTB3OkuXLiUT5i5CtvIHrNMybm1trbe3N8f7hDcxMekn01ly
RGpqKrWlHuwX7Vv0eI2eNkn2tuK6j1bpmZteXl7kZ+BBakgMbQr1QJaxv4Fx
UZtBw0XVI+Tp676xsVHRS43Nzc1btmxRkEWnosH2F0F2ibYqIphu8ve//12c
J+8WGI2fMGFCU1MT10lXYjZK6G6jR4+Ojo4GZ3BxcQkNDY2Pj29oaAgLC+vs
2QGKFStWyLj/R+hflLjo0KFDlyxZEqtcJCQkDBs2bIjUlr8HtktpaWljx47l
+ug9YsjLzs6mDZb9uSG195AgPI+va7QKjhRUWAZF/AGq5vNXblslVqiHF2pH
FWtFPsgfnajiCWFHt5ZJOlHv94tCPRwzZoyMbpZ7nApUYHd3dzrCTOwXIh4A
XL58ef369Q/eBJ0SQFttO1uFYZVZXFx89uxZkC6IDvzp4eExZcqUa9eugXfR
sUoPklGwo6NjD9boiQeCEyoji+3www8/DOmFTyc0A7IgUDKohhsbG3/99Vdx
/78I+aFVQkZbW2/ebilquFJQd/lI3ZUH/HPiyqHay+cu3+IL3ouKk7r83bFj
h+IOq6U4jx8/bm9vP0C5KNNDScEcoBa7IkT0OZhPp/fff79DmUMBQDhDQkJ8
fHymTZt248YNcNGcnBzcj42NdXNzi4qKgiSRcWpooADEuwe2S8RF3377bYgm
3L+jLFBavfR1HxcX98knn8hSZEUAeWhoaKAFwQepIYnoO7RKZ0YHK3o3Lwqx
7+fnRyYYiuOiFy9e3LVr1wBdoxchoj0uXbqUkJAgWqf2AJADIKKdKXRXr16N
j4+nVXgTExMvLy9cWFpaZmdn4ye2m+jBqHNWCk1NzeXLl3M98nUPLsopt0Io
rW+//XYgzosyX/f/+9//lOzrXsRgANpXi+TTOkg+fwieXnPR2bNnK84Eg+Is
KCj44osvBpbtErP5NTMzmz59+jQejo6OGB83bNjAiRJssIIaRnV19dNPPy2O
Zd0CVVRFRcWXX37Z/gxQ8Mza2tqFCxdu374d2nFwcPCRI0fQ6RYvXnz48OGQ
kBDaYipkawNFmNwXPfN1P0C5aH/YL4qsVlVV0VKdCBFyQSvXq6XqAYnWVtrg
3/uY0CX37t1L0zuKA1JBEgNryKbqBUufOXMmxk0MFg0NDdCm161bFxERwYkM
ZLCCbYH+97//LdoudQvMp/G2bdvY8ihbbb969aq+vn5SUhLH2/LEx8fjwt/f
PzIykh0f/MCQTwIrjoGBQUpKCifzvKidnd1f/vKXxx57DN/vvvsup9yaoQb/
/fffI/XHH38c36amplz37ehzc3MVmc2uUj9//rympmZxcTEn9l8RfQfmiYuT
evFqf78LCMMImzG73xuxoDSRwnw6/frrr+RbQ3HzoocPH37//fcHlq97xkXJ
UIJVzv79+2mUFCXY4AQ1jBMnTnz44YeiT6dugaoOOp2TkxMYqVDwEgdbtWoV
fuL4/ZM2NjZubm55eXncgD1WSXbs2bMH2i4n87yohYUF86r00ksvyfKgHEFp
ff755ywP2traXDe56IEDBxYsWKDQfHaROhSftLQ0xRlKiBDRY8ixQQ6gto2s
NjU1KfpY3uvXr1dVVQ2s0YRe4smTJ2lwZIiMjKSzfQdWcUTIF+BO586dE7dA
dws0BQoab2try9bomXMnoqPgnxkZGRzv0InOJh4Mlezn5yejMxOqpYULF44Y
MWLUqFEjR47U1dXl+oKLQlmgPOAb+edk9mzQH85dunLlSnh4uOgEXkRfgVpd
UVERrUqjU0AhJaeRHD99V1NTgzBkJ9jmBGSaNRWegACKhcdB5Mi6UBhYGJ4C
M2HLArRKT0lg4ZVfFRcvXvzmm2/osFoZJUm3wCxn1dTU0P25AdXxqUIWLVo0
a9asrVu3YrCA+Jo6deqlS5ceMDNeESKUibCwsMDAQAifgICAiRMn0vI0cc7T
p0/Pnj2becIfJBofKgRDCded8g50+QMdBOOC8tOlemtubraysiovL+cGfk2K
GIggduHq6rp06VKOt0z5+OOPaREWTElTU5Od9Noh2jTas2fP6unpdbGXvv83
coi+2tpaYomKANXAmTNnlixZoujZV8UhOzvb29s7NDQ0ISFhYO00ECF3MKM2
IyOjY8eOcWJjkA2kvp0/fx6a3UcffTSdx5EjR27dujVlyhShFRidLz+o1D1I
mAHXlnqcVRoxExMTv/nmm97E0xug1aHtDbjpEREPDKgXREVFeXh44CIjI8PS
0tLNzQ2tsaamRkNDA00UKnlSUlJQUBB+JeGZm5u7adOmzZs345GNGzf6+vrS
Km1jY6O1tTXu+Pn54ZuaNFo4/gS/hYLP8SsRpHzV1dXR9GNZWRliCAwMpA1C
EL9paWl4hDZyK61fMDsCY2Pj7qrk3U0FVRETEzPgnLlRVrdu3TpnzpyZM2dG
RkbS/UEyVyOiQzDLi2efffbgwYOc2B5kA1sAUlNT09fXb2hoGDt2LKqR4/0P
m5ubg963P2VmkGDSpEmrV6/mujkv2reMvZcZQEn7ZHaCavjs2bNgwuKZziL6
CmzXNCgox+/SAcl0dnY+c+YMiKKjoyPHW256e3vv27cPYXCzubn5p59+srW1
RbsFaYQuv337djyybNkyyNUxY8Z4eXmtXbtWW1u7pKQEQlVPTw+sNS4uzszM
DAr+rFmzSMhs27bN3t4efMzIyAj0ZunSpVOnTuX41Rkkl5eXN23aNHIWpIi1
8s6qAtIgNTWVRgRFyDSKE/RbU1Pz6tWrCkpFESAZixcKFlpQUIB3hPcYEhJC
w+VAKYUIuYNePRTJ559/HpKEE8ey7gACMDk5+emnn75w4QKEnouLC92Hdg+R
yw3WyoSc6f/nUcoLNMDFx8d/8cUXXB/tF0UeTp8+TWR4MNS5iP6J69evgxBW
VVWBWDY1NYWGhmZnZ4NmJCQkoFnW8QDzBFfEHchMFRUV2r8EngkKigdXrFiB
a9BUUNCLFy/iJx8fn40bN8bGxjLbQAsLC7DTuXPn0iTqzp07IXgRz9ixY/H4
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
KmBsDKmiooJd4vVPOiU3sgsHDd91IleHHMsh2CX8UzBsxsPFSP6sra0Nz2az
TejlLBjbwoULiak0C7/yYs2aNR8/fvQv0EmSfmnMsL29vS+/YeofHBwMH5pH
sUmWl+TGxsbGe/fudXd3R99CI7NwS0tLmKCHh4eZE+O7hHn8wYMHly9fDl8r
xtDQUHNz85MnT+KHJnXQbfhIVGMT//d7enooPNIaObOvr4/6CXcUMRBDTCXO
US3xZzvR0dFBWI13Ej6qpvDipUv+ZN0U/2oPqyGKLV6NvM9PaRP/XaZR7DP6
hMcvaUbn4UP/eJvwtXfSMtvxEMiObW1td+/eje/b2dlJ/XNxhZdcWZwdpxaG
xEYYMy9Dnoxiv2uCTsI2DcKlwYE4qRDdCdthr/BgTBiJJEn/SKNvtqxevfr6
9evx96Pv72H+23syCfdtfmzvXR0liJcEcSsjI4NEmvD+jy3/TG/R93/i86/y
xx3+B7+A98+P0GtHkvQP8Nv3olETXNjo7u4O94VGP5YWXia0TNhIaBBejv5T
OH9HMNAv5LcfRD+U0KNHj758+ZJQKqP/UvxPVzoJ1fXTakx4zPKnpfjTKyL6
2QorYYQ/HnH0Lgnbo3f54wajB++1I0mSJEmS9LfyDoz+h/ySuCRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkv5//A5UKffH
    "], {{0, 583.}, {900., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{900., 583.},
  PlotRange->{{0, 900.}, {0, 583.}}]], "Output",
 CellChangeTimes->{3.7956080866341763`*^9, 3.7956095097714777`*^9, 
  3.79561584770532*^9, 3.7956189312127037`*^9, 3.795618966784998*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"2e8e48d9-1ef6-4f51-8e97-56f6d328f0bc"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]SEI2HR\[CloseCurlyDoubleQuote] stands for \
\[OpenCurlyDoubleQuote]Susceptible, Exposed, Infected two, Hospitalized, \
Recovered\[CloseCurlyDoubleQuote] (populations.) \[OpenCurlyDoubleQuote]Econ\
\[CloseCurlyDoubleQuote] stands for \[OpenCurlyDoubleQuote]Economic\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.79516846074577*^9, 3.795168463174677*^9}, {
  3.795168504614512*^9, 3.7951685746581583`*^9}, {3.795256418879994*^9, 
  3.795256470724182*^9}},ExpressionUUID->"6b17ec89-f0c0-436f-80e3-\
22efcee7f81b"],

Cell["\<\
In this notebook we also deal with both quarantine scenarios and medical  \
supplies scenarios. In the notebook [AA4] we deal with quarantine scenarios \
over a simpler model, SEI2HR.\
\>", "Text",
 CellChangeTimes->{{3.793464032654152*^9, 3.7934640378868856`*^9}, {
  3.79346422439363*^9, 3.793464243686232*^9}, {3.795168585572262*^9, 
  3.7951685869661617`*^9}, {3.795256493986354*^9, 3.7952565478755913`*^9}, {
  3.795256677713019*^9, 3.7952566806835814`*^9}, {3.79560641842855*^9, 
  3.79560644032132*^9}},ExpressionUUID->"962c0488-c0f0-4c2b-8144-\
8a29eeed7948"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We consider the contagious disease propagation models as instances of the \
more general ",
 ButtonBox["System Dynamics (SD)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/System_dynamics"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/System_dynamics"],
 " models. We use SD terminology in this notebook."
}], "Text",
 CellChangeTimes->{{3.792515109898424*^9, 3.792515118613044*^9}, {
   3.792515191120707*^9, 3.7925152040358553`*^9}, {3.79251524705715*^9, 
   3.7925153823741827`*^9}, {3.7925154305557137`*^9, 
   3.7925154305563602`*^9}, {3.792515515308333*^9, 3.792515581922345*^9}, {
   3.792518958995797*^9, 3.792518960900881*^9}, {3.795010617001124*^9, 
   3.795010630322556*^9}, {3.79516870594328*^9, 3.7951687324201307`*^9}, {
   3.7952110527848186`*^9, 3.7952110601424637`*^9}, 
   3.795211102157668*^9},ExpressionUUID->"d9706f8e-8733-4b70-a7e0-\
0e7df046ef09"],

Cell[CellGroupData[{

Cell["The models", "Subsection",
 CellChangeTimes->{{3.795011476992119*^9, 
  3.795011480232112*^9}},ExpressionUUID->"fe44ebbf-3242-4acc-92ad-\
75d4e550863a"],

Cell[CellGroupData[{

Cell["SEI2R", "Subsubsection",
 CellChangeTimes->{{3.795010516898909*^9, 
  3.7950105232883987`*^9}},ExpressionUUID->"4aed5812-31ea-46a6-a8b6-\
20945b0a34e2"],

Cell[TextData[{
 "The model SEI2R is introduced and explained in the notebook [AA2]. SEI2R \
differs from ",
 ButtonBox["the classical SEIR model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 ", [Wk1, HH1], with the following elements:"
}], "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515949788693*^9}, {3.792782527441436*^9, 3.792782553283967*^9}, {
  3.792861591788129*^9, 3.7928615917896967`*^9}, {3.79501053045463*^9, 
  3.795010577041779*^9}, {3.795010641482991*^9, 3.7950106559057083`*^9}, {
  3.795606475322131*^9, 
  3.795606484356185*^9}},ExpressionUUID->"70d62aef-97c2-4ab7-87f7-\
a7bb338b5482"],

Cell["\<\
1. Two separate infected populations: one is \"severely symptomatic\", the \
other is \"normally symptomatic\"\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515960948843*^9}},ExpressionUUID->"76adf2ab-56f8-4428-8870-\
294f70a655a3"],

Cell["\<\
2. The monetary equivalent of lost productivity due to infected or died \
people is tracked\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
   3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
   3.79251602014438*^9}, 
   3.795606550587318*^9},ExpressionUUID->"8df2fbf4-7e2d-4385-8512-\
714c43a2df4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR", "Subsubsection",
 CellChangeTimes->{{3.795011487139296*^9, 
  3.795011491999469*^9}},ExpressionUUID->"fa732dfc-ce1d-443a-985c-\
5ff10796254d"],

Cell["\<\
For the formulation of SEI2HR we use a system of Differential Algebraic \
Equations (DAE\[CloseCurlyQuote]s). The package [AAp1] allows the use of a \
formulation that has just Ordinary Differential Equations (ODE\
\[CloseCurlyQuote]s).\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.795011511793723*^9, 3.795011542613887*^9}, {3.7951128264874277`*^9, 
  3.795112849417819*^9}, {3.795168757914119*^9, 
  3.7951687584557667`*^9}},ExpressionUUID->"4ca53798-e314-4f33-857a-\
be694a2915fe"],

Cell["Here are the unique features of SEI2HR:", "Text",
 CellChangeTimes->{{3.7951023289025507`*^9, 
  3.795102346902504*^9}},ExpressionUUID->"d00e31bb-51df-4a15-8d81-\
e0ca958dcd96"],

Cell[CellGroupData[{

Cell["People stocks", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102376518837*^9}, {
  3.795102457221472*^9, 3.795102472307043*^9}, {3.795102667724598*^9, 
  3.7951026750172453`*^9}},ExpressionUUID->"86f08e0b-6624-423f-bb66-\
d0f1ca3f2734"],

Cell[CellGroupData[{

Cell["\<\
There are two types of infected populations: normally symptomatic and \
severely symptomatic.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102376518837*^9}, {
  3.795102457221472*^9, 3.795102472307043*^9}, {3.795102667724598*^9, 
  3.795102674238134*^9}, {3.795606691474968*^9, 
  3.7956066979324427`*^9}},ExpressionUUID->"02e75549-d2e1-474f-b78a-\
1ad298114435"],

Cell["There is a hospitalized population.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.7951023831214447`*^9}, {
  3.795606699822795*^9, 
  3.7956067068541107`*^9}},ExpressionUUID->"e94f4c59-521f-4f08-b828-\
9991384328f4"],

Cell["There is a deceased from infection population.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102404092387*^9}, {
  3.795606708519348*^9, 
  3.79560671441438*^9}},ExpressionUUID->"524e1d2c-bb1f-46ee-b320-\
672b17e12298"]
}, Open  ]],

Cell["Hospital beds ", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102451587995*^9}, {
  3.7951026835412188`*^9, 
  3.795102690654765*^9}},ExpressionUUID->"f0de935d-c656-4c6c-acfd-\
0b06ff4e2993"],

Cell[CellGroupData[{

Cell["\<\
Hospital beds are a limited resource that determines the number of \
hospitalized people.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102451587995*^9}, {
   3.7951026835412188`*^9, 3.795102690359499*^9}, 
   3.795606595632936*^9},ExpressionUUID->"29a530ef-1f7b-4e39-ac59-\
b68e7386ca27"],

Cell["\<\
Only severely symptomatic people are hospitalized according to the available \
hospital beds.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102496040183*^9}, {
   3.79510256729563*^9, 3.795102567295826*^9}, {3.7951026978740387`*^9, 
   3.795102710238551*^9}, 
   3.79560660392865*^9},ExpressionUUID->"4133c3a1-4e0f-426b-a95c-\
5b1445834f8b"],

Cell["\<\
The hospital beds stock is not assumed constant, it has its own change rate.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102496040183*^9}, {
  3.7951025679803267`*^9, 3.795102620498035*^9}, {3.795606589952886*^9, 
  3.795606605072493*^9}},ExpressionUUID->"cd2b53e3-0671-4073-958d-\
08cc6c22d9af"]
}, Open  ]],

Cell["Money stocks", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 
  3.79510254331061*^9}},ExpressionUUID->"732ef85c-d021-4f20-8c47-\
557b11a2bb0b"],

Cell[CellGroupData[{

Cell["The money from lost productivity is tracked.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102536310327*^9}, 
   3.7956066070330553`*^9, {3.795606684950674*^9, 
   3.795606685141452*^9}},ExpressionUUID->"fad9dc72-ac1d-44ba-adfc-\
e7f3e66cae95"],

Cell["The money for hospital services is tracked.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102542880179*^9}, 
   3.795606607997456*^9, {3.795606688335977*^9, 
   3.7956066883802767`*^9}},ExpressionUUID->"2861d18f-1c93-43b6-8351-\
32738db65b60"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ", "Subsubsection",
 CellChangeTimes->{{3.7952675536265373`*^9, 
  3.795267559835939*^9}},ExpressionUUID->"f9eb428e-d3c8-4fc5-93ec-\
93dd4fb6d209"],

Cell["SEI2HR-Econ adds the following features to SEI2HR:", "Text",
 CellChangeTimes->{{3.795267566067679*^9, 
  3.795267587736589*^9}},ExpressionUUID->"30d97ef6-685b-4603-b226-\
387ec0b96f10"],

Cell[CellGroupData[{

Cell["Medical supplies ", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 
  3.7952676150563383`*^9}},ExpressionUUID->"24b2ea0c-9d5f-489c-8485-\
d6d720ea567d"],

Cell[CellGroupData[{

Cell["Medical supplies production is part of the model.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267625098152*^9}, {
  3.795606789892864*^9, 
  3.795606834849308*^9}},ExpressionUUID->"41f7009e-3029-48a3-bebe-\
d2cb37406f0d"],

Cell["Medical supplies delivery is part of the model..", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.7952676347108*^9}, {
  3.795606803078336*^9, 
  3.795606853243394*^9}},ExpressionUUID->"5e085ae7-d2ee-4c2c-8a68-\
09e21114bf85"],

Cell["\<\
Medical supplies accumulation at hospitals is taken into account.\
\>", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267652486231*^9}, 
   3.7952682407194347`*^9, {3.795606809524714*^9, 3.795606818479683*^9}, {
   3.79560686012842*^9, 
   3.7956068639309797`*^9}},ExpressionUUID->"aeed4c28-15c0-43d9-a2d1-\
3b70833d180b"],

Cell["Medical supplies demand tracking.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267661924914*^9}, 
   3.795606866315627*^9},ExpressionUUID->"f60438e6-6e75-4835-8492-\
e8f93bd7beef"]
}, Open  ]],

Cell["Hospitalization", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 
  3.795267673040984*^9}},ExpressionUUID->"960eeb22-a0cb-41c3-935d-\
8406bc30b298"],

Cell["\<\
Severely symptomatic people are hospitalized according to two limited \
resources: hospital beds and medical supplies.\
\>", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
  3.795268242771248*^9, 3.795268242772194*^9}, {3.795606755049746*^9, 
  3.795606781522492*^9}},ExpressionUUID->"1201e047-f1bd-4141-a88a-\
97e2de12012e"],

Cell["Money stocks", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
  3.7952682442516336`*^9, 
  3.7952682523356533`*^9}},ExpressionUUID->"7faeeb39-3bb9-4595-bbaa-\
d3f8c06a42ad"],

Cell["Money for medical supplies production is tracked.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
   3.7952682442516336`*^9, 3.795268269565338*^9}, 
   3.795606775650828*^9},ExpressionUUID->"ae126cad-82ee-4423-9114-\
db49ee84a90d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ\[CloseCurlyQuote]s place a development plan", \
"Subsubsection",
 CellChangeTimes->{{3.795055642324287*^9, 3.795055703042118*^9}, {
  3.7951033858150043`*^9, 3.795103402463161*^9}, {3.795256688885395*^9, 
  3.795256692642584*^9}},ExpressionUUID->"3c3edbd1-9a06-454f-b973-\
3dc625f5aa99"],

Cell["\<\
This graph shows the \[OpenCurlyDoubleQuote]big picture\
\[CloseCurlyDoubleQuote] of the model development plan undertaken in [AAr1] \
and SEI2HR (discussed in this notebook) is in that graph:\
\>", "Text",
 CellChangeTimes->{{3.79500568593758*^9, 3.795005692979492*^9}, {
  3.795008769725748*^9, 3.79500889228541*^9}, {3.7950557163728657`*^9, 
  3.7950557387388763`*^9}, {3.795168824243733*^9, 
  3.795168847093136*^9}},ExpressionUUID->"e3a9e0f1-c89b-4591-9ae1-\
208d0e8cf195"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "SIR", "SI2R", "SEI2R", "MultiSiteExtension", "RandomGraphExtension", 
       "GridGraphExtension", "MultiSiteExtension-EnBloc", "Patient0-over-USA",
        "SEI2HR", "SEI2HR-Econ", "Ages-SEI2HR-Econ", "MultiSite-SEI2HR-Econ", 
       "MultiSite-Ages-SEI2HR-Econ", "Hubei-Calibration", "EU-Calibration", 
       "SARS-CoV-2-EatsWorld", "MultiSiteExtension-Econ"}, {{{1, 2}, {2, 3}, {
       3, 4}, {3, 9}, {9, 10}, {10, 11}, {10, 12}, {4, 5}, {4, 6}, {4, 7}, {4,
        17}, {5, 8}, {17, 13}, {11, 13}, {12, 14}, {12, 15}, {12, 16}, {13, 
       14}, {13, 15}, {13, 16}}, Null}, {
      GraphHighlight -> {"SEI2HR-Econ"}, ImageSize -> 1000, 
       VertexLabels -> {"EU-Calibration" -> Rotate[
           Style[
           "Calibration with real data for European Union", FontSize -> 14], 
           Rational[1, 12] Pi], "SI2R" -> Rotate[
           Style[
           "SI2R: Extension of the SIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SARS-CoV-2-EatsWorld" -> 
         Rotate[
           Style["How SARS-CoV-2 eats the world?", FontSize -> 14], 
           Rational[1, 12] Pi], "SEI2R" -> Rotate[
           Style[
           "SEI2R: Extention of the SEIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR" -> Rotate[
           Style[
           "SEI2HR: Extension of SEI2R with hospitalized population \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "MultiSiteExtension-EnBloc" -> Rotate[
           Style[
           "En bloc execution of multi-site extensions \[Checkmark]", 
            FontSize -> 14], Rational[1, 12] Pi], "MultiSiteExtension" -> 
         Rotate[
           Style[
           "Multi-site extension of single-site model \[Checkmark]", FontSize -> 
            14], Rational[1, 12] Pi], "MultiSite-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site application of SEI2HR-Econ \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR-Econ" -> Rotate[
           Style[
           "SEI2HR-Econ: Economics extension of SEI2R with hospitalized \
population \[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "GridGraphExtension" -> Rotate[
           Style["Extension over grid graphs \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Patient0-over-USA" -> Rotate[
           Style[
           "Patient 0 disease propagation over USA \[Checkmark]", FontSize -> 
            14], Rational[1, 12] Pi], "MultiSite-Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site and economics extension with age \
compartments of SEI2HR", FontSize -> 14], Rational[1, 12] Pi], "SIR" -> Rotate[
           Style["SIR (basic) model \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Economics extension of SEI2HR with age compartments", FontSize -> 
            14], Rational[1, 12] Pi], "RandomGraphExtension" -> Rotate[
           Style["Extension over random graphs \[Checkmark]", FontSize -> 14],
            Rational[1, 12] Pi], "Hubei-Calibration" -> Rotate[
           Style[
           "Calibration with real data for Hubei, China", FontSize -> 14], 
           Rational[1, 12] Pi]}, 
       VertexShapeFunction -> {"SEI2HR-Econ" -> "Square"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 7.}, {0., 6.}}, 0.05338164251207729], 
        ArrowBox[{{0., 6.}, {0., 5.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpEHNRucey7nbVzv/e7Zg+ts8IOlh4Bqd4iZ/bf
35d1aV2/sMPOE4WePnzX9+8u3DK3113YQX/S+8ipmx/sv8uWuOrYFyGHdukf
FQldz/Z71BX8iJwu5JDUcKmxnfvt/l/XH7W76ws5JCbYW7VKf9r/RXhHRP8e
QYfgvLoVJWzf9psZfcgytBd04Mhaxj3J7df+/Ubd+3S3Czj0HZ1joVj1e3+Q
jYL/2m4BByf2iPzGzj/7NYOfrJoaJeCgpH9j/aaSv/tdy69ffKYs4KBjK/tr
i/W//c6Bn9sdz/M7pBiq+3Xc+7e/5dxUpnZvfocT3N9W68T+3++XNk143h4+
h4gzncKLtv/fP0fi6642JT4HseJHLS/e/t9f9HTjD4daXgdowBw4ewYEeOD8
9DePvp6XRvB/JU40+lDC7cAI5bfo3mjSvcEFl2fx3/6s3RXBrz6mF/d/Dyec
/2qy3cvJdgg+WPkpDjh/jYG6lUgCgg+hOBwAJlSvTw==
         "]], 
         0.05338164251207729], 
        ArrowBox[{{0., 5.}, {0., 4.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.05338164251207729], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.05338164251207729], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo4HGbympsuPrTC/qSydvHXOewOcuvXBN86vMu+
Y1aS7kNNdoeqPTNFz04+am+Zskzv8DI2B41P0yd4HDtnf6/hW9lsYTYHn5qM
s+trrtiXfQhiyypgdXiSriTVKXbLnmXz7jt6e1kc3t+1EY+QeGDfcsLg18uf
zA6yNuatk1If2/802BQ3W43ZodqP4frnT8/sE9/Yczk7MzlETA4Vtb/5wt7I
VUh98n5Gh3MtoT4hba/s37t1zvtmyujwSImhxvjXa/sZH5cU5C5jcOjPDV1y
x+StvZZr6tzvAgwO11JCj/qbvbMPaJ7iqfX6n/1ODob7Pf/e2SudW87bs+Kv
vVlk6MfJve/tT2SxtItE/bH3Cwv9k/L4vb175Kqth///soeEywf7WTNB4Cec
f/7G0dfzzX/A+Z8PK6U+ePnNnhHKZ4/ewBq94Stcnn1e3ln+7i9w/tee2D3/
Kj/D+ZfUa4HoE5wPVj7lI5wfkehXonHgA5wPowF79rWN
         "]], 
         0.05338164251207729], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.05338164251207729]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.}, 0.05338164251207729], InsetBox[
          RotationBox[
           StyleBox["\<\"SIR (basic) model \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SI2R: Extension of the SIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 6.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2R: Extention of the SEIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Multi-site extension of single-site model \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over random graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over grid graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-2.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"En bloc execution of multi-site extensions \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Patient 0 disease propagation over USA \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR: Extension of SEI2R with hospitalized \
population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          RectangleBox[{-0.04710145241545893, 2.952898547584541}, \
{0.04710145241545893, 3.047101452415459}]}, InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR-Econ: Economics extension of SEI2R with \
hospitalized population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Economics extension of SEI2HR with age \
compartments\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site application of \
SEI2HR-Econ \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site and economics \
extension with age compartments of SEI2HR\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for Hubei, China\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-0.9466183574879227, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for European Union\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"How SARS-CoV-2 eats the world?\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, DiskBox[{-1., 2.}, 0.05338164251207729]}}],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",
 CellChangeTimes->{
  3.795007023001236*^9, 3.7950073414839563`*^9, 3.795007391714611*^9, {
   3.7950074446808767`*^9, 3.7950074518039837`*^9}, {3.795007612147162*^9, 
   3.795007616335793*^9}, 3.795007794977274*^9, {3.7950078470670767`*^9, 
   3.795007855030254*^9}, 3.795008235678174*^9, 3.795008336441968*^9, 
   3.7950083821979437`*^9, 3.795008422307858*^9, {3.7950085556294127`*^9, 
   3.795008568611043*^9}, {3.795008626895293*^9, 3.7950086536305532`*^9}, 
   3.795008694310647*^9, 3.795010769972102*^9, {3.795055813649102*^9, 
   3.7950558819023438`*^9}, {3.795256720328163*^9, 3.795256756062107*^9}},
 CellLabel->
  "Out[367]=",ExpressionUUID->"99d6e655-d1db-4035-9cab-92c27e8fd0ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebook structure", "Subsection",
 CellChangeTimes->{{3.7950089815674133`*^9, 
  3.7950089843573713`*^9}},ExpressionUUID->"b6ef7380-6d53-43a7-a5ee-\
56470f7dde30"],

Cell["The rest of notebook has the following sequence of sections:", "Text",
 CellChangeTimes->{{3.795008915078377*^9, 
  3.795008943665434*^9}},ExpressionUUID->"bd9ba6f5-d3d0-43b8-98dc-\
cb45e8c2fbb4"],

Cell[CellGroupData[{

Cell["Package load section", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.79500899884743*^9}},ExpressionUUID->"93b63510-0fc1-4ebc-ad07-\
750ea7ad18a6"],

Cell["SEI2HR-Econ structure in comparison of SEI2HR", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009027517324*^9}, {3.7952567760960703`*^9, 
  3.7952567912845297`*^9}},ExpressionUUID->"e7002967-a828-415b-88eb-\
2c68231de602"],

Cell["Explanations of the equations of SEI2HR-Econ", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103427836858*^9, 
  3.795103427838146*^9}, {3.795256786423706*^9, 
  3.795256787369231*^9}},ExpressionUUID->"82fa4414-52d4-47ae-9cb7-\
691b5c4354f1"],

Cell["Quarantine scenario modeling preparation", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103428621379*^9, 
  3.795103443403946*^9}, {3.795168874533469*^9, 3.795168876984624*^9}, {
  3.7952674924065313`*^9, 3.795267492406776*^9}, {3.79559760665795*^9, 
  3.795597606658341*^9}},ExpressionUUID->"1b9fbd34-398a-4de4-bbae-\
13fb31aed7ee"],

Cell["\<\
Medical supplies production and delivery scenario modeling preparation\
\>", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103428621379*^9, 
  3.795103443403946*^9}, {3.795168874533469*^9, 3.795168876984624*^9}, {
  3.795267497644766*^9, 
  3.795267523497924*^9}},ExpressionUUID->"bdc5394b-a274-4114-a970-\
97bdb08c80d3"],

Cell["Parameters and initial conditions setup", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.795009082439451*^9}},ExpressionUUID->"e23379bc-f832-49e3-acea-\
931887395905"],

Cell["\<\
Populations, hospital beds, quarantine scenarios, medical supplies scenarios\
\>", "Subitem",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500913405713*^9}, {3.795168892903407*^9, 
  3.7951688929045877`*^9}, {3.7952675308784523`*^9, 
  3.795267538078158*^9}},ExpressionUUID->"8f34cdb6-fba6-4e73-910c-\
96a15635cc9b"],

Cell["Simulation solutions", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500913405713*^9}, {3.79516889491639*^9, 
  3.795168908169701*^9}, {3.7955976377083397`*^9, 
  3.79559764348733*^9}},ExpressionUUID->"37304399-95c5-4733-9d9f-\
d8e61e78ac32"],

Cell["Interactive interface", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.7950091449685802`*^9}},ExpressionUUID->"5a5d06b4-529d-49ca-857e-\
2e063090fa38"],

Cell["Sensitivity analysis", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.79500915496677*^9}},ExpressionUUID->"0e912a1d-1ca8-4b99-8c25-\
c4022c1efa56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load packages", "Section",
 CellChangeTimes->{{3.793231620635537*^9, 
  3.793231628723988*^9}},ExpressionUUID->"8aeeeab8-1818-46da-89b7-\
1bac19c8d5fa"],

Cell["\<\
The epidemiological models framework used in this notebook is implemented \
with the packages [AAp1-AAp4, AA3]; many of the plot functions are from the \
package [AAp5].\
\>", "Text",
 CellChangeTimes->{
  3.792942992304307*^9, {3.793025167381392*^9, 3.7930251825463467`*^9}, {
   3.793050739557584*^9, 3.793050740051427*^9}, {3.795168931029976*^9, 
   3.795168946756179*^9}, {3.7955955915961514`*^9, 
   3.795595613758498*^9}},ExpressionUUID->"5bd1f7ed-13b2-4018-a1bd-\
eb3aadd643e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m\>\"", "]"}],
   ";", 
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m\
\>\"", "]"}], ";", 
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingSimulationFunctions.m\>\"", "]"}], ";", 
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
WL/SystemDynamicsInteractiveInterfacesFunctions.m\>\"", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.792592566628851*^9, 3.792592568040513*^9}, {
   3.7929417944805183`*^9, 3.792941823001656*^9}, {3.792943003403167*^9, 
   3.792943004537126*^9}, 3.792999495215279*^9, {3.793025198963522*^9, 
   3.793025207830246*^9}, {3.79321771518338*^9, 3.793217719433584*^9}, {
   3.7934463196522923`*^9, 3.7934463546370687`*^9}, {3.795024554629533*^9, 
   3.795024561647086*^9}, 3.795098770368384*^9, 3.795248754163937*^9, {
   3.795260236512373*^9, 3.795260250101541*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"3633d78f-638c-4bc4-82a7-96efbf1cb21f"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  "\"\</Volumes/Macintosh \
HD/Users/antonov/SystemModeling/Projects/Coronavirus-propagation-dynamics/WL/\
EpidemiologyModels.m\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7956189603243837`*^9, 3.795618964695951*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"4e80ca99-ea06-4091-b942-2d71d2644ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ extends SEI2HR", "Section",
 CellChangeTimes->{{3.793231378597383*^9, 3.7932314024183617`*^9}, {
  3.793313893383391*^9, 3.793313894666028*^9}, {3.793463858762034*^9, 
  3.793463887359378*^9}, {3.7950247617148542`*^9, 3.795024767176201*^9}, {
  3.795256795986302*^9, 
  3.795256799699214*^9}},ExpressionUUID->"21916156-298d-467d-97d0-\
a7056ad95f19"],

Cell["\<\
The model SEI2HR-Econ is an extension of the model SEI2HR, [AA4].\
\>", "Text",
 CellChangeTimes->{{3.793464008378028*^9, 3.793464023947825*^9}, {
  3.79346576491387*^9, 3.793465775095315*^9}, {3.79346590801619*^9, 
  3.793465922247696*^9}, {3.795009177972756*^9, 3.7950092499839563`*^9}, {
  3.795168959426126*^9, 3.795168972880556*^9}, {3.795256803501498*^9, 
  3.795256810611732*^9}},ExpressionUUID->"5a8412ce-d47e-4ba6-8fa1-\
713f8e582bf3"],

Cell["Here is SEI2HR:", "Text",
 CellChangeTimes->{{3.79500925187525*^9, 3.795009258444957*^9}, 
   3.795256817361949*^9},ExpressionUUID->"17a01eb6-8a15-468d-b141-\
b1e3aae743c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"reprTP", "=", "\"\<AlgebraicEquation\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsModelOpts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"TooltipStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Background", "\[Rule]", "Yellow"}], ",", 
        RowBox[{"CellFrameColor", "\[Rule]", "Gray"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "20"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelReference", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelReference", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793467911948387*^9, 3.793467915610031*^9}, {
   3.795009350159837*^9, 3.795009431847424*^9}, {3.7950095015662823`*^9, 
   3.795009514576685*^9}, {3.795009673959231*^9, 3.795009684738604*^9}, 
   3.795256833834491*^9, {3.795256868688776*^9, 3.795256872034582*^9}, {
   3.79525986866504*^9, 3.795259876554387*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"8dd5eabd-8d6e-4939-9fe5-29ec82eacb42"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{
        "MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"},
       {"8", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"9", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"10", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"11", 
        RowBox[{
        "MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"},
       {"10", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"11", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"12", 
        RowBox[{
        "nhbr", "[", "TP", "]"}], "\<\"Number of hospital beds rate\"\>"},
       {"13", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"14", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"sspf", "[", "SP", "]"}],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ]}], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox["aincp",
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Average incubation period", "Tooltip"]& ],
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Average incubation period", 
                    "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"9", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"10", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"11", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "INSP", "]"}],
                 "\"Infected Normally Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Normally Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "ISSP", "]"}],
                 "\"Infected Severely Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Severely Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ]}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the severely symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the severely symptomatic population",
           "Tooltip"]& ], "0.15`"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the normally symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the normally symptomatic population",
           "Tooltip"]& ], "0.15`"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "26"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Mu]", "[", "ISSP", "]"}],
           "\"Infected Severely Symptomatic Population death rate\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Infected Severely Symptomatic Population death rate",
            "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Beta]", "[", "ISSP", "]"}],
           "\"Contact rate for the severely symptomatic population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Contact rate for the severely symptomatic population", 
           "Tooltip"]& ]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], 
        "0.0029`"},
       {"13", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"14", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
       {"8", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"9", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"10", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Number of hospital beds rate", "Tooltip"]& ],
            "\"Number of hospital beds rate\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"11", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.795608086923658*^9, 3.7956095100710087`*^9, 
  3.795615848182207*^9, 3.795618932055538*^9, 3.7956189671655617`*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"4de95579-1d6b-442a-985a-c60ca735b9e4"]
}, Open  ]],

Cell["Here is SEI2HR-Econ:", "Text",
 CellChangeTimes->{{3.795009275737638*^9, 3.795009284783505*^9}, {
  3.795256837556376*^9, 
  3.795256838321369*^9}},ExpressionUUID->"fcef4ad4-0675-40f4-94e1-\
ec3a9502f9b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelSEI2HREcon", "=", 
   RowBox[{"SEI2HREconModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelSEI2HREcon", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793314282935193*^9, 3.793314319296172*^9}, {
   3.7934449390958233`*^9, 3.79344493909718*^9}, {3.793463636550662*^9, 
   3.7934636565972357`*^9}, {3.7934674315834093`*^9, 3.793467440716679*^9}, {
   3.7950093912892313`*^9, 3.795009397417891*^9}, 3.795009433917156*^9, {
   3.795009677582673*^9, 3.795009678321662*^9}, {3.795256841022133*^9, 
   3.795256852411681*^9}},
 CellLabel->
  "In[313]:=",ExpressionUUID->"204facf0-05e5-4817-b13b-6239e5308acf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{
        "MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"},
       {"8", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"9", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"10", 
        RowBox[{"MS", "[", "t", "]"}], "\<\"Medical Supplies\"\>"},
       {"11", 
        RowBox[{"MSD", "[", "t", "]"}], "\<\"Medical Supplies Demand\"\>"},
       {"12", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"13", 
        RowBox[{
        "MMSP", "[", "t", 
         "]"}], "\<\"Money for Medical Supplies Production\"\>"},
       {"14", 
        RowBox[{"MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"},
       {"15", 
        RowBox[{"HMS", "[", "t", "]"}], "\<\"Hospital Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"},
       {"10", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"11", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"12", 
        RowBox[{
        "nhbr", "[", "TP", 
         "]"}], "\<\"Number of hospital beds rate (number of beds per person)\
\"\>"},
       {"13", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"14", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"},
       {"15", 
        RowBox[{"hpmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospitalized population medical supplies consumption \
rate (per day)\"\>"},
       {"16", 
        RowBox[{"upmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Un-hospitalized population medical supplies consumption \
rate (units per day)\"\>"},
       {"17", 
        RowBox[{"mspr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Medical supplies production rate (units per pay)\"\>"},
       {"18", 
        RowBox[{"mspcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Medical supplies production cost rate (per unit)\"\>"},
       {"19", 
        RowBox[{
        "msdr", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery rate (delay factor)\"\>"},
       {"20", 
        RowBox[{
        "msdp", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery period (number of days)\"\>"},
       {"21", 
        RowBox[{
        "mscr", "[", "TP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"22", 
        RowBox[{
        "mscr", "[", "INSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"23", 
        RowBox[{
        "mscr", "[", "ISSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"24", 
        RowBox[{
        "mscr", "[", "HP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"25", 
        RowBox[{
        "\[Kappa]", "[", "HMS", 
         "]"}], "\<\"Capacity to store Hospital Medical Supplies\"\>"},
       {"26", 
        RowBox[{
        "\[Kappa]", "[", "MS", 
         "]"}], "\<\"Capacity to store produced Medical Supplies\"\>"},
       {"27", 
        RowBox[{
        "\[Kappa]", "[", "MSD", 
         "]"}], "\<\"Capacity to transport produced Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                    ",", 
                    FractionBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "ISSP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]], ",", 
                    FractionBox[
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"sspf", "[", "SP", "]"}],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ]}], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox["aincp",
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Average incubation period", "Tooltip"]& ],
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Average incubation period", 
                    "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"9", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"10", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HMS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HMS", "[", "t", "]"}],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
               "\"Hospital Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"11", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"mspr", "[", "HB", "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Medical Supplies", "Tooltip"]& ]}], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MS", "]"}],
                 "\"Capacity to store produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Capacity to store produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to store produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to store produced Medical Supplies", 
               "Tooltip"]& ]}]}], "]"}], "-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], "-", 
             FractionBox[
              RowBox[{"Min", "[", 
               RowBox[{
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"MS", "[", "t", "]"}],
                    "\"Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Medical Supplies", "Tooltip"]& ],
                  "\"Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
                RowBox[{
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                   "\"Hospital Beds\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "HP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}],
                  "+", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ],
                   "\"Capacity to store Hospital Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Capacity to store Hospital Medical Supplies",
                    "Tooltip"]& ]}], ",", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                    "\"Capacity to transport produced Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   
                   Annotation[#, 
                    "Capacity to transport produced Medical Supplies", 
                    "Tooltip"]& ],
                  "\"Capacity to transport produced Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Capacity to transport produced Medical Supplies", 
                  "Tooltip"]& ]}], "]"}], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"msdp", "[", "HB", "]"}],
                  "\"Medical supplies delivery period (number of days)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies delivery period (number of days)", 
                  "Tooltip"]& ],
                "\"Medical supplies delivery period (number of days)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies delivery period (number of days)", 
                "Tooltip"]& ]]}], ",", 
            RowBox[{
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"INSP", "[", "t", "]"}],
                  "\"Infected Normally Symptomatic Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Infected Normally Symptomatic Population", 
                  "Tooltip"]& ],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "INSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                   "\"Hospitalized Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                "+", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"ISSP", "[", "t", "]"}],
                    "\"Infected Severely Symptomatic Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   
                   Annotation[#, "Infected Severely Symptomatic Population", 
                    "Tooltip"]& ],
                  "\"Infected Severely Symptomatic Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Infected Severely Symptomatic Population", 
                  "Tooltip"]& ]}], ")"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "TP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ], " ", 
              RowBox[{"(", 
               RowBox[{
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Exposed Population", "Tooltip"]& ],
                  "\"Exposed Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"RP", "[", "t", "]"}],
                    "\"Recovered Population\"",
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Recovered Population", "Tooltip"]& ],
                  "\"Recovered Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"SP", "[", "t", "]"}],
                    "\"Susceptible Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Susceptible Population", "Tooltip"]& ],
                  "\"Susceptible Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
               ")"}]}]}]}], "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"12", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MSD", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "HP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "INSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"ISSP", "[", "t", "]"}],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Severely Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "ISSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "TP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"EP", "[", "t", "]"}],
                 "\"Exposed Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Exposed Population", "Tooltip"]& ],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"RP", "[", "t", "]"}],
                 "\"Recovered Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Recovered Population", "Tooltip"]& ],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"13", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"14", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MMSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"MSD", "[", "t", "]"}],
              "\"Medical Supplies Demand\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Medical Supplies Demand", "Tooltip"]& ],
            "\"Medical Supplies Demand\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Medical Supplies Demand", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"mspcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Medical supplies production cost rate (per unit)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Medical supplies production cost rate (per unit)",
               "Tooltip"]& ],
            "\"Medical supplies production cost rate (per unit)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Medical supplies production cost rate (per unit)", 
            "Tooltip"]& ]}]}]},
       {"15", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "INSP", "]"}],
                 "\"Infected Normally Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Normally Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "ISSP", "]"}],
                 "\"Infected Severely Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Severely Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ]}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the severely symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the severely symptomatic population",
           "Tooltip"]& ], "0.15`"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the normally symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the normally symptomatic population",
           "Tooltip"]& ], "0.15`"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "26"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Mu]", "[", "ISSP", "]"}],
           "\"Infected Severely Symptomatic Population death rate\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Infected Severely Symptomatic Population death rate",
            "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Beta]", "[", "ISSP", "]"}],
           "\"Contact rate for the severely symptomatic population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Contact rate for the severely symptomatic population", 
           "Tooltip"]& ]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate (number of beds per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Number of hospital beds rate (number of beds per person)", 
          "Tooltip"]& ], "0.0029`"},
       {"13", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"14", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"},
       {"15", 
        TagBox[
         TooltipBox[
          RowBox[{"hpmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Hospitalized population medical supplies consumption rate (per \
day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Hospitalized population medical supplies consumption rate (per \
day)", "Tooltip"]& ], "4"},
       {"16", 
        TagBox[
         TooltipBox[
          RowBox[{"upmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Un-hospitalized population medical supplies consumption rate \
(units per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Un-hospitalized population medical supplies consumption rate \
(units per day)", "Tooltip"]& ], "2"},
       {"17", 
        TagBox[
         TooltipBox[
          RowBox[{"mspcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Medical supplies production cost rate (per unit)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical supplies production cost rate (per unit)", 
          "Tooltip"]& ], "1"},
       {"18", 
        TagBox[
         TooltipBox[
          RowBox[{"msdp", "[", "HB", "]"}],
          "\"Medical supplies delivery period (number of days)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical supplies delivery period (number of days)", 
          "Tooltip"]& ], "1.5`"},
       {"19", 
        RowBox[{"mspr", "[", "HB", "]"}], 
        RowBox[{"100", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"nhbr", "[", "TP", "]"}],
           "\"Number of hospital beds rate (number of beds per person)\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Number of hospital beds rate (number of beds per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"20", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "TP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.02`"},
       {"21", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "INSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.7`"},
       {"22", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "ISSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "3"},
       {"23", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "HP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "4"},
       {"24", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "HMS", "]"}],
          "\"Capacity to store Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to store Hospital Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         RowBox[{"HB", "[", "0", "]"}], " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ]}]},
       {"25", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MS", "]"}],
          "\"Capacity to store produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to store produced Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "TP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"26", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ], 
        FractionBox[
         RowBox[{"HB", "[", "0", "]"}], "10"]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
       {"8", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"9", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"10", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate (number of beds per person)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Number of hospital beds rate (number of beds per person)", 
              "Tooltip"]& ],
            "\"Number of hospital beds rate (number of beds per person)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, 
            "Number of hospital beds rate (number of beds per person)", 
            "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"11", 
        RowBox[{
         RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"12", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"13", 
        RowBox[{
         RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"14", 
        RowBox[{
         RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "HMS", "]"}],
             "\"Capacity to store Hospital Medical Supplies\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Capacity to store Hospital Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store Hospital Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ]}]},
       {"15", 
        RowBox[{
         RowBox[{"MS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "MS", "]"}],
             "\"Capacity to store produced Medical Supplies\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Capacity to store produced Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store produced Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store produced Medical Supplies", 
           "Tooltip"]& ]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7956080870488367`*^9, 3.795609510175968*^9, 
  3.795615848305595*^9, 3.7956189321302223`*^9, 3.795618967238781*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"be99e2de-6a5f-49e7-9153-c6289b23b741"]
}, Open  ]],

Cell["Here are the \[OpenCurlyDoubleQuote]differences\[CloseCurlyDoubleQuote] \
between the two models:", "Text",
 CellChangeTimes->{{3.79500929530131*^9, 3.795009313537221*^9}, {
  3.795168984919174*^9, 
  3.79516900729457*^9}},ExpressionUUID->"afbc757b-e4af-468c-8ebe-\
9994292dc48c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ModelGridTableForm", "@", 
  RowBox[{"Merge", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"modelSEI2HREcon", ",", "modelReference"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AssociationQ", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}], ",", 
       RowBox[{"KeyComplement", "[", "#", "]"}], ",", 
       RowBox[{"Complement", "@@", "#"}]}], "]"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.795009620847085*^9, 3.795009652165576*^9}, {
   3.7952568808707743`*^9, 3.795256883997085*^9}, 3.795259886165313*^9},
 CellLabel->
  "In[315]:=",ExpressionUUID->"1c7c7d65-85c3-49fc-8d46-d5d6ef58eca8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"MS", "[", "t", "]"}], "\<\"Medical Supplies\"\>"},
       {"2", 
        RowBox[{"MSD", "[", "t", "]"}], "\<\"Medical Supplies Demand\"\>"},
       {"3", 
        RowBox[{
        "MMSP", "[", "t", 
         "]"}], "\<\"Money for Medical Supplies Production\"\>"},
       {"4", 
        RowBox[{"HMS", "[", "t", "]"}], "\<\"Hospital Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"hpmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospitalized population medical supplies consumption \
rate (per day)\"\>"},
       {"2", 
        RowBox[{"upmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Un-hospitalized population medical supplies consumption \
rate (units per day)\"\>"},
       {"3", 
        RowBox[{"mspr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Medical supplies production rate (units per pay)\"\>"},
       {"4", 
        RowBox[{"mspcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Medical supplies production cost rate (per unit)\"\>"},
       {"5", 
        RowBox[{
        "msdr", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery rate (delay factor)\"\>"},
       {"6", 
        RowBox[{
        "msdp", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery period (number of days)\"\>"},
       {"7", 
        RowBox[{
        "mscr", "[", "TP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"8", 
        RowBox[{
        "mscr", "[", "INSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"9", 
        RowBox[{
        "mscr", "[", "ISSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"10", 
        RowBox[{
        "mscr", "[", "HP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"11", 
        RowBox[{
        "\[Kappa]", "[", "HMS", 
         "]"}], "\<\"Capacity to store Hospital Medical Supplies\"\>"},
       {"12", 
        RowBox[{
        "\[Kappa]", "[", "MS", 
         "]"}], "\<\"Capacity to store produced Medical Supplies\"\>"},
       {"13", 
        RowBox[{
        "\[Kappa]", "[", "MSD", 
         "]"}], "\<\"Capacity to transport produced Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HMS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HMS", "[", "t", "]"}],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
               "\"Hospital Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HP", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HB", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"HP", "[", "t", "]"}], "aip"]}], "+", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"HB", "[", "t", "]"}], "-", 
                    RowBox[{"HP", "[", "t", "]"}]}], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"EP", "[", "t", "]"}], " ", 
                    RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"], ",", 
                    FractionBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "ISSP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   RowBox[{"HP", "[", "t", "]"}], "<", 
                   RowBox[{"HB", "[", "t", "]"}]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          RowBox[{
           RowBox[{"HP", "[", "t", "]"}], " ", 
           RowBox[{"\[Mu]", "[", "HP", "]"}]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MMSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"MSD", "[", "t", "]"}],
              "\"Medical Supplies Demand\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Medical Supplies Demand", "Tooltip"]& ],
            "\"Medical Supplies Demand\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Medical Supplies Demand", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"mspcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Medical supplies production cost rate (per unit)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Medical supplies production cost rate (per unit)",
               "Tooltip"]& ],
            "\"Medical supplies production cost rate (per unit)\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Medical supplies production cost rate (per unit)", 
            "Tooltip"]& ]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"mspr", "[", "HB", "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Medical Supplies", "Tooltip"]& ]}], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MS", "]"}],
                 "\"Capacity to store produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Capacity to store produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to store produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to store produced Medical Supplies", 
               "Tooltip"]& ]}]}], "]"}], "-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"INSP", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "INSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"HP", "[", "t", "]"}]}], "+", 
                RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"EP", "[", "t", "]"}], "+", 
                RowBox[{"RP", "[", "t", "]"}], "+", 
                RowBox[{"SP", "[", "t", "]"}]}], ")"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "TP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], ",", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], "-", 
             FractionBox[
              RowBox[{"Min", "[", 
               RowBox[{
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"MS", "[", "t", "]"}],
                    "\"Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "Medical Supplies", "Tooltip"]& ],
                  "\"Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
                RowBox[{
                 RowBox[{"HB", "[", "t", "]"}], " ", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "HP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}],
                  "+", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ],
                   "\"Capacity to store Hospital Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Capacity to store Hospital Medical Supplies",
                    "Tooltip"]& ]}], ",", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                    "\"Capacity to transport produced Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                   
                   Annotation[#, 
                    "Capacity to transport produced Medical Supplies", 
                    "Tooltip"]& ],
                  "\"Capacity to transport produced Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Capacity to transport produced Medical Supplies", 
                  "Tooltip"]& ]}], "]"}], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"msdp", "[", "HB", "]"}],
                  "\"Medical supplies delivery period (number of days)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies delivery period (number of days)", 
                  "Tooltip"]& ],
                "\"Medical supplies delivery period (number of days)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies delivery period (number of days)", 
                "Tooltip"]& ]]}]}], "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HB", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MSD", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"HP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "HP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"INSP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "INSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"ISSP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "ISSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"EP", "[", "t", "]"}], "+", 
             RowBox[{"RP", "[", "t", "]"}], "+", 
             RowBox[{"SP", "[", "t", "]"}]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "TP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"hpmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Hospitalized population medical supplies consumption rate (per \
day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Hospitalized population medical supplies consumption rate (per \
day)", "Tooltip"]& ], "4"},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"upmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Un-hospitalized population medical supplies consumption rate \
(units per day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Un-hospitalized population medical supplies consumption rate \
(units per day)", "Tooltip"]& ], "2"},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"mspcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Medical supplies production cost rate (per unit)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Medical supplies production cost rate (per unit)", 
          "Tooltip"]& ], "1"},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"msdp", "[", "HB", "]"}],
          "\"Medical supplies delivery period (number of days)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Medical supplies delivery period (number of days)", 
          "Tooltip"]& ], "1.5`"},
       {"5", 
        RowBox[{"mspr", "[", "HB", "]"}], 
        RowBox[{"100", " ", 
         RowBox[{"nhbr", "[", "TP", "]"}], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"6", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "TP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.02`"},
       {"7", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "INSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.7`"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "ISSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "3"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "HP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "4"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "HMS", "]"}],
          "\"Capacity to store Hospital Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to store Hospital Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         RowBox[{"HB", "[", "0", "]"}], " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MS", "]"}],
          "\"Capacity to store produced Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to store produced Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "TP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ], 
        FractionBox[
         RowBox[{"HB", "[", "0", "]"}], "10"]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "HMS", "]"}],
             "\"Capacity to store Hospital Medical Supplies\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Capacity to store Hospital Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store Hospital Medical Supplies\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ]}]},
       {"2", 
        RowBox[{
         RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"MS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "MS", "]"}],
             "\"Capacity to store produced Medical Supplies\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Capacity to store produced Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store produced Medical Supplies\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "Capacity to store produced Medical Supplies", 
           "Tooltip"]& ]}]},
       {"4", 
        RowBox[{
         RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.795608087095681*^9, 3.7956095102980013`*^9, 
  3.795615848376639*^9, 3.795618932192349*^9, 3.795618967287293*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"8c3c2b78-4cbc-4e06-8d4b-3338efb9a1b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations explanations", "Section",
 CellChangeTimes->{{3.795009755643981*^9, 
  3.7950097902152576`*^9}},ExpressionUUID->"59c38173-bf11-4e2b-b6b6-\
22e76203d162"],

Cell["\<\
In this section we provide rationale for the equations of SEI2HR-Econ. \
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010423043984*^9}, {3.7952568933006773`*^9, 3.7952568951461697`*^9}, {
   3.795606975264873*^9, 
   3.795606977896607*^9}},ExpressionUUID->"0af4145f-72ae-4407-8866-\
b715d6989280"],

Cell["\<\
The equations for Susceptible, Exposed, Infected, Recovered populations of \
SEI2R are \"standard\" and explanations about them are found in [WK1, HH1]. \
For SEI2HR those equations change because of the stocks Hospitalized \
Population and Hospital Beds. For SEI2HR-Econ the SEI2HR equations change \
because of the stocks Medical Supplies, Medical Supplies Demand, and Hospital \
Medical Supplies.\
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010465495901*^9}, {3.79525691242625*^9, 
   3.79525699939046*^9}},ExpressionUUID->"6fd6ab15-1bc3-4f72-98bd-\
b239a26b83a8"],

Cell["\<\
The equations time unit is one day. The time horizon is one year. Since we \
target COVID-19, [Wk2, AA1], we do not consider births.\
\>", "Text",
 CellChangeTimes->{{3.795057270866074*^9, 3.795057331077129*^9}, {
  3.7951690526899*^9, 3.795169074334569*^9}, {3.795169140666552*^9, 
  3.79516914405199*^9}},ExpressionUUID->"a73c934f-b22e-4e9e-b3ab-\
9a973c3ff689"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " For convenient reading the equations in this section have tooltips for the \
involved stocks and rates."
}], "Text",
 CellChangeTimes->{{3.79501170809335*^9, 3.795011771026613*^9}, {
  3.7951691521641827`*^9, 
  3.7951691906278877`*^9}},ExpressionUUID->"cc7e07f0-7a7b-4639-b189-\
88ce2b3289c4"],

Cell[CellGroupData[{

Cell["Verbalization description of the model", "Subsection",
 CellChangeTimes->{{3.7951134252262917`*^9, 3.7951134340911922`*^9}, {
  3.7951141298027687`*^9, 
  3.7951141319626293`*^9}},ExpressionUUID->"7b0be8c9-5703-4a1d-886f-\
306ea56032c0"],

Cell["\<\
We start with one infected (normally symptomatic) person, the rest of the \
people are susceptible. The infected people meet other people directly or get \
in contact with them indirectly. (Say, susceptible people touch things \
touched by infected.) For each susceptible person there is a probability to \
get the decease. The decease has an incubation period: before becoming \
infected the susceptible are (merely) exposed. The infected recover after a \
certain average infection period or die. A certain fraction of the infected \
become severely symptomatic. The severely symptomatic infected are \
hospitalized if there are enough hospital beds and enough medical supplies. \
The hospitalized severely infected have different death rate than the \
non-hospitalized ones. The number of hospital beds might change: hospitals \
are extended, new hospitals are build, or there are not enough medical \
personnel or supplies. \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.7956002097172623`*^9}},ExpressionUUID->"cd147123-671a-4e20-855e-\
6dada7cc6478"],

Cell["\<\
The different types of populations (infected, hospitalized, recovered, etc.) \
have their own consumption rates of medical supplies. The medical supplies \
are produced with a certain rate (units per day) and delivered after a \
certain delay period. The hospitals have their own storage for medical \
supplies. Medical supplies are delivered to the hospitals only, \
non-hospitalized people go to the medical supplies producer to buy supplies. \
The hospitals have precedence for the medical supplies: if the medical \
supplies are not enough for everyone, the hospital needs are covered first \
(as much as possible.) \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.795600193364479*^9}, {3.7956002334268017`*^9, 3.795600267368258*^9}, {
  3.795600303975923*^9, 3.795600375216481*^9}, {3.79560059189097*^9, 
  3.7956006301193657`*^9}, {3.795600664072548*^9, 
  3.79560067138487*^9}},ExpressionUUID->"70e0d152-d8ca-4833-aa85-\
888c6e1eb1ff"],

Cell["\<\
The medical supplies producer has a certain storage capacity (for supplies.) \
The medical supplies delivery vehicles have a certain -- generally speaking, \
smaller -- capacity. The hospitals have a certain capacity to store medical \
supplies. It is assumed that both producer and hospitals have initial stocks \
of medical supplies. (Following a certain normal, general preparedness \
protocol.)\
\>", "Text",
 CellChangeTimes->{{3.795600382949986*^9, 3.795600585658383*^9}, {
  3.795607170852016*^9, 3.795607249647728*^9}, {3.7956073233693733`*^9, 
  3.795607365447937*^9}, {3.795607397792699*^9, 
  3.795607441624823*^9}},ExpressionUUID->"d1e99740-743b-40bb-b66c-\
a486f9d62d4d"],

Cell["\<\
The combined demand from all populations for medical supplies is tracked \
(accumulated.) The deaths from infection are tracked (accumulated.) Money for \
medical supplies production, money for hospital services, and money from lost \
productivity are tracked (accumulated.) \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.795600193364479*^9}, {3.7956002334268017`*^9, 3.795600267368258*^9}, {
  3.795600303975923*^9, 3.7956003648432617`*^9}, {3.795607472652686*^9, 
  3.7956074783565807`*^9}},ExpressionUUID->"97b7e3ce-eb0a-445b-aab2-\
a7eb112bb343"],

Cell["\<\
The equations below give mathematical interpretation of the model description \
above.\
\>", "Text",
 CellChangeTimes->{{3.7951141429201393`*^9, 
  3.795114172463463*^9}},ExpressionUUID->"4e055e2f-5302-4349-8080-\
a99914819c51"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code for the equations", "Subsection",
 CellChangeTimes->{{3.795055087060851*^9, 
  3.7950551002116947`*^9}},ExpressionUUID->"f9336d09-0acf-4fbc-82ba-\
149b46c53540"],

Cell["\<\
Each equation in this section are derived with code like this:\
\>", "Text",
 CellChangeTimes->{{3.795052951449155*^9, 3.795053023766011*^9}, {
  3.795169381746522*^9, 
  3.795169385220583*^9}},ExpressionUUID->"aa02f6a8-c419-4bf1-842b-\
be7e05b310c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HREcon", ",", " ", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", " ", 
    RowBox[{
     RowBox[{"EquationPosition", "[", 
      RowBox[{"modelSEI2HREcon", ",", " ", "RP"}], "]"}], " ", "+", " ", 
     "1"}], ",", " ", "2"}], "]"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellChangeTimes->{{3.795257070772932*^9, 3.795257076056204*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"476d8f1c-3010-473e-ad49-8b9ccf55bf3f"],

Cell[TextData[{
 "and then the output cell is edited to be \
\[OpenCurlyDoubleQuote]DisplayFormula\[CloseCurlyDoubleQuote] and have ",
 StyleBox["CellLabel", "Program"],
 " value corresponding to the stock of interest."
}], "Text",
 CellChangeTimes->{{3.795053027634798*^9, 3.7950530654130917`*^9}, {
  3.795053137977296*^9, 3.795053152219589*^9}, {3.795053185430107*^9, 
  3.795053219518152*^9}},ExpressionUUID->"60f66cdb-6f17-4046-8540-\
e8565b9b6157"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The infected and hospitalized populations", "Subsection",
 CellChangeTimes->{{3.795012203731121*^9, 
  3.795012248214262*^9}},ExpressionUUID->"f7d4b0fc-1cf2-4f7b-b7d5-\
80995a1c5e4d"],

Cell["\<\
SEI2HR has two types of infected populations: a normally symptomatic one and \
a severely symptomatic one. A major assumption for SEI2HR is that only the \
severely symptomatic people are hospitalized. (That assumption is also \
reflected in the diagram in the introduction.)\
\>", "Text",
 CellChangeTimes->{{3.795012170891933*^9, 3.795012197037404*^9}, {
  3.795012261129662*^9, 3.7950124243923893`*^9}, {3.795169404460878*^9, 
  3.795169426667719*^9}},ExpressionUUID->"64d528cb-517d-4c90-b233-\
fad94bc8fc63"],

Cell["\<\
Each of those three populations have their own contact rates and mortality \
rates.\
\>", "Text",
 CellChangeTimes->{{3.795012435530241*^9, 3.795012482105783*^9}, 
   3.795012649923788*^9},ExpressionUUID->"ab177d96-650c-415e-b9c1-\
26b7a447b07e"],

Cell["Here are the contact rates from the SEI2HR-Econ dictionary", "Text",
 CellChangeTimes->{{3.795169453185158*^9, 3.7951694963064423`*^9}, {
  3.795257049610869*^9, 
  3.795257050399251*^9}},ExpressionUUID->"9579a44b-f0ee-4618-a7a7-\
dfd30921e03a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HREcon", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.7950126193806953`*^9}, {
  3.795257031499102*^9, 3.795257032061474*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"dbadacfb-d76f-4760-8d6e-858eaee2c69f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the normally symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the severely symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the hospitalized population\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Beta][$CellContext`INSP] -> 
    "Contact rate for the normally symptomatic population", $CellContext`\
\[Beta][$CellContext`ISSP] -> 
    "Contact rate for the severely symptomatic population", $CellContext`\
\[Beta][$CellContext`HP] -> "Contact rate for the hospitalized population"}],
  Editable->False]], "Output",
 CellChangeTimes->{3.7956080871078663`*^9, 3.795609510333015*^9, 
  3.7956158483961363`*^9, 3.7956189322040567`*^9, 3.795618967298439*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"93fc67ef-de59-40d9-b226-a03a46111265"]
}, Open  ]],

Cell["Here are the mortality rates from the SEI2HR-Econ dictionary", "Text",
 CellChangeTimes->{{3.7951694750076237`*^9, 3.795169493707717*^9}, {
  3.795257041510532*^9, 
  3.795257046461287*^9}},ExpressionUUID->"809eb81e-c6e6-43a6-8abb-\
5b06d097f755"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HREcon", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.795012631947336*^9}, {
  3.7952570385309563`*^9, 3.795257039115144*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"5fbf641a-9b20-4428-80e5-432e3952a737"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "TP", "]"}], 
      "\[Rule]", "\<\"Population death rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Infected Normally Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Infected Severely Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Hospitalized Population death rate\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Mu][$CellContext`TP] -> 
    "Population death rate", $CellContext`\[Mu][$CellContext`INSP] -> 
    "Infected Normally Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`ISSP] -> 
    "Infected Severely Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`HP] -> "Hospitalized Population death rate"}],
  
  Editable->False]], "Output",
 CellChangeTimes->{3.795608087132324*^9, 3.795609510362064*^9, 
  3.7956158484183083`*^9, 3.7956189322517023`*^9, 3.79561896732495*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"dc4591e5-5678-417a-8135-05aaba17a1f9"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Below with \[OpenCurlyDoubleQuote]Infected Population\
\[CloseCurlyDoubleQuote] we mean both stocks Infected Normally Symptomatic \
Population (INSP) and Infected Severely Symptomatic Population (ISSP)."
}], "Text",
 CellChangeTimes->{{3.795012809518549*^9, 3.795012868053237*^9}, {
  3.795013451701508*^9, 
  3.7950134695881767`*^9}},ExpressionUUID->"892a5009-5dce-47a7-bb23-\
7f2d41686fe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Population", "Subsection",
 CellChangeTimes->{{3.795011305110136*^9, 
  3.795011315079767*^9}},ExpressionUUID->"8d5d45d1-12a2-4f9a-927b-\
09d75b72b978"],

Cell["\<\
In this notebook we consider a DAE\[CloseCurlyQuote]s formulation of \
SEI2HR-Econ. The stock Total Population has the following (obvious) algebraic \
equation:\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.7950115573188667`*^9, 3.7950116299716253`*^9}, {3.795257055146229*^9, 
  3.79525705599053*^9}},ExpressionUUID->"56e12740-ebac-42c7-bf25-\
9f54345388d7"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TooltipBox[
    TagBox[
     TooltipBox[
      RowBox[{"TP", "[", "t", "]"}],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ],
    "\"Total Population\"",
    TooltipStyle->{
     Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
      FontSize -> 20}],
   Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
  RowBox[{"Max", "[", 
   RowBox[{"0", ",", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"RP", "[", "t", "]"}],
         "\"Recovered Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Recovered Population", "Tooltip"]& ],
       "\"Recovered Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
   "]"}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942594571*^9, 3.7955228316999817`*^9, 
  3.795525996038437*^9, 3.79552603844665*^9, 3.795532564962467*^9, 
  3.795540133279353*^9},
 CellLabel->"(TP)",ExpressionUUID->"4df11932-01b1-4b29-a788-55532d081d45"],

Cell[TextData[{
 "Note that with ",
 StyleBox["Max", "Program"],
 " we specified that the total population cannot be less than ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "04dbf0a8-1180-4fd7-a023-ed5449bcfc93"],
 "."
}], "Text",
 CellChangeTimes->{{3.795011824465151*^9, 3.7950118660692053`*^9}, {
  3.795169520877777*^9, 
  3.79516955222272*^9}},ExpressionUUID->"6b3ada03-b48a-4483-a4f3-\
88b57b8f0f57"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " As mentioned in the introduction, the package [AAp1] allows for the use of \
non-algebraic formulation, without an equation for TP."
}], "Text",
 CellChangeTimes->{{3.795011390804233*^9, 3.795011431203477*^9}, {
  3.795011779812842*^9, 3.79501178866679*^9}, {3.7951695653608837`*^9, 
  3.79516957526053*^9}},ExpressionUUID->"f390e241-7da1-4f7b-a957-\
3426ff40eef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Susceptible Population", "Subsection",
 CellChangeTimes->{{3.7924327404893208`*^9, 3.792432755970215*^9}, {
  3.792432786814529*^9, 
  3.792432787106859*^9}},ExpressionUUID->"58a75a4f-af3c-4001-b9a3-\
8aac36a47fb1"],

Cell["\<\
The stock Susceptible Population (SP) is decreased by (1) infections derived \
from stocks Infected Populations and Hospitalized Population (HP), and (2) \
morality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.7950134363343573`*^9, 
  3.795013445243763*^9}},ExpressionUUID->"ab520e84-281a-49f2-8df6-\
6bb7ed75e5ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["SP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"SP", "[", "t", "]"}],
          "\"Susceptible Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Susceptible Population", "Tooltip"]& ],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"TP", "[", "t", "]"}],
         "\"Total Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Total Population", "Tooltip"]& ],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942656529*^9, 3.795522831746725*^9, 
  3.795525996075317*^9, 3.795526038484165*^9, 3.795532565005309*^9, 
  3.795540133319583*^9, 3.795540185584311*^9},
 CellLabel->"(SP)",ExpressionUUID->"10471187-570f-4930-97a9-02a0f0b374be"],

Cell["\<\
Because we hospitalize the severely infected people only instead of the term\
\>", "Text",
 CellChangeTimes->{{3.795013088546363*^9, 
  3.795013112486208*^9}},ExpressionUUID->"a532758d-5d97-4867-94be-\
c8eec1ddf8aa"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"ISSP", "[", "t", "]"}], 
   RowBox[{"SP", "[", "t", "]"}], 
   RowBox[{"\[Beta]", "[", "ISSP", "]"}]}], 
  RowBox[{"TP", "[", "t", "]"}]]], "DisplayFormula",
 CellChangeTimes->{{3.795013137784575*^9, 3.795013155102044*^9}, {
  3.795013235922861*^9, 
  3.795013237228023*^9}},ExpressionUUID->"da26b84c-15d1-472d-95a1-\
fca1b915ce78"],

Cell["we have the terms ", "Text",
 CellChangeTimes->{{3.795013184959922*^9, 
  3.795013188537169*^9}},ExpressionUUID->"8f88d5c3-a041-436a-b6d4-\
9c1964b3d64e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Beta]", "[", "HP", "]"}],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ],
      "\"Contact rate for the hospitalized population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Contact rate for the hospitalized population", 
      "Tooltip"]& ]}], 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"TP", "[", "t", "]"}],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ],
     "\"Total Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], 
   "."}]}]], "DisplayFormula",
 CellChangeTimes->{{3.7950132026218*^9, 
  3.7950132318285713`*^9}},ExpressionUUID->"5557feeb-8a01-4673-81b7-\
e6c8b5e3e5d0"],

Cell[TextData[{
 "The first term is for the infections derived from the hospitalized \
population. The second term for the infections derived from people who are \
infected severely symptomatic and ",
 StyleBox["not",
  FontSlant->"Italic"],
 " hospitalized."
}], "Text",
 CellChangeTimes->{{3.795013242280198*^9, 3.795013384583099*^9}, {
  3.795169680359105*^9, 
  3.79516968572535*^9}},ExpressionUUID->"4ff17277-254d-46eb-b449-\
6d3a410be427"],

Cell[CellGroupData[{

Cell["Births term", "Subsubsection",
 CellChangeTimes->{{3.7950576027462673`*^9, 
  3.795057606380949*^9}},ExpressionUUID->"e24562b2-25fa-4215-857f-\
9cfa0f4ea9eb"],

Cell["\<\
Note that we do not consider in this notebook births, but the births term can \
be included in SP\[CloseCurlyQuote]s equation:\
\>", "Text",
 CellChangeTimes->{{3.7950574656071463`*^9, 
  3.7950575132513103`*^9}},ExpressionUUID->"efd18262-1cc4-4a34-b773-\
e5a291d1ec5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "=", 
     RowBox[{"SEI2HREconModel", "[", 
      RowBox[{"t", ",", 
       RowBox[{"\"\<BirthsTerm\>\"", "\[Rule]", "True"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ModelGridTableForm", "[", "m", "]"}], "[", "\"\<Equations\>\"", 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"EquationPosition", "[", 
       RowBox[{"m", ",", "SP"}], "]"}], "+", "1"}], ",", "2"}], 
    "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7950573427497377`*^9, 3.795057448811531*^9}, {
  3.795259942139579*^9, 3.795259942858982*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"8ccec829-91d5-445a-b862-1968b6252161"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["SP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ]}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Population death rate", "Tooltip"]& ]}], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"HP", "[", "t", "]"}],
         "\"Hospitalized Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ],
       "\"Hospitalized Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "HP", "]"}],
         "\"Contact rate for the hospitalized population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Contact rate for the hospitalized population", 
         "Tooltip"]& ],
       "\"Contact rate for the hospitalized population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Contact rate for the hospitalized population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Population death rate", "Tooltip"]& ], " ", 
    RowBox[{"TP", "[", "0", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.79560808722692*^9, 3.7956095104406033`*^9, 
  3.795615848508851*^9, 3.7956189323992968`*^9, 3.79561896739555*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"5de4c786-d282-4fba-bc20-2f5f25cb53ac"]
}, Open  ]],

Cell["\<\
The births rate is the same as the death rate, but it can be programmatically \
changed. (See [AAp2].)\
\>", "Text",
 CellChangeTimes->{{3.795057523184978*^9, 3.7950575655759*^9}, {
  3.795169710914278*^9, 
  3.795169725223934*^9}},ExpressionUUID->"f77d0a35-409d-434b-b957-\
65d4dd3dc596"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exposed Population", "Subsection",
 CellChangeTimes->{{3.7950129643131742`*^9, 
  3.795012971420479*^9}},ExpressionUUID->"f4b0f0d7-cc04-4bb0-9583-\
75f44afad27d"],

Cell["\<\
The stock Exposed Population (EP) is increased by (1) infections derived from \
the stocks Infected Populations and Hospitalized Population, and (2) \
mortality cases derived with the typical mortality rate. EP is decreased by \
(1) the people who after a certain average incubation period (aincp) become \
ill, and (2) mortality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.795012987496993*^9, 3.795012993503879*^9}, {3.795013405599039*^9, 
  3.795013431811366*^9}, {3.795013483450334*^9, 3.795013611240715*^9}, {
  3.7950145599567747`*^9, 3.795014563905554*^9}, {3.795014710994252*^9, 
  3.795014712678007*^9}, {3.795169741456602*^9, 3.7951697418978567`*^9}, {
  3.7951699972209473`*^9, 
  3.795169997227285*^9}},ExpressionUUID->"23eda04c-c024-40f2-8fed-\
1eb31cf445bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["EP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"HP", "[", "t", "]"}],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "HP", "]"}],
         "\"Contact rate for the hospitalized population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the hospitalized population", 
         "Tooltip"]& ],
       "\"Contact rate for the hospitalized population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the hospitalized population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"EP", "[", "t", "]"}],
        "\"Exposed Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Exposed Population", "Tooltip"]& ],
      "\"Exposed Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox["aincp",
           "\"Average incubation period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average incubation period", "Tooltip"]& ],
         "\"Average incubation period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ]}], 
     ")"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209427360477`*^9, 3.795522831837886*^9, 
  3.795525996146151*^9, 3.795526038555345*^9, 3.795532565095487*^9, 
  3.79554013339822*^9, 3.795540238909336*^9},
 CellLabel->"(EP)",ExpressionUUID->"7d8aa2a1-ff5d-4259-bcd7-6bee7ffc741f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Normally Symptomatic Population", "Subsection",
 CellChangeTimes->{{3.792432758488686*^9, 
  3.792432803735303*^9}},ExpressionUUID->"87767080-69e3-43cb-879c-\
1396889a376f"],

Cell["\<\
INSP is increased by a fraction of the people who have been exposed. That \
fraction is derived with the parameter severely symptomatic population \
fraction (sspf). INSP is decreased by (1) the people who recover after a \
certain average infection period (aip), and (2) the normally symptomatic \
people who die from the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 3.795014860425259*^9}, {
  3.795169794167276*^9, 
  3.79516981121101*^9}},ExpressionUUID->"6f2f2cd1-f842-499e-8e37-\
9775ac0b804a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["INSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"sspf", "[", "SP", "]"}],
           "\"Severely Symptomatic Population Fraction\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Severely Symptomatic Population Fraction", 
           "Tooltip"]& ],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ]}], ")"}]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942771061*^9, 3.7955228318834963`*^9, 
  3.795525996182294*^9, 3.795526038590839*^9, 3.795532565138287*^9, 
  3.795540133436645*^9, 3.795540285300967*^9},
 CellLabel->"(INSP)",ExpressionUUID->"b0a097d7-6301-43b5-a290-36260ac60157"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Severely Symptomatic Population", "Subsection",
 CellChangeTimes->{{3.792432758488686*^9, 
  3.792432784992174*^9}},ExpressionUUID->"0cedad9c-0ebb-4fc4-b52f-\
ab2dc38ea842"],

Cell["\<\
ISSP is increased by a fraction of the people who have been exposed. That \
fraction is corresponds to the parameter severely symptomatic population \
fraction (sspf). ISSP is decreased by (1) the people who recover after a \
certain average infection period (aip), (2) the hospitalized severely \
symptomatic people who die from the disease, and (3) the non-hospitalized \
severely symptomatic people who die from the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 3.795014878900036*^9}, {
  3.795015376562159*^9, 3.795015415250908*^9}, {3.79516985073234*^9, 
  3.795169867393639*^9}},ExpressionUUID->"2869ec69-72bd-4fda-8f78-\
6953b0fb40d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["ISSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"sspf", "[", "SP", "]"}],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ],
       "\"Severely Symptomatic Population Fraction\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Severely Symptomatic Population Fraction", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942811768*^9, 3.795522831927884*^9, 
  3.795525996218272*^9, 3.79552603862712*^9, 3.795532565181128*^9, 
  3.795540133475604*^9, 3.7955403144192867`*^9, 3.795540373948051*^9},
 CellLabel->"(ISSP)",ExpressionUUID->"0eba0b13-add5-413f-929d-c10f04675193"],

Cell["\<\
Note that we do not assume that severely symptomatic people recover faster if \
they are hospitalized, only that they have a different death rate.\
\>", "Text",
 CellChangeTimes->{{3.795015781197987*^9, 
  3.795015848687818*^9}},ExpressionUUID->"fa06293f-06a4-41ea-bf31-\
be16ef4befc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospitalized Population", "Subsection",
 CellChangeTimes->{{3.795014886201209*^9, 3.7950148910265713`*^9}, {
  3.795015657276829*^9, 
  3.795015657681332*^9}},ExpressionUUID->"beb0f77d-f9c5-471c-b3a8-\
a2fb4dfed69a"],

Cell["\<\
The amount of people that can be hospitalized is determined by the available \
Hospital Beds (HB) -- the stock Hospitalized Population (HP) is subject to a \
resource limitation by the stock HB.\
\>", "Text",
 CellChangeTimes->{{3.795015965081923*^9, 3.7950161008835*^9}, {
  3.7950161387975473`*^9, 3.7950161553116302`*^9}, {3.795169923319195*^9, 
  3.795169928357889*^9}},ExpressionUUID->"bb3c4600-2b15-4077-b5c1-\
5a7a3667cdbc"],

Cell["\<\
The equation of the stock HP can be easily understood from the following \
dynamics description points:\
\>", "Text",
 CellChangeTimes->{{3.7950156429448633`*^9, 
  3.795015722910379*^9}},ExpressionUUID->"b0e1eb60-03d0-4307-a09a-\
19ff3f396d44"],

Cell[CellGroupData[{

Cell["\<\
If the number of hospitalized people is less that the number of hospital beds \
we hospitalize the new ISSP people.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.7950159589622183`*^9}, {3.795016165752198*^9, 
  3.795016271492449*^9}, {3.795542419308798*^9, 
  3.795542419309042*^9}},ExpressionUUID->"3e39e6d1-b589-46a6-ad7f-\
2e1859a9bfc2"],

Cell["\<\
The Available Hospital Beds (AHB) are determined by the minimum of (i) the \
non-occupied hospital beds, and (ii) the hospital medical supplies divided by \
the ISSP consumption rate.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.7950159589622183`*^9}, {3.795016165752198*^9, 
  3.795016271492449*^9}, {3.795542421027326*^9, 
  3.795542568528359*^9}},ExpressionUUID->"bdf84497-41cf-4dca-9924-\
a49819fba429"],

Cell["\<\
If the new ISSP people are more than AHB the hospital takes as many as AHB.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016378922151*^9}, {3.795542409135491*^9, 3.795542415930564*^9}, {
  3.795542512400385*^9, 3.795542514652516*^9}, {3.79560762751339*^9, 
  3.7956076360174313`*^9}},ExpressionUUID->"a8ba903b-c3ec-45f0-b253-\
ec41427c93e3"],

Cell["\<\
Hospitalized people have the same average infection period (aip).\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016441181155*^9}},ExpressionUUID->"2dcbaa3e-cf2b-45d5-b149-\
1b03c357c797"],

Cell["\<\
Hospitalized (severely symptomatic) people have their own mortality rate.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016511121223*^9}, {3.795017657941299*^9, 3.795017675593258*^9}, {
  3.795542344489006*^9, 
  3.795542344492969*^9}},ExpressionUUID->"fb115abd-8c70-45f2-a972-\
1b5b6a584b6b"]
}, Open  ]],

Cell["Here is the HP equation:", "Text",
 CellChangeTimes->{{3.795564895154669*^9, 
  3.795564910904443*^9}},ExpressionUUID->"02ea873d-d5e8-402b-87c8-\
54035629b749"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], ",", 
             
             FractionBox[
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HMS", "[", "t", "]"}],
                  "\"Hospital Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                "\"Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]], ",", 
             FractionBox[
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"EP", "[", "t", "]"}],
                   "\"Exposed Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Exposed Population", "Tooltip"]& ],
                 "\"Exposed Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"sspf", "[", "SP", "]"}],
                   "\"Severely Symptomatic Population Fraction\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Severely Symptomatic Population Fraction", 
                   "Tooltip"]& ],
                 "\"Severely Symptomatic Population Fraction\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Severely Symptomatic Population Fraction", 
                 "Tooltip"]& ]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]]}], 
            "]"}], 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], "<", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HB", "[", "t", "]"}],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}], "-", 
   FractionBox[
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795542798916285*^9, 3.795547094485388*^9, 
  3.795557881192458*^9, 3.7955580339994383`*^9},
 CellLabel->"(HP)",ExpressionUUID->"c273eacd-34cc-4830-8c7e-ef27b94d70a1"],

Cell["\<\
Note that although we know that in a given day some hospital beds are going \
to be freed they are not considered in the hospitalization plans for that \
day. Similarly, we know that new medical supplies are coming but we do not \
include them into AHB.\
\>", "Text",
 CellChangeTimes->{{3.795057218204574*^9, 3.795057257377419*^9}, {
  3.7950576554470587`*^9, 3.795057769260702*^9}, {3.795557957062524*^9, 
  3.795558011896863*^9}},ExpressionUUID->"68318750-4a4a-4a35-87d8-\
76e6cc222c46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recovered Population", "Subsection",
 CellChangeTimes->{{3.792432904959959*^9, 
  3.792432913325151*^9}},ExpressionUUID->"5e05ba14-efcd-40df-8921-\
8ec0d7268588"],

Cell["\<\
The stock Recovered Population (RP) is increased by the recovered infected \
people and decreased by mortality cases derived with the typical mortality \
rate.\
\>", "Text",
 CellChangeTimes->{{3.7950176864611464`*^9, 3.795017823952033*^9}, {
   3.795018241646221*^9, 3.79501825521381*^9}, 
   3.79516998382215*^9},ExpressionUUID->"1a765286-5ab8-4506-9572-\
da693f85f06d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["RP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"RP", "[", "t", "]"}],
        "\"Recovered Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Recovered Population", "Tooltip"]& ],
      "\"Recovered Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209428874683`*^9, 3.79552283207892*^9, 
  3.7955259962923803`*^9, 3.795526038699987*^9, 3.79553256526856*^9, 
  3.795540133556961*^9, 3.795540452836811*^9},
 CellLabel->"(RP)",ExpressionUUID->"0dcd528b-8b42-4741-a03c-273d1986a675"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deceased Infected Population", "Subsection",
 CellChangeTimes->{{3.795015491686062*^9, 3.795015498614624*^9}, {
  3.795017874057209*^9, 
  3.7950178753284683`*^9}},ExpressionUUID->"54142616-530a-4b27-ae9b-\
309ec86001e2"],

Cell["\<\
The stock Deceased Infected Population (DIP) accumulates the deaths of the \
people who are infected. Note that we utilize the different death rates for \
HP and ISSP.\
\>", "Text",
 CellChangeTimes->{{3.7950178311707897`*^9, 3.795017955610054*^9}, {
  3.7950182366955976`*^9, 
  3.795018237010264*^9}},ExpressionUUID->"8d8c241b-f126-4606-af6a-\
1ec9dcca6e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["DIP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209429217157`*^9, 3.7955228321251497`*^9, 
  3.795525996327709*^9, 3.795526038735182*^9, 3.795532565311884*^9, 
  3.795540133594998*^9, 3.7955404776310053`*^9},
 CellLabel->"(DIP)",ExpressionUUID->"2125a313-0e7a-4195-aca9-d367f58fee40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospital Beds", "Subsection",
 CellChangeTimes->{{3.7924329553216743`*^9, 3.792432978237731*^9}, {
  3.795015560402337*^9, 
  3.795015565205371*^9}},ExpressionUUID->"d8367f9e-b854-4fbe-9074-\
2cf985f0d195"],

Cell["\<\
The stock Hospital Beds (HB) can change with a rate that reflects the number \
of hospital beds change rate (nhbcr) per day. Generally speaking, using nhbcr \
we can capture scenarios, like, extending hospitals, building new hospitals, \
recruitment of new medical personnel, loss of medical personnel (due to \
infections.)\
\>", "Text",
 CellChangeTimes->{{3.795017960256741*^9, 3.795018199075117*^9}, {
  3.795018231925222*^9, 3.795018232509716*^9}, {3.795170071371283*^9, 
  3.795170074059346*^9}},ExpressionUUID->"ba2892c0-0c98-4c25-9c36-\
6b8350e0cb2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HB", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HB", "[", "t", "]"}],
       "\"Hospital Beds\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital Beds", "Tooltip"]& ],
     "\"Hospital Beds\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Number of hospital beds change rate (per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Number of hospital beds change rate (per day)", 
       "Tooltip"]& ],
     "\"Number of hospital beds change rate (per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Number of hospital beds change rate (per day)", 
     "Tooltip"]& ]}]}]], "DisplayFormula",
 CellChangeTimes->{3.79502519794875*^9, 3.795025833891605*^9},
 CellLabel->"(HB)",ExpressionUUID->"861b06bc-4415-4990-9f06-29c3e6822f65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospital Medical Supplies", "Subsection",
 CellChangeTimes->{{3.795257404308092*^9, 3.795257415704412*^9}, {
  3.795257447294034*^9, 
  3.795257448329671*^9}},ExpressionUUID->"960a9aac-56af-43b1-a674-\
555d2ed1f442"],

Cell["\<\
The Hospital Medical Supplies (HMS) are decreased according to the medical \
supplies consumption rate (mscr) of HP and increased by a Medical Supplies \
(MS) delivery term (to be described next.)\
\>", "Text",
 CellChangeTimes->{{3.795558093821093*^9, 3.795558206862734*^9}, {
  3.795558486010749*^9, 3.7955585001886873`*^9}, {3.7955591408757353`*^9, 
  3.7955591856064453`*^9}, {3.795559263639245*^9, 
  3.795559265708139*^9}},ExpressionUUID->"67ac4510-3217-411f-946f-\
70e741cb5384"],

Cell["\<\
The MS delivery term is build with the following assumptions / postulates: \
\>", "Text",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955590952342377`*^9}, {
  3.79555919091645*^9, 3.795559232068512*^9}, {3.7955592735478163`*^9, 
  3.7955593091115017`*^9}},ExpressionUUID->"ef99e4a2-917d-4095-a6a9-\
5d65ed94da84"],

Cell[CellGroupData[{

Cell["\<\
 Every day the hospital attempts to order MS that correspond to HB multiplied \
by mscr.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.79555931618855*^9}, {3.795559576115971*^9, 
  3.795559576116148*^9}},ExpressionUUID->"6a33c5a2-3fcd-4e14-b7ff-\
98b3817a1dd1"],

Cell[TextData[{
 "The hospital has limited capacity of MS storage, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "HMS", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6fa3edfe-36d4-4a0e-99b7-3473ab4c7d1b"],
 "."
}], "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.79555931618855*^9}, {3.795559577046814*^9, 
  3.795559612518949*^9}},ExpressionUUID->"d3166257-1b59-436c-a187-\
b30132c6ed48"],

Cell[TextData[{
 "The MS producer has limited capacity for delivery, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MDS", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0f0b697e-fa88-4de3-b830-15b17a29a309"],
 "."
}], "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 
  3.7955593944356318`*^9}},ExpressionUUID->"c5fd803c-419e-4413-8e14-\
f13b0d20adf0"],

Cell["\<\
The hospital demand for MS has precedence over the demands for the \
non-hospitalized populations.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 
  3.795559434337143*^9}},ExpressionUUID->"4e03a843-05d4-4bb9-8f3c-\
6891bc40af56"],

Cell["\<\
Hence, if the MS producer has less stock of MS than the demand of the \
hospital then MS producer\[CloseCurlyQuote]s whole amount of MS goes to the \
hospital.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.795559348801683*^9}, {3.795559475253771*^9, 
  3.795559530118023*^9}, {3.795559623529941*^9, 3.795559623533687*^9}, {
  3.795607748375429*^9, 
  3.795607759501176*^9}},ExpressionUUID->"ccf222ea-5d2a-461c-b609-\
4cfccf6fd3eb"],

Cell["\<\
The supplies are delivered with some delay period: the medical supplies \
delivery period (msdp).\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.795559348801683*^9}, {3.795559475253771*^9, 
  3.795559530118023*^9}, {3.795559624287034*^9, 
  3.7955596986279287`*^9}},ExpressionUUID->"e0b3a09a-8db4-4257-a301-\
da68a6f8c8ac"]
}, Open  ]],

Cell["Here is the MS delivery term:", "Text",
 CellChangeTimes->{{3.795561492707038*^9, 
  3.795561505205473*^9}},ExpressionUUID->"b7201446-8eaa-4cd8-a514-\
cd19f33381b4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"MS", "[", "t", "]"}], ",", 
    RowBox[{"\[Kappa]", "[", "MSD", "]"}], ",", 
    RowBox[{
     RowBox[{"HB", "[", "t", "]"}], " ", 
     RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Kappa]", "[", "HMS", "]"}], "-", 
     RowBox[{"HMS", "[", "t", "]"}]}]}], "]"}], 
  RowBox[{"msdp", "[", "HB", "]"}]]], "DisplayFormula",
 CellChangeTimes->{{3.79556199969177*^9, 3.795562003770822*^9}, {
  3.7955620597221203`*^9, 3.795562062886879*^9}, {3.795616398045906*^9, 
  3.795616404086885*^9}, {3.795616464107374*^9, 
  3.795616482547504*^9}},ExpressionUUID->"4914d895-0d2d-43cb-bb62-\
0acc718959fe"],

Cell["Here is the corresponding HMS equation:", "Text",
 CellChangeTimes->{{3.795559705512985*^9, 
  3.795559720880821*^9}},ExpressionUUID->"470dd864-358a-4380-acf9-\
ef27bbd01b0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HMS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Min", "[", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HMS", "[", "t", "]"}],
          "\"Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
        "\"Hospital Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
      RowBox[{
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ],
         "\"Medical supplies consumption rate (units per day per person)\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, 
         "Medical supplies consumption rate (units per day per person)", 
         "Tooltip"]& ]}]}], "]"}]}], "+", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"MS", "[", "t", "]"}],
          "\"Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical Supplies", "Tooltip"]& ],
        "\"Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
      RowBox[{
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HB", "[", "t", "]"}],
           "\"Hospital Beds\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospital Beds", "Tooltip"]& ],
         "\"Hospital Beds\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ],
         "\"Medical supplies consumption rate (units per day per person)\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, 
         "Medical supplies consumption rate (units per day per person)", 
         "Tooltip"]& ]}], ",", 
      RowBox[{
       RowBox[{"-", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"HMS", "[", "t", "]"}],
            "\"Hospital Medical Supplies\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
          "\"Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], "+", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"\[Kappa]", "[", "HMS", "]"}],
           "\"Capacity to store Hospital Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ],
         "\"Capacity to store Hospital Medical Supplies\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Capacity to store Hospital Medical Supplies", 
         "Tooltip"]& ]}], ",", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ],
        "\"Capacity to transport produced Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Capacity to transport produced Medical Supplies", 
        "Tooltip"]& ]}], "]"}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"msdp", "[", "HB", "]"}],
        "\"Medical supplies delivery period (number of days)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Medical supplies delivery period (number of days)", 
        "Tooltip"]& ],
      "\"Medical supplies delivery period (number of days)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Medical supplies delivery period (number of days)", 
      "Tooltip"]& ]]}]}]], "DisplayFormula",
 CellChangeTimes->{
  3.7955209429570208`*^9, 3.795522832169839*^9, 3.795525996363226*^9, 
   3.795526038771268*^9, 3.795532565356113*^9, 3.795540133633727*^9, {
   3.7955411513790827`*^9, 3.795541176558571*^9}, 3.79554279895724*^9, 
   3.795547094526565*^9, 3.795557881230196*^9, {3.795558023634534*^9, 
   3.795558034038474*^9}, 3.7955580875025187`*^9, 3.795558401471685*^9},
 CellLabel->"(HMS)",ExpressionUUID->"f784b65e-72ac-49f1-b4c5-504703c4a592"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies", "Subsection",
 CellChangeTimes->{{3.795257387870854*^9, 
  3.795257393372752*^9}},ExpressionUUID->"50b46568-5517-416e-a275-\
2a9009aeeb6f"],

Cell["\<\
The equation of the Medical Supplies (MS) stock is based on the following \
assumptions / postulates:\
\>", "Text",
 CellChangeTimes->{{3.795563429382001*^9, 
  3.795563490155335*^9}},ExpressionUUID->"bedc2762-3813-4f97-bcee-\
25e6d31950aa"],

Cell[CellGroupData[{

Cell["\<\
The non-hospitalized people go to the MS producer to buy supplies. (I.e. MS \
delivery is to the hospital only.)\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.79556356004102*^9}, {
  3.795607809599927*^9, 
  3.795607822964005*^9}},ExpressionUUID->"386b2336-a5c4-41ed-94cf-\
0284104a0aa4"],

Cell[TextData[{
 "The MS producer vehicles have certain capacity, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MSD", "]"}], TraditionalForm]],ExpressionUUID->
  "104d1d6d-828c-4868-92e9-cb7aa713ce5b"],
 "."
}], "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563594094672*^9}, {
  3.795564282328924*^9, 3.795564282329981*^9}, {3.795607839109335*^9, 
  3.795607857089973*^9}},ExpressionUUID->"4a513888-a559-49cf-baf6-\
6d9cc73237a6"],

Cell["\<\
The MS producer has a certain storage capacity (for MS stock.)\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563594094672*^9}, {
  3.795564282977831*^9, 
  3.795564315839705*^9}},ExpressionUUID->"7b0123dc-9a84-4d72-bf60-\
55bf6d391725"],

Cell["\<\
Each of the populations INSP, ISSP, and HP has its own specific medical \
supplies consumption rate (mscr). EP, RP, and TP have the same mscr.\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.79556369494154*^9}, {
  3.795563763590469*^9, 3.795563797982285*^9}, {3.79560789432524*^9, 
  3.795607904630165*^9}},ExpressionUUID->"eee3a747-ff6e-46b9-b199-\
6fad2d280a94"],

Cell["\<\
The hospital has precedence in its MS order. I.e. the demand from the \
hospital is satisfied first, and then the demand of the rest of the \
populations.\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563747356545*^9}, {
  3.795563990000916*^9, 3.795564000226679*^9}, {3.795607926174942*^9, 
  3.795607932497357*^9}},ExpressionUUID->"6c73da70-46e4-45fd-920c-\
bbeef846cc57"]
}, Open  ]],

Cell["\<\
Here is the MS delivery term described in the previous section:\
\>", "Text",
 CellChangeTimes->{{3.7955640568160973`*^9, 
  3.79556408433342*^9}},ExpressionUUID->"dcb67bc7-63bb-4a8a-abd2-\
5d57691bd23f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dlvr", "=", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"MS", "[", "t", "]"}], ",", 
      RowBox[{"\[Kappa]", "[", "MSD", "]"}], ",", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Kappa]", "[", "HMS", "]"}], "-", 
       RowBox[{"HMS", "[", "t", "]"}]}]}], "]"}], 
    RowBox[{"msdp", "[", "HB", "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.795561678683587*^9, 3.795561690880993*^9}, {
  3.795561878266411*^9, 3.795561881334057*^9}, {3.795562078556941*^9, 
  3.795562081021557*^9}, {3.79556494954044*^9, 3.7955649502134027`*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"a9cfc2a5-52e4-4bd9-a0c8-2f3aacc1621f"],

Cell["\<\
Here is the MS formula with the MS delivery term replaced with \
\[OpenCurlyDoubleQuote]Dlvr\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.795564086898384*^9, 3.79556412089655*^9}, {
   3.795564158438341*^9, 3.795564159203266*^9}, 
   3.795564851447219*^9},ExpressionUUID->"d0d8222f-aefe-45c4-8b4f-\
5eeb6c0152cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModelGridTableForm", "[", 
     RowBox[{"modelSEI2HREcon", ",", 
      RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "False"}]}], "]"}], "[", 
    "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"EquationPosition", "[", 
      RowBox[{"modelSEI2HREcon", ",", "MS"}], "]"}], "+", "1"}], ",", "2"}], 
   "\[RightDoubleBracket]"}], "/.", 
  RowBox[{"dlvr", "\[Rule]", "Dlvr"}]}]], "Input",
 CellChangeTimes->{{3.795563916279305*^9, 3.795563952765279*^9}, {
  3.795564163278318*^9, 3.795564164198698*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"80760d0e-7b99-44b8-ad81-9a1ce00fb3b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "Dlvr"}], "-", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Dlvr"}], "+", 
      RowBox[{"MS", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"INSP", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"HP", "[", "t", "]"}]}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"mscr", "[", "ISSP", "]"}]}], "+", 
      RowBox[{
       RowBox[{"mscr", "[", "TP", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}], "+", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"mspr", "[", "HB", "]"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"MS", "[", "t", "]"}]}], "+", 
      RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.795608087261528*^9, 3.795609510487142*^9, 
  3.795615848552451*^9, 3.795618932452776*^9, 3.795618967427163*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"57dc9d6b-c62b-44ce-ba46-0db9a17f595a"]
}, Open  ]],

Cell[TextData[{
 "We can see from that equation that MS is increased by medical supplies \
production rate (mspr) with measuring dimension number of units per day. The \
production is restricted by the storage capacity, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MS", "]"}], TraditionalForm]],ExpressionUUID->
  "8f03c544-3016-400d-a8c8-c43e12626178"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7955641863838043`*^9, 3.795564276802003*^9}, {
  3.795564319350822*^9, 3.7955644869201517`*^9}, {3.795564919770821*^9, 
  3.795564975132174*^9}, {3.79560796962462*^9, 
  3.795607973695623*^9}},ExpressionUUID->"a8592ec6-a018-4426-b6cc-\
7ef9f6f74174"],

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{"mspr", "[", "HB", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"MS", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}]], "DisplayFormula",
 CellChangeTimes->{{3.7955649941452627`*^9, 
  3.7955650088618927`*^9}},ExpressionUUID->"26bbf1ec-ae82-45d3-a978-\
1824eab0379a"],

Cell["\<\
MS is decreased by the MS delivery term and the demand from the \
non-hospitalized populations. Because the hospital has precedence, we use \
this term form in the equation:\
\>", "Text",
 CellChangeTimes->{{3.7955641863838043`*^9, 3.795564276802003*^9}, {
  3.795564319350822*^9, 3.7955644869201517`*^9}, {3.795564919770821*^9, 
  3.795564960003827*^9}, {3.795608008797823*^9, 
  3.7956080284402723`*^9}},ExpressionUUID->"8d875460-d172-4d6f-8aef-\
1e57b70493cf"],

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "Dlvr"}], "+", 
    RowBox[{"MS", "[", "t", "]"}]}], ",", "\"\<non-hospital demand\>\""}], 
  "]"}]], "DisplayFormula",
 CellChangeTimes->{{3.795565040935051*^9, 
  3.795565047853057*^9}},ExpressionUUID->"79a87acd-9920-43ab-af24-\
cca7dd1e32be"],

Cell["Here is the full MS equation:", "Text",
 CellChangeTimes->{{3.7955654825939083`*^9, 
  3.795565496003687*^9}},ExpressionUUID->"7604a772-dcd0-47a2-8265-\
65887e7fe48d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MS", "[", "t", "]"}], "-", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"HB", "[", "t", "]"}], " ", 
           RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Kappa]", "[", "HMS", "]"}]}], ",", 
          RowBox[{"\[Kappa]", "[", "MSD", "]"}]}], "]"}], 
        RowBox[{"msdp", "[", "HB", "]"}]]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"INSP", "[", "t", "]"}], " ", 
        RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"HP", "[", "t", "]"}]}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
       RowBox[{
        RowBox[{"mscr", "[", "TP", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EP", "[", "t", "]"}], "+", 
          RowBox[{"RP", "[", "t", "]"}], "+", 
          RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], "+", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"mspr", "[", "HB", "]"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"MS", "[", "t", "]"}]}], "+", 
      RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}], "-", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"MS", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"HMS", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Kappa]", "[", "HMS", "]"}]}], ",", 
      RowBox[{"\[Kappa]", "[", "MSD", "]"}]}], "]"}], 
    RowBox[{"msdp", "[", "HB", "]"}]]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795565497215063*^9},
 CellLabel->"(MS)",ExpressionUUID->"342641be-e6b7-43bc-92fc-95f5ec9da13b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies Demand", "Subsection",
 CellChangeTimes->{{3.795257387870854*^9, 3.795257393372752*^9}, {
  3.795524614914877*^9, 
  3.7955246188294983`*^9}},ExpressionUUID->"a81033eb-857d-4e60-862a-\
2c80eba1a311"],

Cell["\<\
The stock Medical Supplies Demand (MSD) simply accumulates the MS demand \
derived from population stocks and their corresponding mscr:\
\>", "Text",
 CellChangeTimes->{{3.795564496955394*^9, 3.795564523549687*^9}, {
  3.795564571609775*^9, 
  3.795564611188342*^9}},ExpressionUUID->"f9e16a42-191b-4d0c-8456-\
7138c0669b5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MSD", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "INSP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"ISSP", "[", "t", "]"}],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "ISSP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "TP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ], " ", 
    RowBox[{"(", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"EP", "[", "t", "]"}],
          "\"Exposed Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Exposed Population", "Tooltip"]& ],
        "\"Exposed Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"RP", "[", "t", "]"}],
          "\"Recovered Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Recovered Population", "Tooltip"]& ],
        "\"Recovered Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"SP", "[", "t", "]"}],
          "\"Susceptible Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Susceptible Population", "Tooltip"]& ],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
     ")"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795532565451776*^9, 3.795540133715475*^9, 
  3.795542799039349*^9, 3.795547094607923*^9, 3.7955578813062363`*^9, 
  3.795558034132753*^9, 3.795558401553171*^9, 3.795558851362688*^9, 
  3.795562096085333*^9, 3.7955638439078503`*^9},
 CellLabel->"(MSD)",ExpressionUUID->"54a11313-106d-49bf-b982-18e44fdbaeb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money for Hospital Services", "Subsection",
 CellChangeTimes->{{3.792432981646702*^9, 3.7924330142384863`*^9}, 
   3.795015555761284*^9},ExpressionUUID->"c81794eb-0416-4d38-8e12-\
c07f285c9f9c"],

Cell["\<\
The stock Money for Hospital Services (MHS) simply tracks expenses for \
hospitalized people. The parameter hospital services cost rate (hscr) with \
unit money per bed per day simply multiplies HP.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 3.795018289098675*^9}, {3.795170109138433*^9, 
  3.795170113460578*^9}, {3.7951702129326973`*^9, 3.79517024661449*^9}, {
  3.795170367644785*^9, 
  3.795170412735022*^9}},ExpressionUUID->"d63353c4-31ce-4ce1-93b8-\
05f80203d429"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MHS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HP", "[", "t", "]"}],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ],
     "\"Hospitalized Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"hscr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Hospital services cost rate (per bed per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital services cost rate (per bed per day)", 
       "Tooltip"]& ],
     "\"Hospital services cost rate (per bed per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital services cost rate (per bed per day)", 
     "Tooltip"]& ]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795025197999638*^9, 3.7950258406102943`*^9},
 CellLabel->"(MHS)",ExpressionUUID->"6c65b0ee-787e-4436-b5b5-01e4e9947125"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money from Lost Productivity", "Subsection",
 CellChangeTimes->{{3.795015571168536*^9, 
  3.795015582744377*^9}},ExpressionUUID->"ca84c898-87f7-4cbf-8ae8-\
30cb9067d9a8"],

Cell["\<\
The stock Money from Lost Productivity (MLP) simply tracks the work \
non-availability of the infected and died from infection people. The \
parameter lost productivity cost rate (lpcr) with unit money per person per \
day multiplies the total count of the infected and dead from infection.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 3.795018306109063*^9}, {3.79517011894851*^9, 
  3.7951701991284447`*^9}, {3.795170420869096*^9, 
  3.795170518576726*^9}},ExpressionUUID->"4d474ab2-b991-495b-804e-\
5aa3bcb93fda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MLP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"lpcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Lost productivity cost rate (per person per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Lost productivity cost rate (per person per day)", 
       "Tooltip"]& ],
     "\"Lost productivity cost rate (per person per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Lost productivity cost rate (per person per day)", 
     "Tooltip"]& ], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], 
     "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"INSP", "[", "t", "]"}],
          "\"Infected Normally Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", 
        "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}], ")"}], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ]}]}], ")"}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520943030692*^9, 3.795522832292738*^9, 
  3.795525996473214*^9, 3.795526038880262*^9, 3.795532565494246*^9, 
  3.795540133754086*^9, 3.795542799084373*^9, 3.795547094646611*^9, 
  3.795557881343405*^9, 3.7955580341857347`*^9, 3.7955584015916443`*^9, 
  3.79555885140587*^9, 3.7955620961336107`*^9, 3.795563843946082*^9},
 CellLabel->"(MLP)",ExpressionUUID->"c18b9e51-1dd1-4d05-aedc-a76105ae001e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quarantine scenarios", "Section",
 CellChangeTimes->{{3.79510289504558*^9, 
  3.7951029011540537`*^9}},ExpressionUUID->"87bbf2ac-d680-4eee-8976-\
de7969f75b71"],

Cell[TextData[{
 "In order to model quarantine scenarios we use piecewise constant functions \
for the contact rates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "ISSP", "]"}], TraditionalForm]],ExpressionUUID->
  "7549c6b4-a404-4e46-905f-fc99158abbe6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "INSP", "]"}], TraditionalForm]],ExpressionUUID->
  "2330faa6-b105-497b-89a9-220351ec54fe"],
 ". "
}], "Text",
 CellChangeTimes->{{3.795102903516485*^9, 3.795102972717986*^9}, {
  3.795103288522572*^9, 3.7951033014265537`*^9}, {3.795170539873241*^9, 
  3.795170541473916*^9}},ExpressionUUID->"24aee402-f317-4209-98e8-\
7f15f4c117ec"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Other functions can be used, like, functions derived through some \
statistical fitting. "
}], "Text",
 CellChangeTimes->{{3.7951705498191*^9, 
  3.795170631483403*^9}},ExpressionUUID->"36190036-e9e8-4509-89b1-\
91b423375f9a"],

Cell["Here is an example plot :", "Text",
 CellChangeTimes->{{3.795102984778503*^9, 3.7951029949711647`*^9}, {
  3.7951037701657047`*^9, 
  3.795103781753631*^9}},ExpressionUUID->"f295e90e-5910-4cf2-b8b7-\
08c16b56fda3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"func", "=", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"qcrf", ",", 
            RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
             RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Legended", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Beta]", "=", "0.56"}], ",", 
         RowBox[{"qsd", "=", "60"}], ",", 
         RowBox[{"ql", "=", 
          RowBox[{"8", "*", "7"}]}], ",", 
         RowBox[{"qcrf", "=", "0.25"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"func", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "365"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "func"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795103006720628*^9, 3.795103120962385*^9}, {
  3.795103209189027*^9, 3.795103212385117*^9}, {3.7951037282157497`*^9, 
  3.795103756048126*^9}, {3.795103798857175*^9, 3.795103865045116*^9}, {
  3.795112878698709*^9, 3.795112922961647*^9}, {3.795112958076275*^9, 
  3.795112966874749*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"e2b76880-fef9-4340-af13-2338f033b595"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd0znOHFUUBeALkUMHBAQIFQghhBBq5pn/gZnHtpnnh8EMBtvNGN+EvJfw
ltAh4WUHvYRHDEEvASF+C/VXSemro6OjG9RtF69duHRjRFy9IeLf93/P4eTv
87/f+ttff56cfmjHPoPP4pvwzfgWvODb8R34TnwXvhvfg+/FK3wfvh8/gB/E
D+GH8SP4UfwYfhw/gZ/ET+Gn8Qlux04cz5DjeJYcxzlyHM+R43ieHMcL5Dhe
JMfxEjmOl8lxvEKO41VyHK+R43idHMcb5Nf9x2n+5rETx/rYDScuHOfp48SF
4wJ9nLhwvEUfJy4cb9PHiQvHO/Rx4sLxLn2cuHC8Rx8nLhzv08eJC8cH9HHi
wvEhfZy4cHxEHycuHB/Tx4kLxyf0cV736f9ZOD49dsOJC8dn9HHiwtGPveCG
O048cOGJ43P2ccMdJx648MRxkX3ccMeJBy48cXzBPm6448QDF544vmQfN9xx
4oELTxyX2McNd5x44MITx1fs44Y7Tjxw4Ynja/Zxwx0nHrjwxPEN+7jhjhMP
XHji+JZ93HDHiQcuPHFcZh833HHigQtPHN+xjxvuOPHAhSeO79nHDXeceODC
E8cV9nHDHSceuPDEcZV93HDHiQcuPHFcYx833HHigQtPHJtjn8ULXuGG17jj
DU68xQPvcOE9nviA4wfuxwte4YbXuOMNTrzFA+9w4T2e+IDjR+7HC17hhte4
4w1OvMUD73DhPZ74gOMn7scLXuGG17jjDU68xQPvcOE9nviA42fuxwte4YbX
uOMNTrzFA+9w4T2e+IDjF+7HC17hhte44w1OvMUD73DhPZ74gONX7scLXuGG
17jjDU68xQPvcOE9nv/7H0X8Dfg=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 366.}, {0, 0.56}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     RowBox[{"\[Beta]", " ", 
       RowBox[{"(", 
         TagBox[
          GridBox[{{"\[Piecewise]", 
             GridBox[{{"1", 
                RowBox[{"t", "<", "qsd"}]}, {"qcrf", 
                RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]}, {"1", 
                TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
              ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
              Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> 
              True, Editable -> True]}}, ColumnAlignments -> {Left}, 
           ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
          SyntaxForm -> Equal, SelectWithContents -> True, StripWrapperBoxes -> 
          True, Selectable -> False, Editable -> False, DeleteWithContents -> 
          True], ")"}]}], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.795608087314226*^9, 3.79560951053977*^9, 
  3.795615848735322*^9, 3.795618932511413*^9, 3.795618967480504*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"5d34e421-75f0-4d00-951c-dfc2f8a5da55"]
}, Open  ]],

Cell["\<\
To model quarantine with a piecewise constant function we use the following  \
parameters:\
\>", "Text",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103170855811*^9}, {
  3.795103251791792*^9, 3.795103285405793*^9}, {3.7951706507446632`*^9, 
  3.795170650893552*^9}},ExpressionUUID->"7808723b-83f7-4987-b493-\
244eb2942903"],

Cell[CellGroupData[{

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox["qsd", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "76f7f04b-313e-4e34-b6d3-9c8c29a90d18"],
 " for quarantine's start"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 
  3.7951031809517927`*^9}},ExpressionUUID->"f24f735b-b127-4a7e-b034-\
6e0a6656eb21"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["ql", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "928d086e-ae91-4449-bde3-eac5b31845aa"],
 " for quarantines duration"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 
  3.79510319899936*^9}},ExpressionUUID->"4d0f7f6d-c24f-4145-851f-\
9052018adbae"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["qcrf", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bdcc70ec-04ac-4729-9eb9-bac8ff22d6a4"],
 " for the effect on the quarantine on the contact rate"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 
  3.795103239472946*^9}},ExpressionUUID->"34597ec5-8ad2-4e84-bf01-\
f9e19c2ab16c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical supplies scenarios", "Section",
 CellChangeTimes->{{3.7952579890258503`*^9, 3.7952580150358047`*^9}, {
  3.795268209657048*^9, 
  3.795268211828533*^9}},ExpressionUUID->"6761b43f-3cca-4ba8-8794-\
2168c75c00f9"],

Cell["We consider three main scenarios for the medical supplies:", "Text",
 CellChangeTimes->{{3.79526677421301*^9, 
  3.795266798266367*^9}},ExpressionUUID->"5e33d5a4-eeae-4b1c-b6c2-\
7f6408e700cd"],

Cell[CellGroupData[{

Cell["\<\
Constant production rate and consistent delivery (constant delivery period)\
\>", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 3.7952668326281357`*^9}, {
  3.7952668726168327`*^9, 
  3.795266881482478*^9}},ExpressionUUID->"c4247863-54ed-4615-9691-\
3121a51000fe"],

Cell["Constant production rate and disrupted delivery", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 
  3.7952668848287153`*^9}},ExpressionUUID->"a3fd1577-d57e-4cdd-8a54-\
3e4f5fd02f44"],

Cell["Disrupted production and disrupted delivery", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 
  3.7952669032184896`*^9}},ExpressionUUID->"a59aaf89-963a-435a-9f76-\
030d126939bb"]
}, Open  ]],

Cell["\<\
The disruptions are simulated with simple pulse functions -- we want to see \
how the system being modeled reacts to singular, elementary disruption.\
\>", "Text",
 CellChangeTimes->{{3.795266911802944*^9, 
  3.795266972700158*^9}},ExpressionUUID->"bd50c635-bdf0-4b64-9dd3-\
4b3c6e1025e9"],

Cell["\<\
Here is an example plot of a disruption of delivery period plot :\
\>", "Text",
 CellChangeTimes->{{3.795102984778503*^9, 3.7951029949711647`*^9}, {
  3.7951037701657047`*^9, 3.795103781753631*^9}, {3.795267830953454*^9, 
  3.795267836061697*^9}, {3.7952679463916073`*^9, 3.795267954356269*^9}, {
  3.7952681660748167`*^9, 
  3.795268200015606*^9}},ExpressionUUID->"b24ac394-bd81-488f-9e1e-\
dcb51d634218"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"func", "=", 
     RowBox[{"dbp", "*", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"t", "<", "dds"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"dsf", ",", 
            RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
             RowBox[{"dds", "+", "ddl"}]}]}], "}"}]}], "}"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Legended", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dbp", "=", "1"}], ",", 
         RowBox[{"dds", "=", "70"}], ",", 
         RowBox[{"ddl", "=", "7"}], ",", 
         RowBox[{"dsf", "=", "1.8"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"func", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "365"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "func"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795103006720628*^9, 3.795103120962385*^9}, {
  3.795103209189027*^9, 3.795103212385117*^9}, {3.7951037282157497`*^9, 
  3.795103756048126*^9}, {3.795103798857175*^9, 3.795103865045116*^9}, {
  3.795112878698709*^9, 3.795112922961647*^9}, {3.795112958076275*^9, 
  3.795112966874749*^9}, {3.7952678480231533`*^9, 3.795267986567069*^9}, {
  3.7952681008469267`*^9, 3.795268112828506*^9}, {3.795595832408463*^9, 
  3.795595843713099*^9}, {3.795596026013885*^9, 3.795596044843845*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"e6006424-d5d6-4066-bf56-b27a37511513"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdzkcOnEUQBeCCFctZsGDBYkAIIYTQkDNuMDmObXIwjQPBOAxxXUeYI/QR
5gh1AJDmCH2EOQALZIGE/q83pU9PT6/vu3Tr/NU7I+LmHRG377/vdGZ5oy19
F17hu/E9+F68xvfjB/CD+CH8MH4EP4o3+DH8OH4CP4mfwk/jZ/Cz+Dn8PH4B
v4hfwi/jM7gtnTheIcfxKjmOs+Q4XiPH8To5jjfIcbxJjuMtchxvk+N4hxzH
u+Q43iPH8T45jg/IcXxIjmO7dMOJC8c5+jhxnWt//Xn7/f1f//zSDScuHBfo
48R1gf9/xP9x4sLxMX2cuHB8Qh8nLhyf0seJC8dn9HHiwvE5fZy4cHxBHycu
HF/Sx4kLx1f0ceLC8TV9nLhwXKSPExeOb+jjxIWjL73GDXeceODCE8e37OOG
O048cOGJ4xL7uOGOEw9ceOK4zD5uuOPEAxeeOK6wjxvuOPHAhSeOq+zjhjtO
PHDhieM79nHDHSceuPDE8T37uOGOEw9ceOL4gX3ccMeJBy48cfzIPm6448QD
F544rrGPG+448cCFJ46f2McNd5x44MITx3X2ccMdJx648MRxg33ccMeJBy48
cdxkHzfcceKBC08ct9jHDXeceODCE8du6RVe4w1ueIs73uHEezzwARc+4olP
OH5eeoXXeIMb3uKOdzjxHg98wIWPeOITjl+WXuE13uCGt7jjHU68xwMfcOEj
nviE49elV3iNN7jhLe54hxPv8cAHXPiIJz7h+G3pFV7jDW54izve4cR7PPAB
Fz7iiU84fl96hdd4gxve4o53OPEeD3zAhY944hOOP5Ze4TXe4Ia3uOMdTrzH
Ax9w4SOe//sffFZLnQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.9555555555555558}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 366.}, {0.9555555555555558, 1.8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     RowBox[{"dbp", " ", 
       RowBox[{"(", 
         TagBox[
          GridBox[{{"\[Piecewise]", 
             GridBox[{{"1", 
                RowBox[{"t", "<", "dds"}]}, {"dsf", 
                RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ddl", "+", "dds"}]}]}, {"1", 
                TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
              ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
              Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> 
              True, Editable -> True]}}, ColumnAlignments -> {Left}, 
           ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
          SyntaxForm -> Equal, SelectWithContents -> True, StripWrapperBoxes -> 
          True, Selectable -> False, Editable -> False, DeleteWithContents -> 
          True], ")"}]}], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.795608087368788*^9, 3.795609510596787*^9, 
  3.79561584879382*^9, 3.7956189325891323`*^9, 3.795618967538164*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"14f5b4fa-4023-4324-bc45-557a028f378c"]
}, Open  ]],

Cell["\<\
To model disruption of delivery with a piecewise constant function we use the \
following  parameters:\
\>", "Text",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103170855811*^9}, {
  3.795103251791792*^9, 3.795103285405793*^9}, {3.7951706507446632`*^9, 
  3.795170650893552*^9}, {3.795267997433805*^9, 
  3.795268005692079*^9}},ExpressionUUID->"d0589c19-2030-47cf-a869-\
6f087ad5731f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["dbp", TraditionalForm]],ExpressionUUID->
  "cd0d4653-182f-4303-8243-66d9affb72cd"],
 " for the delivery base period "
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.7951031809517927`*^9}, {
  3.795268010687355*^9, 3.79526802298402*^9}, {3.795268087460291*^9, 
  3.7952681309068327`*^9}, {3.795595981470626*^9, 
  3.795595988872958*^9}},ExpressionUUID->"a46f3554-65d6-4ef0-bd10-\
f1dea3ce4581"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["dds", TraditionalForm]],ExpressionUUID->
  "89e7c696-21d6-43ab-84c9-79e68a95259f"],
 " for delivery disruption start"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.7951031809517927`*^9}, {
  3.795268010687355*^9, 3.79526802298402*^9}, {3.795595991731496*^9, 
  3.795595996310316*^9}},ExpressionUUID->"ad0c69ec-f4a6-4181-b7df-\
354ceb216425"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["ddl", TraditionalForm]],ExpressionUUID->
  "b75f5c07-5641-43af-bab0-0c66747a3563"],
 " for delivery disruption duration"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.79510319899936*^9}, {
  3.795268025132593*^9, 3.79526803139916*^9}, {3.7955959984142227`*^9, 
  3.7955960023290377`*^9}},ExpressionUUID->"76efa49f-f241-4e68-ae22-\
340a97295883"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["dsf", TraditionalForm]],ExpressionUUID->
  "d4afc605-bf6e-46d7-a8c9-397aedf0af79"],
 " for how much slower or faster the delivery period becomes"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103239472946*^9}, {
  3.795268036652493*^9, 3.795268085727466*^9}, {3.795268134690611*^9, 
  3.795268151337214*^9}, {3.795596016167753*^9, 
  3.7955960177197113`*^9}},ExpressionUUID->"f357e507-c193-4129-bf93-\
c5b36ebf4684"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters and actual simulation equations code", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 3.792782468411478*^9}, {
  3.792783085731715*^9, 
  3.792783104744426*^9}},ExpressionUUID->"e33c79a2-f2db-4d25-bcfb-\
49c86f8b410f"],

Cell["\<\
Here are the parameters we want to experiment with (or do calibration with):\
\>", "Text",
 CellChangeTimes->{{3.792782885557115*^9, 
  3.792782913850957*^9}},ExpressionUUID->"ff598692-1739-4159-9b03-\
dd1584e82fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsFocusParams", "=", 
   RowBox[{"{", 
    RowBox[{"aincp", ",", "aip", ",", 
     RowBox[{"sspf", "[", "SP", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "HP", "]"}], ",", "qsd", ",", "ql", ",", "qcrf", 
     ",", 
     RowBox[{"nhbcr", "[", 
      RowBox[{"ISSP", ",", "INSP"}], "]"}], ",", 
     RowBox[{"nhbr", "[", "TP", "]"}], ",", 
     RowBox[{"mspr", "[", "HB", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7863148338718843`*^9, 3.7863148644238167`*^9}, {
   3.786314969410964*^9, 3.786314969770688*^9}, {3.786315318877136*^9, 
   3.786315423456758*^9}, {3.786315466907583*^9, 3.786315467039927*^9}, {
   3.786315534473729*^9, 3.786315535036262*^9}, 3.7863155993404713`*^9, 
   3.7863174496926823`*^9, {3.786317496751482*^9, 3.786317565432353*^9}, {
   3.7863177467407846`*^9, 3.786317747077957*^9}, 3.7863179750983877`*^9, {
   3.786318053354103*^9, 3.78631805379137*^9}, {3.7863180874206123`*^9, 
   3.7863180878904448`*^9}, {3.786318193576859*^9, 3.78631819420512*^9}, {
   3.786318225683996*^9, 3.7863182264702682`*^9}, {3.786318451093602*^9, 
   3.786318464796071*^9}, 3.7863185848337793`*^9, {3.786318762276565*^9, 
   3.786318787991737*^9}, {3.786318877363761*^9, 3.7863189048831797`*^9}, {
   3.7863191345789337`*^9, 3.786319179396864*^9}, {3.7863192276959763`*^9, 
   3.786319243996009*^9}, 3.786319882705675*^9, {3.7863204115173597`*^9, 
   3.786320430150361*^9}, {3.786320824602812*^9, 3.786320832250454*^9}, 
   3.786320911094233*^9, {3.786321002131366*^9, 3.786321057592033*^9}, {
   3.786322419080089*^9, 3.786322428376965*^9}, {3.786548989402964*^9, 
   3.786548990706039*^9}, {3.786549162937529*^9, 3.786549163565218*^9}, {
   3.786549287240192*^9, 3.7865492939884253`*^9}, {3.7867549383743258`*^9, 
   3.7867549702797527`*^9}, {3.78681085193745*^9, 3.7868108618553247`*^9}, {
   3.7870672422451077`*^9, 3.787067246810301*^9}, {3.787067293377285*^9, 
   3.787067293937261*^9}, 3.787067362210042*^9, {3.78706807533466*^9, 
   3.7870680757391663`*^9}, {3.7870681214696903`*^9, 3.787068127587439*^9}, {
   3.787501433289083*^9, 3.787501434283085*^9}, {3.7879332682485933`*^9, 
   3.787933290318729*^9}, {3.788011564525116*^9, 3.788011598218856*^9}, {
   3.792338815009306*^9, 3.7923388191018*^9}, {3.792341071071682*^9, 
   3.7923410713251257`*^9}, {3.7923466525491962`*^9, 3.7923466693789043`*^9}, 
   3.792432616989259*^9, 3.7924326928489313`*^9, {3.792443472165268*^9, 
   3.7924434725022078`*^9}, {3.792451530856949*^9, 3.792451539720593*^9}, 
   3.792518559606106*^9, {3.79326158407848*^9, 3.793261592514369*^9}, {
   3.793262125671596*^9, 3.7932621261005783`*^9}, {3.793263354678767*^9, 
   3.7932633548438873`*^9}, {3.7932891569010553`*^9, 3.793289160206669*^9}, {
   3.793290541062859*^9, 3.7932905494816647`*^9}, {3.793466376655335*^9, 
   3.793466377170805*^9}, {3.793466523131755*^9, 3.793466526597267*^9}, 
   3.793765266084045*^9, 3.795259636949252*^9, {3.795259812233391*^9, 
   3.795259812664221*^9}, {3.795260030498876*^9, 3.7952600326914263`*^9}, {
   3.795261852962491*^9, 3.795261853613853*^9}, {3.795596392430717*^9, 
   3.7955963931407824`*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"91e07f33-1868-4ff0-8ee5-39bea2045341"],

Cell["Here we set custom rates and initial conditions:", "Text",
 CellChangeTimes->{{3.7928417223874493`*^9, 
  3.792841744259144*^9}},ExpressionUUID->"1a85b9bb-c48c-4e2e-8aa5-\
003efe6c0ffb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"10", "^", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelSEI2HREcon", "=", "\[IndentingNewLine]", 
   RowBox[{"SetRateRules", "[", "\[IndentingNewLine]", 
    RowBox[{"modelSEI2HREcon", ",", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TP", "[", "0", "]"}], "\[Rule]", "population"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"qsd", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ql", "\[Rule]", 
        RowBox[{"8", "*", "7"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
        RowBox[{"3", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", 
        RowBox[{"dbp", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "dds"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dsf", ",", 
               RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"dds", "+", "ddl"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"dbp", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dds", "\[Rule]", "70"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ddl", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dsf", "\[Rule]", "2"}]}], "\[IndentingNewLine]", "|>"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.792840997471833*^9, 3.7928410014208717`*^9}, {
   3.7928412515120993`*^9, 3.792841338172965*^9}, {3.792841623513248*^9, 
   3.792841624005987*^9}, 3.792841673104003*^9, {3.792842466685299*^9, 
   3.792842493309701*^9}, {3.792842554897097*^9, 3.7928425660755167`*^9}, {
   3.792842634422552*^9, 3.792842653500198*^9}, {3.7932318140523043`*^9, 
   3.7932318159184217`*^9}, {3.793232568306192*^9, 3.793232612889409*^9}, {
   3.7932328265342627`*^9, 3.793232827780119*^9}, {3.7932333137456837`*^9, 
   3.793233319389818*^9}, {3.7932334725987377`*^9, 3.793233481954981*^9}, {
   3.793233567549234*^9, 3.7932335753344173`*^9}, {3.793234109076193*^9, 
   3.79323411002955*^9}, {3.793234625649644*^9, 3.793234666632866*^9}, {
   3.793234753643496*^9, 3.793234787953348*^9}, {3.793237818566841*^9, 
   3.79323784712894*^9}, {3.7932382885097313`*^9, 3.7932382888255787`*^9}, {
   3.793238935032902*^9, 3.793238966746608*^9}, {3.793313925754953*^9, 
   3.793313925762312*^9}, {3.7933140660863247`*^9, 3.793314088892256*^9}, {
   3.7933143247089853`*^9, 3.793314337125317*^9}, {3.79331441978144*^9, 
   3.793314421209125*^9}, {3.7933144629826*^9, 3.7933144874941998`*^9}, {
   3.793444939104265*^9, 3.793444939112287*^9}, {3.7934650562504883`*^9, 
   3.793465094490333*^9}, {3.793465163597599*^9, 3.793465168447773*^9}, {
   3.793466043268198*^9, 3.793466091493733*^9}, {3.793466358624346*^9, 
   3.793466370794099*^9}, {3.793466506015046*^9, 3.793466507433257*^9}, {
   3.793901212182459*^9, 3.7939012155622807`*^9}, {3.793901370610619*^9, 
   3.7939014032602882`*^9}, {3.7939014833062267`*^9, 
   3.7939014897208033`*^9}, {3.795065336766263*^9, 3.795065340973969*^9}, {
   3.7950653960460978`*^9, 3.7950653975625067`*^9}, {3.795090919469816*^9, 
   3.795090920255754*^9}, {3.7952596155693293`*^9, 3.795259629996791*^9}, {
   3.795262807427458*^9, 3.79526281386172*^9}, {3.795595905771832*^9, 
   3.795595969052392*^9}, 3.795596054159274*^9, {3.7955962148034077`*^9, 
   3.795596269893502*^9}, {3.795596311922524*^9, 3.795596345133943*^9}, {
   3.7955966572421227`*^9, 3.7955966630135717`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"96479ecb-2c7c-4145-8e51-9274bc357b2f"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note the piecewise functions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "ISSP", "]"}], TraditionalForm]],ExpressionUUID->
  "685a6e2a-7aa0-4735-8206-f30b8dd764da"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "INSP", "]"}], TraditionalForm]],ExpressionUUID->
  "d485790e-8a72-4631-9dc9-787b9d417690"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"msdp", "[", "HB", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b75ed7cc-4d44-4781-a083-843532528bdc"],
 "."
}], "Text",
 CellChangeTimes->{{3.795102808824319*^9, 3.795102886844214*^9}, {
  3.795102954671949*^9, 3.795102956617049*^9}, {3.795600704551323*^9, 
  3.7956007252068253`*^9}},ExpressionUUID->"7109d30d-1787-4fee-8662-\
350b8b758da9"],

Cell[TextData[{
 "Here is the system of ODE\[CloseCurlyQuote]s we use to do ",
 StyleBox["parametrized",
  FontSlant->"Italic"],
 " simulations:"
}], "Text",
 CellChangeTimes->{{3.792782947793372*^9, 3.792782973825616*^9}, {
  3.7927830226521187`*^9, 3.792783032912167*^9}, {3.7927831258393993`*^9, 
  3.792783136661377*^9}, {3.793898052777491*^9, 
  3.7938980532013817`*^9}},ExpressionUUID->"a4e3183f-cbbf-442f-b6b2-\
f578478a6448"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsActualEquations", "=", 
   RowBox[{"ModelNDSolveEquations", "[", 
    RowBox[{"modelSEI2HREcon", ",", 
     RowBox[{"KeyDrop", "[", 
      RowBox[{
       RowBox[{"modelSEI2HREcon", "[", "\"\<RateRules\>\"", "]"}], ",", 
       "lsFocusParams"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", "/@", "lsActualEquations"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792781370593688*^9, 3.792781390023394*^9}, {
  3.7927829817931423`*^9, 3.7927830097817163`*^9}, {3.7932318172925797`*^9, 
  3.793231820148613*^9}, {3.793313925767356*^9, 3.793313925768722*^9}, {
  3.7933149092314243`*^9, 3.793314933272561*^9}, {3.793444939116008*^9, 
  3.7934449391183367`*^9}, {3.795259831594865*^9, 3.795259837617635*^9}, {
  3.795260159566546*^9, 3.79526016097078*^9}, {3.795260343119873*^9, 
  3.7952603498009453`*^9}, {3.7952618164449797`*^9, 3.795261857249148*^9}, {
  3.7952619680296793`*^9, 3.795261968323023*^9}, {3.795262083051684*^9, 
  3.795262086593916*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"e969e9ae-c3e4-403c-9903-e7869b560460"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{"TP", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Max", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}]}], "]"}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"SP", "[", "t", "]"}], "45625"]}], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "45625"], "+", 
           FractionBox["1", "aincp"]}], ")"}]}], " ", 
        RowBox[{"EP", "[", "t", "]"}]}], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["INSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.01`", " ", 
          RowBox[{"INSP", "[", "t", "]"}]}], "aip"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"sspf", "[", "SP", "]"}]}], ")"}]}], "aincp"]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ISSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"0.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "-", 
       FractionBox[
        RowBox[{"ISSP", "[", "t", "]"}], "aip"], "-", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "+", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"Min", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"HMS", "[", "t", "]"}], "3"], ",", 
                 RowBox[{
                  RowBox[{"HB", "[", "t", "]"}], "-", 
                  RowBox[{"HP", "[", "t", "]"}]}], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"EP", "[", "t", "]"}], " ", 
                   RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}], "]"}], 
               RowBox[{
                RowBox[{"HP", "[", "t", "]"}], "<", 
                RowBox[{"HB", "[", "t", "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True], ")"}]}]}]},
    {"7", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}]}], "aip"], "-", 
       FractionBox[
        RowBox[{"RP", "[", "t", "]"}], "45625"]}]}]},
    {"8", 
     RowBox[{
      RowBox[{
       SuperscriptBox["DIP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"9", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HB", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}]}]}]},
    {"10", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HMS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"HMS", "[", "t", "]"}], ",", 
          RowBox[{"3", " ", 
           RowBox[{"HP", "[", "t", "]"}]}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{"100000", " ", 
           RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"6000000", " ", 
            RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"11", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"40000.`", "\[VeryThinSpace]", "-", 
          RowBox[{"MS", "[", "t", "]"}]}], ",", 
         RowBox[{"mspr", "[", "HB", "]"}]}], "]"}], "-", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MS", "[", "t", "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"HB", "[", "t", "]"}]}], ",", 
             RowBox[{"MS", "[", "t", "]"}], ",", 
             RowBox[{"100000", " ", 
              RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"HMS", "[", "t", "]"}]}], "+", 
              RowBox[{"6000000", " ", 
               RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"1", 
                  RowBox[{"t", "<", "70"}]},
                 {"2", 
                  RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
                 {"1", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True]]}], ",", 
         RowBox[{
          RowBox[{"0.7`", " ", 
           RowBox[{"INSP", "[", "t", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"HP", "[", "t", "]"}]}], "+", 
             RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"0.02`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"EP", "[", "t", "]"}], "+", 
             RowBox[{"RP", "[", "t", "]"}], "+", 
             RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}], "-", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{"100000", " ", 
           RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"6000000", " ", 
            RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"12", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MSD", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.7`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"ISSP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.02`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EP", "[", "t", "]"}], "+", 
          RowBox[{"RP", "[", "t", "]"}], "+", 
          RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"13", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MHS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"HP", "[", "t", "]"}]}]},
    {"14", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MMSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"MSD", "[", "t", "]"}]}]},
    {"15", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MLP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"INSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"ISSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"16", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
    {"17", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"18", 
     RowBox[{
      RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"19", 
     RowBox[{
      RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"20", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"21", 
     RowBox[{
      RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"22", 
     RowBox[{
      RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
    {"23", 
     RowBox[{
      RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"24", 
     RowBox[{
      RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"25", 
     RowBox[{
      RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"1000000", " ", 
       RowBox[{"nhbr", "[", "TP", "]"}]}]}]},
    {"26", 
     RowBox[{
      RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"27", 
     RowBox[{
      RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"28", 
     RowBox[{
      RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"29", 
     RowBox[{
      RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"6000000", " ", 
       RowBox[{"nhbr", "[", "TP", "]"}]}]}]},
    {"30", 
     RowBox[{
      RowBox[{"MS", "[", "0", "]"}], "\[Equal]", "40000.`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.795608087421363*^9, 3.795609510665449*^9, 
  3.795615848863224*^9, 3.795618932661545*^9, 3.795618967588766*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"8375cea5-6219-4838-8d1a-abff2c6ca38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsActualEquations", "=", 
   RowBox[{"ModelNDSolveEquations", "[", 
    RowBox[{"modelSEI2HREcon", ",", 
     RowBox[{"modelSEI2HREcon", "[", "\"\<RateRules\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", "/@", "lsActualEquations"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792781370593688*^9, 3.792781390023394*^9}, {
  3.7927829817931423`*^9, 3.7927830097817163`*^9}, {3.7932318172925797`*^9, 
  3.793231820148613*^9}, {3.793313925767356*^9, 3.793313925768722*^9}, {
  3.7933149092314243`*^9, 3.793314933272561*^9}, {3.793444939116008*^9, 
  3.7934449391183367`*^9}, {3.795259831594865*^9, 3.795259837617635*^9}, {
  3.795260159566546*^9, 3.79526016097078*^9}, {3.795260343119873*^9, 
  3.7952603498009453`*^9}, {3.7952618164449797`*^9, 3.795261857249148*^9}, {
  3.7952619680296793`*^9, 3.795261968323023*^9}, {3.795262083051684*^9, 
  3.795262086593916*^9}, {3.7956191140146427`*^9, 3.795619124204047*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"eb232346-b22a-4b91-811d-56b1e553f21f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{"TP", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Max", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}]}], "]"}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"SP", "[", "t", "]"}], "45625"]}], "-", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "60"}]},
                {"0.25`", 
                 RowBox[{"60", "\[LessEqual]", "t", "\[LessEqual]", "116"}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "60"}]},
                {"0.25`", 
                 RowBox[{"60", "\[LessEqual]", "t", "\[LessEqual]", "116"}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"45631", " ", 
          RowBox[{"EP", "[", "t", "]"}]}], "273750"]}], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "60"}]},
                {"0.25`", 
                 RowBox[{"60", "\[LessEqual]", "t", "\[LessEqual]", "116"}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "60"}]},
                {"0.25`", 
                 RowBox[{"60", "\[LessEqual]", "t", "\[LessEqual]", "116"}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["INSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.13333333333333333`", " ", 
        RowBox[{"EP", "[", "t", "]"}]}], "-", 
       RowBox[{"0.03884615384615385`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ISSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.03333333333333333`", " ", 
        RowBox[{"EP", "[", "t", "]"}]}], "-", 
       RowBox[{"0.0003365384615384616`", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "-", 
       FractionBox[
        RowBox[{"ISSP", "[", "t", "]"}], "26"], "-", 
       RowBox[{"0.0013461538461538463`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"HP", "[", "t", "]"}]}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"6", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.03879807692307693`"}], " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"0.03333333333333333`", " ", 
                  RowBox[{"EP", "[", "t", "]"}]}], ",", 
                 FractionBox[
                  RowBox[{"HMS", "[", "t", "]"}], "3"], ",", 
                 RowBox[{
                  RowBox[{"HB", "[", "t", "]"}], "-", 
                  RowBox[{"HP", "[", "t", "]"}]}]}], "]"}], 
               RowBox[{
                RowBox[{"HP", "[", "t", "]"}], "<", 
                RowBox[{"HB", "[", "t", "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True], ")"}]}]}]},
    {"7", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "26"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"INSP", "[", "t", "]"}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"RP", "[", "t", "]"}], "45625"]}]}]},
    {"8", 
     RowBox[{
      RowBox[{
       SuperscriptBox["DIP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.0003365384615384616`", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.00038461538461538467`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.0013461538461538463`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"HP", "[", "t", "]"}]}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"9", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HB", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", "0"}]},
    {"10", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HMS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"HMS", "[", "t", "]"}], ",", 
          RowBox[{"3", " ", 
           RowBox[{"HP", "[", "t", "]"}]}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{"300", ",", 
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"18000", "-", 
           RowBox[{"HMS", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"11", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"300000", ",", 
         RowBox[{"40000.`", "\[VeryThinSpace]", "-", 
          RowBox[{"MS", "[", "t", "]"}]}]}], "]"}], "-", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MS", "[", "t", "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{"300", ",", 
             RowBox[{"4", " ", 
              RowBox[{"HB", "[", "t", "]"}]}], ",", 
             RowBox[{"18000", "-", 
              RowBox[{"HMS", "[", "t", "]"}]}], ",", 
             RowBox[{"MS", "[", "t", "]"}]}], "]"}], 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"1", 
                  RowBox[{"t", "<", "70"}]},
                 {"2", 
                  RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
                 {"1", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True]]}], ",", 
         RowBox[{
          RowBox[{"0.7`", " ", 
           RowBox[{"INSP", "[", "t", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"HP", "[", "t", "]"}]}], "+", 
             RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"0.02`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"EP", "[", "t", "]"}], "+", 
             RowBox[{"RP", "[", "t", "]"}], "+", 
             RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}], "-", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{"300", ",", 
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"18000", "-", 
           RowBox[{"HMS", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"12", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MSD", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.7`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"ISSP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.02`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EP", "[", "t", "]"}], "+", 
          RowBox[{"RP", "[", "t", "]"}], "+", 
          RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"13", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MHS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"HP", "[", "t", "]"}]}]},
    {"14", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MMSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"MSD", "[", "t", "]"}]}]},
    {"15", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MLP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.0003365384615384616`", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"1.0003846153846154`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}], "+", 
       RowBox[{"ISSP", "[", "t", "]"}], "+", 
       RowBox[{"0.0013461538461538463`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"HP", "[", "t", "]"}]}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"16", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
    {"17", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"18", 
     RowBox[{
      RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"19", 
     RowBox[{
      RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"20", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"21", 
     RowBox[{
      RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"22", 
     RowBox[{
      RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
    {"23", 
     RowBox[{
      RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"24", 
     RowBox[{
      RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"25", 
     RowBox[{
      RowBox[{"HB", "[", "0", "]"}], "\[Equal]", "3000"}]},
    {"26", 
     RowBox[{
      RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"27", 
     RowBox[{
      RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"28", 
     RowBox[{
      RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"29", 
     RowBox[{
      RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", "18000"}]},
    {"30", 
     RowBox[{
      RowBox[{"MS", "[", "0", "]"}], "\[Equal]", "40000.`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.795619117401327*^9, 3.795619124590188*^9}},
 CellLabel->
  "Out[380]=",ExpressionUUID->"fb3b0d3b-e5fc-4fa7-aa57-0249afe91cf2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 
  3.792782468411478*^9}},ExpressionUUID->"873bae9d-8e66-43f7-9592-\
8b71fd157a47"],

Cell[TextData[{
 "Instead of using ",
 StyleBox["ParametricNDSolve", "Program"],
 " as in [AA4] in this notebook we use ",
 StyleBox["ModelNDSolve", "Program"],
 " and ",
 StyleBox["SetRateRules", "Program"],
 " from the package [AAp4]."
}], "Text",
 CellChangeTimes->{{3.795595285219509*^9, 3.795595368403311*^9}, {
  3.79559563277175*^9, 
  3.795595652944387*^9}},ExpressionUUID->"5ebceb93-5ec5-418b-8b7b-\
9a21acd71a82"],

Cell[CellGroupData[{

Cell["Different quarantine starts", "Subsection",
 CellChangeTimes->{{3.795596448353148*^9, 
  3.795596457555822*^9}},ExpressionUUID->"4e8818d9-ef8e-49a3-a4a9-\
44d275892e9b"],

Cell["\<\
Here we compute simulation solutions for a set of quarantine starts:\
\>", "Text",
 CellChangeTimes->{{3.79559565982668*^9, 
  3.795595681518528*^9}},ExpressionUUID->"230a2215-aadc-4adf-805b-\
f7afd6d0f2ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "qsdVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"qsdVar", "->", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"ModelNDSolve", "[", 
             RowBox[{
              RowBox[{"SetRateRules", "[", 
               RowBox[{"modelSEI2HREcon", ",", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"ql", "\[Rule]", "56"}], ",", 
                  RowBox[{"qsd", "\[Rule]", "qsdVar"}]}], "|>"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{"40", ",", "120", ",", "20"}], "]"}]}], "\[IndentingNewLine]",
       "]"}]}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.795594988373721*^9, 3.795595042599126*^9}, {
  3.795595077487207*^9, 3.795595109899185*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"37c782f3-89b8-4af8-b147-1fcd734f4966"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.38392`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.795608087755426*^9, 3.795609511030901*^9, 
  3.795615849280192*^9, 3.795618933041033*^9, 3.795618967986828*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"b01e41a8-f826-4ccd-9da2-45a747cb8494"]
}, Open  ]],

Cell["Here we plot the results for ISSP only:", "Text",
 CellChangeTimes->{{3.795595685872078*^9, 
  3.7955957289149427`*^9}},ExpressionUUID->"32d3eb02-4974-438e-a9e4-\
69cc1e8ee14c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "2532", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "ISSP", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "\[LessEqual]", "70"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"120", ",", "200"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"80", ",", "110"}], "}"}], "]"}]}], "]"}], ",", 
          "Above"}], "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<Quarantine start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"ISSP", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795595056179405*^9, 
   3.795595072738517*^9}, {3.795595157671277*^9, 3.795595199632392*^9}, {
   3.7955952456250753`*^9, 3.795595273084453*^9}, {3.79559570107738*^9, 
   3.795595721873345*^9}, {3.795600793823765*^9, 3.79560083814741*^9}, 
   3.79560204252104*^9},
 CellLabel->
  "In[330]:=",ExpressionUUID->"31ca5910-b7df-4a94-808d-fa3c595d16b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
K4f/AQ3Hv4c=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
eOIIYmkkJnZ5cH7X20r+gX7LLY03rLaQPxINP1bqPo6Uv9+jUDpsnvaUnank
j4JWm6N9UuVm8kdh7uP76w8OIWZHQRZu7BHxf+uFKMxbvf7DvoyN5I9C9kcn
81HPN5A/CtD4qLLdiLghCgmWeePatsrXH9GIUIr80NucQv5opPlf1cl0I0Y0
Kk9OyGoSrSN/NKqHuPaqeK8lfzTci2eXGVnR+kYaDfELpqGCyWryR6M2THDZ
yHgV+aNhELiyjTtvJfk54EhLE7n2tF5icrC5aNWPt0EryM/Blt12Qemrk8jP
AS/7K0/7qIT8HHjOLpzk+YDWX1IObnhlW7UpE8s4mOq159KppSLyc1D5ppHF
yhCSPwa6tQ+L9j6m9RwzBp1FXwQeM4kRAy0Llzbr9Xzyx6Adnx2MX/PIH4PR
Zatjm2yIpTG4vauvLt6P1ouyGJQURqnUmyWQPwbemuL5eTrx5I9FwYg9FmvH
cMkfC6upFT9HqMSRPxb9r+YkdI6h9Sg7FhuCvvk16MSQPxaWN7SDNppyyD9w
XPzL2gzPaPLH4qKeSmnBSlrfNsTi6WPusWMnI8kfh0rm+8NTBu6LQX8c7ivE
zWnWIUYcfp6w0C0Mo/UyOw5ZZsmZC/PDyB+HsHM/K1gMYmkc/rOcbn7SL5T8
cfB0MAvRuETr74Y4JFSnlARMImZwce5ld2LaiBDyc7Gj8+hii+Zg8nMRIHZW
i64LIj8XIzTrDhVU0Po+hYvuPNvuy/8EkJ+LUvMv8dNu+5Ofi6oH4alHnviR
n4vraql3nnbQfoERj2UayeWrxhIz46HFvX7V0tKH/PG43Gvw6E6sN/njca7F
pL7xCO0/UuIH7ueHSkveeJI/Hi3dw2z/nkEsi0eW998Xb4o9yB8P7W6Pt5zb
tJ9hJMAwdOo2d31iZgIKdLSzbDe6kz8BV9wCX6nVuZE/Ab7KL+yen3AlfwJe
2J+YId5G+yVpAnTaf01aI3EhfwLG+NxnZXOdyZ+A858E0b5cJ/InomymRZxA
7Ej+RLhrae7NSKP9GBLBG6vu5nFkKfkToTph1ldBxRLyJ2Irz7ZO2kH7OWni
wP5kk8IOfWJZIg4PrXftDbYjfyKOSL5M3n/Ilvw8BMSVxRo02QyyKg+N2p/W
xpkTM3k4bbR9tG4m7R+NebAPalRWbgadHw+b63b92e5E7M7D601mZ8wireh8
eQP76XKjU1a0H+XxcLs7Y/jDKYvo/Ad8t064eKgvHOQsHt69lPx7fdQCyjPg
q8s/flPVcpALeGh1VslS1KH9rowHG4Gqz5y58we5hgeNFfO7PriZU14ewh2b
Y9+J5w1yBw8fBftyH+XJ9898tOaJLUVPTSk/HxceFp8Tjydm8qESs7AvJ8CE
8vPh8E9EXvYx2o+Djyjh7l2zev6g/HyUZyiq6bsRs/loufZIuuisMeXn4wDL
tNV6LHEKHxvWZPE+d82h/Hzc9AjK8a+fTfn58Oz8dNG7zJDy8yH7N7h3QwHN
C2R8fHqrOmPDWQPKz8e/j5OTe87PpPx8LDxTu37bjRmUn4+fdrVjGp/L5w8C
7NXpVr7cN43yCxCQ4OtbOJWYKcDq7ctlm32mUn4BTkXtqP+4fQrlF8B+FeoO
VNN8w12AJ5PF6V4axGwB1EtaXWvDJlN+AeZPuVT7oFiP8gtwPU5jgu5Y4iwB
zIY+DFjBp/mJVACreZOHup7TpfwC/NTT6m9K/Z3yC5AcU5jmF6ND+QUo9xd6
m/vQPKZBgKrmbdX6rEmUX4CdpW8+lbMmUn4hep57TC701aL8Qti3sPSksTTf
YQrh+S2qbn7qBMovhEFTk6HBqfGUXwjH8ufMaY80KL8QVyXvRf8pE7OFmG/Y
WaRmT/MjnhA+dquUktLUKL8Qupa3jW7VjKP8QizonOh3k0ksFWKxbulokySa
RxUIUbNgyMy6B6qUX4hx9a/yY+YR1wixMTI/Y+OiMZRfCJMDW6wctWi+1SGE
W3pSRemvkZRfhMlv15uv7FCh/CJs/N7vpfeR5mNMEVaUREZ7tytTfhG8Q7pU
y/qUKL8IFSJt0yFqxO4i1I+3aqz9g+ZtbBGG2GXghd9vlF+E8K7NS+rThlN+
EUpillUlXqN5XZYIw7mnl0X3DaX8IhjqPx4tsSYuEGHt5YnH/DOHUH4RYhVL
J9e9pvlfjQg8F17v4fnEDSK4Pp/zOnMPg/KLwNqTt/jKt180PxSjWkPmkn+P
5omqYjxoaXuWdfbnIDPFCHSalP9jT98gG4th42NisTWD5pEQo8eqMuflth+D
7C5GmiA39ED290Fmi1Fpz9wYn0fzTJ4YIq5gTF9pzyCniOFVf39p96vuQc4S
w/KsLXeUMrFUjOXvm7K6LGk+WiDGAbVZGZGir4MsEyPV8nzn+Is0T60Rozbe
5ENFH81bG8SoMC3qM3Ym7hBj5/N9hlpS+XxWAicHvTvWvTS/VZXAWZ0TxAsi
Zkpwvri3/0kqzXuNJdC+dbL+V8gnyi+BQp/j6VbbNsovweOxTsWWc1spvwSL
FSzubTH4SPklaPcZEpNs2EL5JTANephYZN5M+SXoO+047KVzE+WXYPorS/4x
zgfKL8Ec4acpJZmNlF+C/cx3yTVX31N+CVK9Onbtb39H+SXYKO0Orp31zup/
AExevq8=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHk4lPv7x0eRaEEblSJpT6SQVN5E9n0XNXYztjGLtKhRORInRBI6FC0k
USJOaVot7VqOTmTraFNUShK+fpfbHz//zPW67uee1/Mez/L53PO8w+z9xjAY
jFAxBuP/Pkf+uvX//ycDZe8/TG3f0EU8Hpc+TnOYFjjKsii1kK7uVBs9fhp8
ROs1kyS+ECvgce+Rh3W6X4kVsaRE7EXqw2/EypBSarpldf87sQq0Bi2NvfV/
Equird2qUW9NP/FCpDHL+EH3BokXQ0rZV3NsnBhGeCmeXTcQKUwXJ14OJkMt
t3O2JPEKsINmhNy/KE2sgf5rkjXvv04mXolTZ9nVYgNyxJrQm+cYd/T7NOJV
sD6khvZtCsSr8crwb3WDLEViLfyZbuFYcl2ZWBuxyy1OHDgxn1gHz5PjtA5K
LiJeg1OxJglKUsuIdeHFblv94oY68Vrk3Hx/a2K+JrEeNq6wWTSuW4t4Hbb3
5T/ceF+XeD22vfuLo+K6gXgD5Px791i/NCDWxzJ3s/oJDGNiQNST9vvUZdMR
FgIfZBqK1aZaUd0Ax20/aIydbUd1A0TiYr21siPVDfFAoXt89nkXqhsiZ+EO
E+G/m6m+EVuNe6t1vJhU34jgQOmESkMfqhthqeteG1aeP9WNcCj4Y1ZrJpvq
xthgpHB9oWEY1Y2x+Z2aopQ7l+qbIPMw/pxvnIDqm/C9M7V7puF2qpvA0mxC
fdmxKKqb4MWKK3HmjtFUN4XGnHW7h4z2U90UEs/koVQUS3UzFEXWztqUE091
M7ydckO1dEYS1c3xx3r5RrPSw1Q3R+bE9u+3Lx6hugWs/k5maSgeo7oFquqE
bid+Z1HdElqprJ7DJTlUt8Td8r6Dq9RzqW6FELnSwsUDp6huhcd5ipmrlfKp
bo2qS02vldIKqW4NXjrLcbd6MdVtsF3lgpyR7kWq22DnjHfmft6lVLfFQGXe
wYSTZSMMWyy2+WemWdcVOt4WU37qnTi07u8RFtnirESgbUjUNeq3g0z73JhP
edep3w5jmy+WRT4VUb8dAo5turj76g3qt4N+RtoJ/7ib1G+PIcn5KQ46t6jf
Hmsb/aaX3SYW2iPl3p6mNStvU789BhXlP6dEETMcECKa5+R8jhgOUItZtPz8
VWKhA+7BykatdLTfAaeTZfbkpY72OyIharvTN+ZovyOW3wjT7pw92u8Ij6i2
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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
jCd/GAL0x3G8OSLyh8Hyodpky0x6/kvC4KE+S1RTKSB/GOzD968R/8snfxiC
ulUeGeoQM8LB2hBkvjWa1hPMcJyWlXlkUMYjfzg2G6we6BlFzApH2PLm+ig/
LvnDwZH9OqpdQOsTSTgstLKdYsw55A/HOslJG9lJseQPR3LpoiMm79jkjwAn
RjVvewetd5gRiNlwcHpmaxT5I+AR//23J62R5I/Am5R5xyY+jiB/BJacjGi/
/pbWT5II9PPMC49NIJZGIPfSmVQL4zDyR2DVcQ2Ba3Ao+SOxZLzwfsohWo8x
I5Fa1G+X0hZM/kjsDryULKNGzIqE/MCXpZcjg8gfCa2mVfKB1bS+k0Si1txl
xXllYmkk1nV0/fPX6wDyR4LzJHnRvmp/8kdBvqxxy/wDfuSPwq2G8AzdRFo/
Igq1VtmH1Ni+5I/CiucJNnvDVpM/CubtDSGzo33IH4X11U7NvARaj0qjEHTu
u7VKphf5o9DvWGVwudiT/NHYYRYvGXhI61lmNGQeV43dK0+MaPjfKNHTsHUn
fzRiuUlj/NPcyB+NB8rp+7820fpYEo1+/ZamszOIpdEYccZ9nZHQhfzRKDLX
08rIdyY/G8s1S2Kc2avIz4Z3g3BQz4LW32AjkGX3qkTNkfxssBZeehoxZiX5
2fiQNSj39Js9+dnYkph4r/QrreelbOR0uzWLZIg72fhWWpZyW2k5+WOg0VNk
6axvR/4YPPdRHX3ag/YHiMGSqjyvzck25I/BBt7A1K3l1uSPgfc5X2Hoeyvy
x8Aq0/T8ncXE0hi0vtiskLCZ9h+dMVjZ/rhuehvIH4s0k9rL/AXEzFjoLlHX
S5xhSf5Y7DJMn8jvNSd/LFSL33A9rpqRPxalXgzfwoKl5I/FKf+P0YysJeSP
BUL+zO/bSfujzljY3q/H6EwT8nNQxTuR2n10Mfk5GPQyzNG9sIj8HDTeOROf
1EL7LRYHfxc07N34zZj8HPzJ1up9OJdYwkGfX0KDWYgR+TnYIPejwvs47d86
OXC81mn9uNeA/GtxN7Lxc5opMXMtdvtKjOR365N/LWo21Mxa1Ub7QdZanA6I
/sPwyHzyr0Vri46PXYwe+dfifOvzYkV7XfKvxWfDrJLfDWh/2bkWicYKT35q
ziU/F4aGF8fbacwZYkUuzu+4uWi3jg69Hy5Wut52FpnSflWfC5Wubs2j7lr0
/riwq3fTLRDNHmIXLhY9T44xzZtF75cL59ZJzqPaaP/L5eLDe/UtZROJxVyo
G7d3fveYOcSZXCjcDMLuHA3qw8X7kW/CtN7SfrqYiwFm25NEe2IpF7Oej3mQ
7aI+xM1cDKa+rSydNoP6clFycNyom/20P+/novnzexVWy3Tqz8OR6tGv5Wun
UX8e+Gj6x698KvXnIdJYfLyngvb7+jyUmMTcd7ymQv15WOBfpzr7gTL158HB
7lOz0qcp1J+HgcDid3VqxFwelulNVG5bSecJYh4aXRS+/kyZTP15KPALzu2p
m0T9eYjOlNo7yhIX8zC1r//7I086n5DyYHi19LTraUXqz8OXC7NnRo0m7uRB
b8pJn7o7dL7Rz4OLeoXnu6PjqX8cdKaFy/fF/0b945CyyKPCNECe+sdhoetI
Y7YznZfoxyFK+1yb0ko56h8HvcB1XU0ustQ/Dh3d3ZcXsui8hRUHtTtapT0J
Y6h/HBLHDuRlHB5N/eNQK/owrrGezmsy49AdNOG14+eR1D8O+0NV2LUGxMVx
MLte//QeX4b6x2HLDO27y67Q+U9zHHyDOOuvjCfujAMnbc4omTAG9Y+D6qEl
Fw6lDtL5ER8Z/34rrXCi8yRFPlqtCvqea/wcYiYfz5PGzS8c8WOI9fk4UTdG
sqfv2xD/ulrSdw6M0H/2dYhd+Cix3x077RmdX7H4MHm+6FHvq89DzOXj/sY6
H8vBT0Ms5qOy4P5fl6cTZ/IxecT5w4Og8zAJHwULmy5e5nwY4mI+EmYkp2fl
0/mZlI8O15Kdls/ofK2ZD6HW7LhYbeLOX/MvlD628uk8rp+PCoHjtnk3h8/r
BKiZ5LBpgQaxogAJ7Xeqlo6k8z2mAJl1ibM4zf9SfwEUhL1GGwr7qL8A+skv
Cvt3vaL+v/KbrD2+Sb3UX4CQ7Z2bneJ7qL8ANo0fPIISX1J/Acw2Lyk0SH9B
/QXoXeBiFCD5h/oLMEuiGLZd2k39Bdiq8UbJv+c59RdA68CLMvE04mYB2j76
yB1376L+AthmPvxbkPWM+gvQkpivfbr9KfUX4mD3gydf5xErCpGSoZ33e0on
9RdCxiym+fiVJ9RfiBzlMZlnNj+m/kIoMGQE9z07qL8QZu/qkguN2qm/ELsq
zwWWqT2i/kKIHZrepin+Tf2F6E3+Iimf8JD6//LNyu5vV35A/YXY7LBuzkGd
/1B/IYru+mSnWbdRfyHy/PwMXCLuU38hnpVpmh/dd4/6C+GYlXRE+VYr9RfC
5sanUM4oYoYIr79lnfVc0UL9RVhz17Eied9d6i/C8vg5ktPdzdRfBFSa6u2w
IIYIXs+vv65b+hf1F8FAw2TZgzFN1F+EmWVZTo87Gqm/COtFA8oB0gbqL4Jh
6E71f87epv4iZF4vni534k/qL0LelwyTgFO3qL8ICcwbOeKym9RfhNbCY4sU
bt+g/iLsmqnZXvTyOvUXYbsK/8ugwnXL/wIUoLzg
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHk41GsbxwcnRQtaaFFUkmTXQpSvPSVkC6Gxb4OZMTNFWZISbaKUUg1R
OqlsqUNqOrZOSaKNSuJ1ShHatOrtvdz+eP0z1+e6557P7zt+8/ye557rG+kY
IM5gMCLEGIz/vY78DZj8/ysD5T1vpnSt6iceh9K3U52mBo+yLMrWStf3ao6+
fyr8RCv10sYMEk9H09DhxtuG74kVsahY7NGhxg/EypBSel69ruET8TwsHba1
9DX5QqyCzq51z4wMvhOrIpNZzgu7M0ysBillfz2JFDGMsDoe3DAVTZ/2B7EG
mAzN072zxhJrITRMPryhRJpYB9+rxt7qeT+JWBf5BaH1Yj/liPVgNNc55cin
qcT6sNuvia7N04mX4KlZpbZptiLxUuw7uta5+IYy8TIka6zN2Z0zn3g5Hh5M
WZo6diGxAfKTrfcqSS0mNoRPaOeSRze1iVdA+HdP9YRzesRGMNeyXyg5sJTY
GNFfzzWaNxgSr8Tm1yfZ89xWEa+CXOBQvF2rKbEJFnvYNI9nWBIDoo+ZP/Iv
rx7hBOCNzJMizSnrqG6KEw5vdCRmrae6KbagpNlO2ZnqZrg7fWDcqQsbqG4G
oWqMdULbRqqbY5PlUP1yHybVzcEKlt5bYeZHdQuouyXah+QFUt0C+1lvs18e
D6W6JVZZTL+hahZJdUtsfK2pKOXBpboVZBr3nPdP4VPdCp96Dw3MMIumujVs
bcY3l2fFUt0aj7Supqxx3k711dCZbRz3yyKJ6qsx5oEClC4mU90GF7f8M9NK
uIfqNng1+aZKmXwa1ddg10qFZzZl6VRfg+MTuj7VlBym+lqsqzwYoqOYRfW1
uH47wT3nRzbVbbH0UMjH9GIh1W1Rd+Vrqr72aaqvQ7hcWaHaz3yqr0NTnuLx
JUrnqG6H66XP25UyC6luh6ijIc5x2kVUt0f0vEtyFoYlVLfHVvnXawJ8y6ju
gJ8Veal7c8tHGA5Qs388w6b/Kr3fAZO/GOXsN64cYZEDCsYEO4THVlH/esh0
zdnZl3eD+tdD4kVJ+ZYWEfWvR1CWVUnctZvUvx4mxzJzAlP+pn5H/Bo7P8Np
eTX1O2LFs4Bp5TXECY7IuBP/3EC3hvodMayo8C4jlpjhhHDRXBfX88RwgubO
hRoXrhEnOOEO1tlrlo32O+HMQZn4vEOj/c7YGxvt8oE52u+MislrlvTOGu13
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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {5}}]& ], 
         "120"], Annotation[#, 120, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$106390, {5}}]& ], 
         "120"], Annotation[#, 120, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {133.92260589425524`, 7641.761279392237}], 
              Offset[{0., 0.}, {133.92260589425524`, 7641.761279392237}], 
              Offset[{0., 0.}, {134.9572045864719, 7782.743115760035}], 
              Offset[{0., 0.}, {134.9572045864719, 7782.743115760035}], 
              Offset[{0, 0}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 5}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 10}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 10}, {135.99180327868854`, 7923.724952127833}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {133.92260589425524`, 7641.761279392237}], 
              Offset[{0., 0.}, {133.92260589425524`, 7641.761279392237}], 
              Offset[{0., 0.}, {134.9572045864719, 7782.743115760035}], 
              Offset[{0., 0.}, {134.9572045864719, 7782.743115760035}], 
              Offset[{0, 0}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 5}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 10}, {135.99180327868854`, 7923.724952127833}], 
              Offset[{0, 10}, {135.99180327868854`, 7923.724952127833}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.770405222194867, 23.}, {135.99180327868854`, 
               7923.724952127833}], 
              
              Offset[{9.77040522219487, 10.000000000000002`}, {
               135.99180327868854`, 7923.724952127833}], 
              
              Offset[{-7.229594777805129, 9.999999999999998}, {
               135.99180327868854`, 7923.724952127833}], 
              
              Offset[{-7.229594777805133, 23.}, {135.99180327868854`, 
               7923.724952127833}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["40", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.270405222194869, 16.5}, {135.99180327868854`, 
             7923.724952127833}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {142.1253993934754, 2501.567552792206}], 
              Offset[{0., 0.}, {142.1253993934754, 2501.567552792206}], 
              Offset[{0., 0.}, {143.55860133608195`, 2642.5493891600036`}], 
              Offset[{0., 0.}, {143.55860133608195`, 2642.5493891600036`}], 
              Offset[{0, 0}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 5}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 10}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 10}, {144.99180327868854`, 2783.531225527802}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {142.1253993934754, 2501.567552792206}], 
              Offset[{0., 0.}, {142.1253993934754, 2501.567552792206}], 
              Offset[{0., 0.}, {143.55860133608195`, 2642.5493891600036`}], 
              Offset[{0., 0.}, {143.55860133608195`, 2642.5493891600036`}], 
              Offset[{0, 0}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 5}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 10}, {144.99180327868854`, 2783.531225527802}], 
              Offset[{0, 10}, {144.99180327868854`, 2783.531225527802}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.889949243294947, 23.}, {144.99180327868854`, 
               2783.531225527802}], 
              
              Offset[{8.88994924329495, 10.000000000000002`}, {
               144.99180327868854`, 2783.531225527802}], 
              
              Offset[{-8.11005075670505, 9.999999999999998}, {
               144.99180327868854`, 2783.531225527802}], 
              
              Offset[{-8.110050756705053, 23.}, {144.99180327868854`, 
               2783.531225527802}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.3899492432949492, 16.5}, {144.99180327868854`, 
             2783.531225527802}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {92.94932941872135, 8159.728051969564}], 
              Offset[{0., 0.}, {92.94932941872135, 8159.728051969564}], 
              Offset[{0., 0.}, {93.97056634870495, 8300.709888337362}], 
              Offset[{0., 0.}, {93.97056634870495, 8300.709888337362}], 
              Offset[{0, 0}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 5}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 10}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 10}, {94.99180327868854, 8441.69172470516}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {92.94932941872135, 8159.728051969564}], 
              Offset[{0., 0.}, {92.94932941872135, 8159.728051969564}], 
              Offset[{0., 0.}, {93.97056634870495, 8300.709888337362}], 
              Offset[{0., 0.}, {93.97056634870495, 8300.709888337362}], 
              Offset[{0, 0}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 5}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 10}, {94.99180327868854, 8441.69172470516}], 
              Offset[{0, 10}, {94.99180327868854, 8441.69172470516}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.909870657312647, 23.}, {94.99180327868854, 
               8441.69172470516}], 
              
              Offset[{9.90987065731265, 10.000000000000002`}, {
               94.99180327868854, 8441.69172470516}], 
              
              Offset[{-7.090129342687351, 9.999999999999998}, {
               94.99180327868854, 8441.69172470516}], 
              
              Offset[{-7.090129342687354, 23.}, {94.99180327868854, 
               8441.69172470516}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["80", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.4098706573126478`, 16.5}, {94.99180327868854, 
             8441.69172470516}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {88.39562331495627, 9373.607208117077}], 
              Offset[{0., 0.}, {88.39562331495627, 9373.607208117077}], 
              Offset[{0., 0.}, {89.69371329682241, 9514.589044484874}], 
              Offset[{0., 0.}, {89.69371329682241, 9514.589044484874}], 
              Offset[{0, 0}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 5}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 10}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 10}, {90.99180327868854, 9655.570880852672}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {88.39562331495627, 9373.607208117077}], 
              Offset[{0., 0.}, {88.39562331495627, 9373.607208117077}], 
              Offset[{0., 0.}, {89.69371329682241, 9514.589044484874}], 
              Offset[{0., 0.}, {89.69371329682241, 9514.589044484874}], 
              Offset[{0, 0}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 5}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 10}, {90.99180327868854, 9655.570880852672}], 
              Offset[{0, 10}, {90.99180327868854, 9655.570880852672}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{13.365847560676112`, 23.000000000000004`}, {
               90.99180327868854, 9655.570880852672}], 
              
              Offset[{13.365847560676116`, 10.000000000000004`}, {
               90.99180327868854, 9655.570880852672}], 
              
              Offset[{-8.634152439323884, 9.999999999999996}, {
               90.99180327868854, 9655.570880852672}], 
              
              Offset[{-8.634152439323888, 22.999999999999996`}, {
               90.99180327868854, 9655.570880852672}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.365847560676113, 16.5}, {90.99180327868854, 
             9655.570880852672}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {94.4790837746011, 7812.833614826923}], 
              Offset[{0., 0.}, {94.4790837746011, 7812.833614826923}], 
              Offset[{0., 0.}, {95.73544352664481, 7953.8154511947205`}], 
              Offset[{0., 0.}, {95.73544352664481, 7953.8154511947205`}], 
              Offset[{0, 0}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 5}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 10}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 10}, {96.99180327868854, 8094.797287562518}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {94.4790837746011, 7812.833614826923}], 
              Offset[{0., 0.}, {94.4790837746011, 7812.833614826923}], 
              Offset[{0., 0.}, {95.73544352664481, 7953.8154511947205`}], 
              Offset[{0., 0.}, {95.73544352664481, 7953.8154511947205`}], 
              Offset[{0, 0}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 5}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 10}, {96.99180327868854, 8094.797287562518}], 
              Offset[{0, 10}, {96.99180327868854, 8094.797287562518}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{13.168456553191426`, 23.000000000000004`}, {
               96.99180327868854, 8094.797287562518}], 
              
              Offset[{13.16845655319143, 10.000000000000004`}, {
               96.99180327868854, 8094.797287562518}], 
              
              Offset[{-8.83154344680857, 9.999999999999996}, {
               96.99180327868854, 8094.797287562518}], 
              
              Offset[{-8.831543446808574, 22.999999999999996`}, {
               96.99180327868854, 8094.797287562518}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["120", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.1684565531914273`, 16.5}, {96.99180327868854, 
             8094.797287562518}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Infected Severely Symptomatic Population\"", TraditionalForm],
      PlotRange -> {{0, 366.}, {0, 10617.352909984615`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"40", "60", "80", "100", "120"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Quarantine start\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Quarantine start\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.795608088026976*^9, 3.795609511339753*^9, 
  3.795615849946933*^9, 3.795618933356757*^9, 3.795618968331489*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"b8080d2e-ebf9-4b69-a7df-fbed33ec8ad8"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We use the code in this section to do the computations in the section \
\[OpenCurlyDoubleQuote]Sensitivity Analysis\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.7955975062695227`*^9, 
  3.795597589374229*^9}},ExpressionUUID->"62a153e7-8424-49ee-9349-\
d12d099e7c1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive interface", "Section",
 CellChangeTimes->{{3.795593836535923*^9, 3.795593843274486*^9}, 
   3.795594718930991*^9},ExpressionUUID->"53aab4de-a14e-4af4-8384-\
c63d4e12fca4"],

Cell[TextData[{
 "Using the interface in this section we can interactively see the effects of \
changing parameters. (This interface is programmed without using parametrized \
",
 StyleBox["NDSolve", "Program"],
 " solutions in order to be have code that corresponds to the interface \
implementations in [AAr2].)"
}], "Text",
 CellChangeTimes->{{3.795056161710297*^9, 3.795056164433085*^9}, {
  3.795102739589777*^9, 3.795102788123722*^9}, {3.795170737483289*^9, 
  3.795170745132682*^9}, {3.795595772105444*^9, 3.795595779780676*^9}, {
  3.795602344634674*^9, 
  3.795602408107588*^9}},ExpressionUUID->"f7bdb6e6-167d-4485-9d06-\
c58c3e5a2fb0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsPopulationKeys", "=", 
   RowBox[{"{", 
    RowBox[{
    "TP", ",", "SP", ",", "EP", ",", "ISSP", ",", "INSP", ",", "HP", ",", 
     "RP", ",", "DIP", ",", "HB"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsSuppliesKeys", "=", 
   RowBox[{"{", 
    RowBox[{"MS", ",", "MSD", ",", "HMS"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsMoneyKeys", "=", 
   RowBox[{"{", 
    RowBox[{"MHS", ",", "MLP", ",", "MMSP"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"modelLocal", "=", "modelSEI2HREcon"}], ",", 
       RowBox[{"aStocks", "=", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"aSolLocal", "=", "aParSol"}], ",", "lsPopulationPlots", ",", 
       "lsMoneyPlots", ",", "lsSuppliesPlots"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"modelLocal", "=", 
       RowBox[{"SetRateRules", "[", 
        RowBox[{"modelLocal", ",", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"aincp", "\[Rule]", "aincpM"}], ",", 
           RowBox[{"aip", "\[Rule]", "aipM"}], ",", 
           RowBox[{
            RowBox[{"sspf", "[", "SP", "]"}], "->", "sspfM"}], ",", 
           RowBox[{
            RowBox[{"\[Beta]", "[", "HP", "]"}], "->", "crhpM"}], ",", 
           RowBox[{"qsd", "->", "qsdM"}], ",", 
           RowBox[{"ql", "\[Rule]", "qlM"}], ",", 
           RowBox[{"qcrf", "->", "qcrfM"}], ",", 
           RowBox[{
            RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
            RowBox[{"nhbrM", "/", "1000"}]}], ",", 
           RowBox[{
            RowBox[{"nhbcr", "[", 
             RowBox[{"ISSP", ",", "ISNP"}], "]"}], "\[Rule]", "nhbcrM"}], ",", 
           RowBox[{
            RowBox[{"mspr", "[", "HB", "]"}], "->", "msprM"}], ",", 
           RowBox[{
            RowBox[{"msdp", "[", "HB", "]"}], "->", "msdpM"}]}], "|>"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"aSolLocal", "=", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{"ModelNDSolve", "[", 
          RowBox[{"modelLocal", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "ndays"}], "}"}]}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"lsPopulationPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"Quiet", "@", 
        RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
         RowBox[{"aStocks", ",", "\[IndentingNewLine]", 
          RowBox[{"KeyTake", "[", 
           RowBox[{"aSolLocal", ",", 
            RowBox[{"Intersection", "[", 
             RowBox[{"lsPopulationKeys", ",", "displayPopulationStocks"}], 
             "]"}]}], "]"}], ",", "\[IndentingNewLine]", "None", ",", "ndays",
           ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "popLogPlotQ"}], ",", 
          RowBox[{"\"\<Together\>\"", "\[Rule]", "popTogetherQ"}], ",", 
          RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "popDerivativesQ"}], ",", 
          
          RowBox[{
          "\"\<DerivativePrefix\>\"", "\[Rule]", "\"\<\[CapitalDelta]\>\""}], 
          ",", "opts", ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"qsdM", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"qsdM", ",", 
                  RowBox[{"1.5", "*", "population"}]}], "}"}]}], "}"}], "]"}],
              ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"qsdM", "+", "qlM"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"qsdM", "+", "qlM"}], ",", 
                  RowBox[{"1.5", "*", "population"}]}], "}"}]}], "}"}], 
              "]"}]}], "}"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsSuppliesPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"KeyDrop", "[", 
            RowBox[{"aSolLocal", ",", 
             RowBox[{"Join", "[", 
              RowBox[{"lsPopulationKeys", ",", "lsMoneyKeys"}], "]"}]}], 
            "]"}], "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "ELSE", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Quiet", "@", 
          RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
           RowBox[{"aStocks", ",", "\[IndentingNewLine]", 
            RowBox[{"KeyTake", "[", 
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"aSolLocal", ",", 
                RowBox[{"Join", "[", 
                 RowBox[{"lsPopulationKeys", ",", "lsMoneyKeys"}], "]"}]}], 
               "]"}], ",", "displaySupplyStocks"}], "]"}], ",", 
            "\[IndentingNewLine]", "None", ",", "ndays", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "supplLogPlotQ"}], ",", 
            RowBox[{"\"\<Together\>\"", "\[Rule]", "supplTogetherQ"}], ",", 
            RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "supplDerivativesQ"}], 
            ",", 
            RowBox[{
            "\"\<DerivativePrefix\>\"", "\[Rule]", 
             "\"\<\[CapitalDelta]\>\""}], ",", "opts"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsMoneyPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"Quiet", "@", 
        RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
         RowBox[{"aStocks", ",", "\[IndentingNewLine]", 
          RowBox[{"KeyTake", "[", 
           RowBox[{"aSolLocal", ",", 
            RowBox[{"Intersection", "[", 
             RowBox[{"lsMoneyKeys", ",", "displayMoneyStocks"}], "]"}]}], 
           "]"}], ",", "\[IndentingNewLine]", "None", ",", "ndays", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "moneyLogPlotQ"}], ",", 
          RowBox[{"\"\<Together\>\"", "\[Rule]", "moneyTogetherQ"}], ",", 
          RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "moneyDerivativesQ"}], 
          ",", 
          RowBox[{
          "\"\<DerivativePrefix\>\"", "\[Rule]", "\"\<\[CapitalDelta]\>\""}], 
          ",", "opts"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Multicolumn", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
         "lsPopulationPlots", ",", "lsSuppliesPlots", ",", "lsMoneyPlots"}], 
         "]"}], ",", "nPlotColumns", ",", 
        RowBox[{"Dividers", "\[Rule]", "All"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", "0.8", "]"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ndays", ",", "365", ",", "\"\<Number of days\>\""}], "}"}], 
     ",", "1", ",", "365", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aincpM", ",", "6.", ",", "\"\<Average incubation period (days)\>\""}], 
      "}"}], ",", "1", ",", "60.", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aipM", ",", "21.", ",", "\"\<Average infectious period (days)\>\""}], 
      "}"}], ",", "1", ",", "60.", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sspfM", ",", "0.2", ",", 
       "\"\<Severely symptomatic population fraction\>\""}], "}"}], ",", "0", 
     ",", "1", ",", "0.025", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "crhpM", ",", "0.1", ",", 
       "\"\<Contact rate of the hospitalized population\>\""}], "}"}], ",", 
     "0", ",", "30", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qsdM", ",", "55", ",", "\"\<Quarantine start days\>\""}], 
      "}"}], ",", "0", ",", "365", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qlM", ",", 
       RowBox[{"8", "*", "7"}], ",", "\"\<Quarantine length (in days)\>\""}], 
      "}"}], ",", "0", ",", "120", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qcrfM", ",", "0.25", ",", "\"\<Quarantine contact rate fraction\>\""}],
       "}"}], ",", "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nhbrM", ",", "2.9", ",", 
       "\"\<Number of hospital beds rate (per 1000 people)\>\""}], "}"}], ",",
      "0", ",", "100", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nhbcrM", ",", "0", ",", 
       "\"\<Number of hospital beds change rate\>\""}], "}"}], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.001", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "msprM", ",", "200", ",", "\"\<Medical supplies production rate\>\""}], 
      "}"}], ",", "0", ",", "50000", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "msdpM", ",", "1.2", ",", "\"\<Medical supplies delivery period\>\""}], 
      "}"}], ",", "0", ",", "10", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "displayPopulationStocks", ",", "lsPopulationKeys", ",", 
       "\"\<Population stocks to display:\>\""}], "}"}], ",", 
     "lsPopulationKeys", ",", 
     RowBox[{"ControlType", "\[Rule]", "TogglerBar"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popTogetherQ", ",", "True", ",", "\"\<Plot populations together\>\""}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popDerivativesQ", ",", "False", ",", 
       "\"\<Plot populations derivatives\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popLogPlotQ", ",", "False", ",", "\"\<LogPlot populations\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "displaySupplyStocks", ",", "lsSuppliesKeys", ",", 
       "\"\<Supplies stocks to display:\>\""}], "}"}], ",", "lsSuppliesKeys", 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "TogglerBar"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "supplTogetherQ", ",", "True", ",", 
       "\"\<Plot supplies functions together\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "supplDerivativesQ", ",", "False", ",", 
       "\"\<Plot supplies functions derivatives\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "supplLogPlotQ", ",", "True", ",", 
       "\"\<LogPlot supplies functions\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "displayMoneyStocks", ",", "lsMoneyKeys", ",", 
       "\"\<Money stocks to display:\>\""}], "}"}], ",", "lsMoneyKeys", ",", 
     RowBox[{"ControlType", "\[Rule]", "TogglerBar"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "moneyTogetherQ", ",", "True", ",", 
       "\"\<Plot money functions together\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "moneyDerivativesQ", ",", "False", ",", 
       "\"\<Plot money functions derivatives\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "moneyLogPlotQ", ",", "True", ",", "\"\<LogPlot money functions\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nPlotColumns", ",", "1", ",", "\"\<Number of plot columns\>\""}], 
      "}"}], ",", 
     RowBox[{"Range", "[", "5", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.786317238125729*^9, 3.7863172448803053`*^9}, {
   3.786317305823036*^9, 3.78631742738162*^9}, {3.7863174591434803`*^9, 
   3.7863174710329447`*^9}, {3.7863177602630157`*^9, 3.7863177665402184`*^9}, 
   3.786318439978745*^9, 3.786318474335602*^9, 3.786318595635326*^9, 
   3.7863186886099987`*^9, {3.786318973575309*^9, 3.78631897913483*^9}, {
   3.7863192960522013`*^9, 3.7863193520896606`*^9}, {3.78632045214303*^9, 
   3.786320515851375*^9}, {3.786320548951707*^9, 3.786320608254611*^9}, 
   3.786320716973219*^9, {3.786320747618629*^9, 3.78632078936588*^9}, {
   3.7863209231138277`*^9, 3.7863209233444147`*^9}, {3.786321063354065*^9, 
   3.786321063823612*^9}, {3.7863212618845663`*^9, 3.78632126276233*^9}, {
   3.786321726238051*^9, 3.7863217271097517`*^9}, {3.78632228824187*^9, 
   3.786322300343925*^9}, {3.786322445978818*^9, 3.786322489110881*^9}, {
   3.786322706804262*^9, 3.786322733501684*^9}, {3.7863227654301157`*^9, 
   3.7863227695107727`*^9}, {3.786323789700986*^9, 3.78632380666453*^9}, {
   3.786323871726573*^9, 3.7863238720086412`*^9}, {3.78632406961727*^9, 
   3.786324070807716*^9}, {3.786324647439806*^9, 3.786324648944803*^9}, {
   3.7863248014998913`*^9, 3.78632480579291*^9}, 3.78632483949166*^9, {
   3.786370422850316*^9, 3.786370441179221*^9}, {3.786370523607484*^9, 
   3.786370525157041*^9}, {3.786370570530699*^9, 3.786370673606064*^9}, {
   3.786374148618553*^9, 3.786374241644977*^9}, {3.7863743609559717`*^9, 
   3.786374361166888*^9}, {3.786381001681492*^9, 3.786381006216125*^9}, {
   3.786548862175577*^9, 3.786548863305829*^9}, {3.786549167685629*^9, 
   3.786549168612378*^9}, {3.786549307803813*^9, 3.7865493538855886`*^9}, {
   3.786549836126419*^9, 3.786549865712524*^9}, {3.7867564875938873`*^9, 
   3.78675656453445*^9}, {3.786756607565278*^9, 3.7867566079229097`*^9}, {
   3.7867925577521553`*^9, 3.78679261832148*^9}, {3.786794241339982*^9, 
   3.786794242462961*^9}, {3.786810270344038*^9, 3.78681028617314*^9}, {
   3.786810542579221*^9, 3.786810543566774*^9}, {3.786810852009184*^9, 
   3.786810861918651*^9}, {3.78681123463466*^9, 3.78681124289076*^9}, {
   3.786811763483728*^9, 3.7868117861639633`*^9}, {3.7870671202706223`*^9, 
   3.78706716080371*^9}, {3.787067311693521*^9, 3.787067312074051*^9}, {
   3.787068090702633*^9, 3.787068091276505*^9}, {3.787068141990532*^9, 
   3.787068146399663*^9}, {3.7870738473711643`*^9, 3.787073914759479*^9}, {
   3.787151713207073*^9, 3.787151713454609*^9}, {3.787153279424542*^9, 
   3.7871532799626226`*^9}, {3.787153314727811*^9, 3.787153314950966*^9}, {
   3.7871533640356607`*^9, 3.7871533752955217`*^9}, 3.787153470036459*^9, {
   3.787155281055571*^9, 3.787155288030821*^9}, {3.787156071642871*^9, 
   3.787156186328278*^9}, {3.787273890381342*^9, 3.7872738904914103`*^9}, {
   3.787274893549137*^9, 3.7872748949293633`*^9}, {3.787327417876851*^9, 
   3.78732743026373*^9}, {3.787327476884872*^9, 3.7873274785692587`*^9}, {
   3.787328383609994*^9, 3.7873283890435247`*^9}, {3.787328936726845*^9, 
   3.787329013442053*^9}, {3.787329064023488*^9, 3.787329140479594*^9}, {
   3.787330369395667*^9, 3.787330518033765*^9}, {3.7873559639606047`*^9, 
   3.7873560113171053`*^9}, {3.78735604958642*^9, 3.787356076156808*^9}, {
   3.7873561880659037`*^9, 3.787356218809911*^9}, {3.7873562510666122`*^9, 
   3.78735630362477*^9}, {3.78735650973223*^9, 3.7873565182685537`*^9}, {
   3.7875013748468847`*^9, 3.787501414829297*^9}, {3.787504869994722*^9, 
   3.787504912890319*^9}, {3.788016149006979*^9, 3.78801617031537*^9}, {
   3.7880162029395933`*^9, 3.788016207009506*^9}, {3.78801703767134*^9, 
   3.7880170378863277`*^9}, 3.788497622332589*^9, {3.78849818633349*^9, 
   3.78849823041328*^9}, {3.788498324182007*^9, 3.788498336026155*^9}, {
   3.78854322537654*^9, 3.78854324907491*^9}, {3.788543313700819*^9, 
   3.788543314132841*^9}, {3.788543450641032*^9, 3.788543514124896*^9}, {
   3.788543981727172*^9, 3.788544060080567*^9}, {3.788544117065056*^9, 
   3.788544143693222*^9}, {3.788544439383399*^9, 3.7885444406411324`*^9}, {
   3.788551508962717*^9, 3.788551571896957*^9}, {3.788551617719614*^9, 
   3.7885516339851637`*^9}, {3.788551724089517*^9, 3.788551726732849*^9}, {
   3.7885518598112288`*^9, 3.788551882545281*^9}, {3.7885552485905313`*^9, 
   3.788555290790285*^9}, {3.78855590930855*^9, 3.788555909315702*^9}, {
   3.788555951312861*^9, 3.7885559661624413`*^9}, {3.788556022685916*^9, 
   3.788556048277678*^9}, {3.788556609761383*^9, 3.78855661140443*^9}, {
   3.7885632652501917`*^9, 3.7885632659339657`*^9}, {3.788563328080624*^9, 
   3.788563385762018*^9}, {3.78856346424054*^9, 3.7885634956720552`*^9}, {
   3.788564251507742*^9, 3.788564314407947*^9}, {3.788619666277625*^9, 
   3.788619672286278*^9}, {3.788619916167513*^9, 3.788619919948606*^9}, {
   3.7886199623735447`*^9, 3.7886199671309032`*^9}, {3.7886207821965303`*^9, 
   3.788620782447179*^9}, {3.792339986534932*^9, 3.7923401914305696`*^9}, {
   3.792340224711012*^9, 3.792340246669105*^9}, {3.792340307618897*^9, 
   3.7923403104572763`*^9}, {3.7923403900543823`*^9, 3.792340391289946*^9}, {
   3.792340464305459*^9, 3.7923406632749157`*^9}, {3.7923406983531437`*^9, 
   3.7923408193605003`*^9}, {3.792340858851686*^9, 3.792340877716078*^9}, {
   3.792341004743967*^9, 3.792341011852682*^9}, {3.792341084563244*^9, 
   3.792341144254981*^9}, {3.792344112988242*^9, 3.79234411309833*^9}, {
   3.792345507902218*^9, 3.792345678703079*^9}, {3.792345709888754*^9, 
   3.7923457553491907`*^9}, {3.792345799551609*^9, 3.7923459978244457`*^9}, 
   3.792346177592004*^9, {3.792346360698246*^9, 3.792346504644956*^9}, {
   3.7923466797214737`*^9, 3.7923468010485783`*^9}, {3.792407360686906*^9, 
   3.7924073620792007`*^9}, {3.792409001165797*^9, 3.792409025081437*^9}, {
   3.792409075870474*^9, 3.792409094394063*^9}, 3.792414210709062*^9, {
   3.792414269309236*^9, 3.792414280500248*^9}, {3.792414331724285*^9, 
   3.792414335918174*^9}, {3.792417388251939*^9, 3.792417394169883*^9}, 
   3.792432617000585*^9, 3.792432692853957*^9, {3.792441861005801*^9, 
   3.792441861679482*^9}, {3.792443303379622*^9, 3.792443308936564*^9}, {
   3.792443495105538*^9, 3.792443537958232*^9}, {3.79244357544234*^9, 
   3.7924436487357388`*^9}, {3.792444205747911*^9, 3.792444206195497*^9}, {
   3.792444265904039*^9, 3.792444267206521*^9}, {3.792448308403257*^9, 
   3.79244831195823*^9}, {3.792448917939115*^9, 3.792448919173271*^9}, {
   3.7924493327541637`*^9, 3.7924493450270157`*^9}, {3.792449414645301*^9, 
   3.792449415396982*^9}, {3.792450245661256*^9, 3.7924502491921*^9}, {
   3.792451564969988*^9, 3.792451608707293*^9}, {3.792451665081016*^9, 
   3.7924516737355947`*^9}, {3.7925022126998177`*^9, 3.792502213276998*^9}, {
   3.7925029420290213`*^9, 3.7925030719778976`*^9}, {3.792503103277059*^9, 
   3.792503132829657*^9}, {3.792503170519659*^9, 3.792503274751156*^9}, {
   3.7925033826541777`*^9, 3.792503389415659*^9}, {3.79250342286154*^9, 
   3.792503423510808*^9}, {3.792503827160379*^9, 3.792503827630527*^9}, {
   3.792503871676291*^9, 3.7925039113123827`*^9}, {3.792503964480145*^9, 
   3.79250402746771*^9}, {3.792504177669862*^9, 3.792504181719342*^9}, {
   3.792504319129912*^9, 3.792504378485444*^9}, {3.792504445640291*^9, 
   3.7925045488960257`*^9}, {3.7925046277802353`*^9, 3.792504628273101*^9}, 
   3.792507458337905*^9, {3.792507510773199*^9, 3.7925075136968412`*^9}, {
   3.7925165600903683`*^9, 3.792516578511261*^9}, {3.793112738429776*^9, 
   3.793112756976988*^9}, {3.7932616405793543`*^9, 3.793261678448497*^9}, {
   3.793261821111004*^9, 3.79326183169573*^9}, {3.7932619626261387`*^9, 
   3.7932619872971973`*^9}, {3.793262172487286*^9, 3.793262234285625*^9}, {
   3.793262309020323*^9, 3.7932623108428373`*^9}, {3.793262891544196*^9, 
   3.793262892127975*^9}, {3.793263167893942*^9, 3.79326316973639*^9}, {
   3.793263260818183*^9, 3.793263268906852*^9}, {3.793263319511345*^9, 
   3.7932633472219057`*^9}, {3.793263458204213*^9, 3.793263466294347*^9}, {
   3.79326369145437*^9, 3.793263692168653*^9}, {3.79326403057972*^9, 
   3.793264034367229*^9}, 3.793264070349216*^9, {3.793289181740947*^9, 
   3.793289195875703*^9}, {3.793290603646209*^9, 3.793290668882332*^9}, {
   3.79329070272359*^9, 3.793290753709564*^9}, {3.7932910824415073`*^9, 
   3.7932910829685297`*^9}, {3.79329120313479*^9, 3.793291205044091*^9}, {
   3.7934653220622177`*^9, 3.79346532578456*^9}, {3.7934663308252296`*^9, 
   3.793466349635172*^9}, {3.7934664058527203`*^9, 3.7934664119839087`*^9}, {
   3.7934667146492157`*^9, 3.793466737911417*^9}, {3.7934674041262207`*^9, 
   3.7934674047087717`*^9}, {3.793540934005924*^9, 3.793540934375325*^9}, {
   3.793541032141405*^9, 3.793541032484601*^9}, {3.793898475548843*^9, 
   3.793898490690917*^9}, {3.793898870223071*^9, 3.793898910895124*^9}, {
   3.793898962734329*^9, 3.793898966512385*^9}, {3.7938990591513643`*^9, 
   3.793899079367365*^9}, {3.793899212443462*^9, 3.793899223584831*^9}, {
   3.7939012727118587`*^9, 3.79390127334262*^9}, {3.7950561827704573`*^9, 
   3.795056183124613*^9}, {3.795056264171876*^9, 3.7950563185314217`*^9}, {
   3.795056403932991*^9, 3.795056527022772*^9}, {3.79505662883317*^9, 
   3.795056752129319*^9}, {3.795056927124832*^9, 3.795056928370734*^9}, {
   3.795057957303878*^9, 3.7950579581450453`*^9}, {3.795249921193945*^9, 
   3.795249923738696*^9}, {3.79525053578686*^9, 3.795250562863957*^9}, {
   3.795250609530856*^9, 3.795250641514535*^9}, {3.795251187420279*^9, 
   3.795251218424062*^9}, {3.7952513164397793`*^9, 3.795251319113394*^9}, {
   3.795251398552725*^9, 3.795251412832505*^9}, {3.795251542885921*^9, 
   3.7952515574775867`*^9}, {3.7952581912066927`*^9, 3.795258232405884*^9}, {
   3.795260400341133*^9, 3.7952604283693743`*^9}, {3.795260538943903*^9, 
   3.795260568049281*^9}, {3.7952605983089457`*^9, 3.795260659428821*^9}, {
   3.795260704198503*^9, 3.7952610024544163`*^9}, {3.795261033846521*^9, 
   3.795261047918696*^9}, {3.7952643007616663`*^9, 3.795264301187489*^9}, {
   3.795266060452866*^9, 3.795266225784256*^9}, {3.79526626933547*^9, 
   3.795266271290719*^9}, {3.7952663239143553`*^9, 3.79526632568911*^9}, 
   3.795561170179343*^9, 3.795593828103539*^9, {3.795593901284388*^9, 
   3.7955939905909967`*^9}, {3.7955941108775043`*^9, 3.795594373387533*^9}, {
   3.795594445086525*^9, 3.795594489883432*^9}, {3.795594562972095*^9, 
   3.795594570896122*^9}, {3.795594622613317*^9, 3.795594624277972*^9}, {
   3.7955947394137373`*^9, 3.795594913542882*^9}, {3.7956026744087143`*^9, 
   3.7956026757337112`*^9}, {3.795603219784478*^9, 3.795603219918498*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"32bcb6cf-9a01-451c-afdb-656d24fc9e64"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`aincpM$$ = 6., $CellContext`aipM$$ = 
    21., $CellContext`crhpM$$ = 
    0.1, $CellContext`displayMoneyStocks$$ = {$CellContext`MHS, \
$CellContext`MLP, $CellContext`MMSP}, $CellContext`displayPopulationStocks$$ \
= {$CellContext`TP, $CellContext`SP, $CellContext`EP, $CellContext`ISSP, \
$CellContext`INSP, $CellContext`HP, $CellContext`RP, $CellContext`DIP, \
$CellContext`HB}, $CellContext`displaySupplyStocks$$ = {$CellContext`MS, \
$CellContext`MSD, $CellContext`HMS}, $CellContext`moneyDerivativesQ$$ = 
    False, $CellContext`moneyLogPlotQ$$ = 
    True, $CellContext`moneyTogetherQ$$ = True, $CellContext`msdpM$$ = 
    1.2000000000000002`, $CellContext`msprM$$ = 200, $CellContext`ndays$$ = 
    365, $CellContext`nhbcrM$$ = 0, $CellContext`nhbrM$$ = 
    2.9000000000000004`, $CellContext`nPlotColumns$$ = 
    1, $CellContext`popDerivativesQ$$ = False, $CellContext`popLogPlotQ$$ = 
    False, $CellContext`popTogetherQ$$ = True, $CellContext`qcrfM$$ = 
    0.25, $CellContext`qlM$$ = 56, $CellContext`qsdM$$ = 
    55, $CellContext`sspfM$$ = 0.2, $CellContext`supplDerivativesQ$$ = 
    False, $CellContext`supplLogPlotQ$$ = 
    True, $CellContext`supplTogetherQ$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ndays$$], 365, "Number of days"}, 1, 365, 1}, {{
       Hold[$CellContext`aincpM$$], 6., "Average incubation period (days)"}, 
      1, 60., 1}, {{
       Hold[$CellContext`aipM$$], 21., "Average infectious period (days)"}, 1,
       60., 1}, {{
       Hold[$CellContext`sspfM$$], 0.2, 
       "Severely symptomatic population fraction"}, 0, 1, 0.025}, {{
       Hold[$CellContext`crhpM$$], 0.1, 
       "Contact rate of the hospitalized population"}, 0, 30, 0.1}, {{
       Hold[$CellContext`qsdM$$], 55, "Quarantine start days"}, 0, 365, 1}, {{
      
       Hold[$CellContext`qlM$$], 56, "Quarantine length (in days)"}, 0, 120, 
      1}, {{
       Hold[$CellContext`qcrfM$$], 0.25, "Quarantine contact rate fraction"}, 
      0, 1, 0.01}, {{
       Hold[$CellContext`nhbrM$$], 2.9, 
       "Number of hospital beds rate (per 1000 people)"}, 0, 100, 0.1}, {{
       Hold[$CellContext`nhbcrM$$], 0, 
       "Number of hospital beds change rate"}, -0.5, 0.5, 0.001}, {{
       Hold[$CellContext`msprM$$], 200, "Medical supplies production rate"}, 
      0, 50000, 10}, {{
       Hold[$CellContext`msdpM$$], 1.2, "Medical supplies delivery period"}, 
      0, 10, 0.1}, {{
       Hold[$CellContext`displayPopulationStocks$$], {$CellContext`TP, \
$CellContext`SP, $CellContext`EP, $CellContext`ISSP, $CellContext`INSP, \
$CellContext`HP, $CellContext`RP, $CellContext`DIP, $CellContext`HB}, 
       "Population stocks to display:"}, {$CellContext`TP, $CellContext`SP, \
$CellContext`EP, $CellContext`ISSP, $CellContext`INSP, $CellContext`HP, \
$CellContext`RP, $CellContext`DIP, $CellContext`HB}}, {{
       Hold[$CellContext`popTogetherQ$$], True, 
       "Plot populations together"}, {False, True}}, {{
       Hold[$CellContext`popDerivativesQ$$], False, 
       "Plot populations derivatives"}, {False, True}}, {{
       Hold[$CellContext`popLogPlotQ$$], False, "LogPlot populations"}, {
      False, True}}, {{
       Hold[$CellContext`displaySupplyStocks$$], {$CellContext`MS, \
$CellContext`MSD, $CellContext`HMS}, 
       "Supplies stocks to display:"}, {$CellContext`MS, $CellContext`MSD, \
$CellContext`HMS}}, {{
       Hold[$CellContext`supplTogetherQ$$], True, 
       "Plot supplies functions together"}, {False, True}}, {{
       Hold[$CellContext`supplDerivativesQ$$], False, 
       "Plot supplies functions derivatives"}, {False, True}}, {{
       Hold[$CellContext`supplLogPlotQ$$], True, 
       "LogPlot supplies functions"}, {False, True}}, {{
       Hold[$CellContext`displayMoneyStocks$$], {$CellContext`MHS, \
$CellContext`MLP, $CellContext`MMSP}, 
       "Money stocks to display:"}, {$CellContext`MHS, $CellContext`MLP, \
$CellContext`MMSP}}, {{
       Hold[$CellContext`moneyTogetherQ$$], True, 
       "Plot money functions together"}, {False, True}}, {{
       Hold[$CellContext`moneyDerivativesQ$$], False, 
       "Plot money functions derivatives"}, {False, True}}, {{
       Hold[$CellContext`moneyLogPlotQ$$], True, "LogPlot money functions"}, {
      False, True}}, {{
       Hold[$CellContext`nPlotColumns$$], 1, "Number of plot columns"}, {1, 2,
       3, 4, 5}}}, Typeset`size$$ = {
    753., {376.134033203125, 381.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`aincpM$$ = 6., $CellContext`aipM$$ = 
        21., $CellContext`crhpM$$ = 
        0.1, $CellContext`displayMoneyStocks$$ = {$CellContext`MHS, \
$CellContext`MLP, $CellContext`MMSP}, $CellContext`displayPopulationStocks$$ = \
{$CellContext`TP, $CellContext`SP, $CellContext`EP, $CellContext`ISSP, \
$CellContext`INSP, $CellContext`HP, $CellContext`RP, $CellContext`DIP, \
$CellContext`HB}, $CellContext`displaySupplyStocks$$ = {$CellContext`MS, \
$CellContext`MSD, $CellContext`HMS}, $CellContext`moneyDerivativesQ$$ = 
        False, $CellContext`moneyLogPlotQ$$ = 
        True, $CellContext`moneyTogetherQ$$ = True, $CellContext`msdpM$$ = 
        1.2, $CellContext`msprM$$ = 200, $CellContext`ndays$$ = 
        365, $CellContext`nhbcrM$$ = 0, $CellContext`nhbrM$$ = 
        2.9, $CellContext`nPlotColumns$$ = 1, $CellContext`popDerivativesQ$$ = 
        False, $CellContext`popLogPlotQ$$ = 
        False, $CellContext`popTogetherQ$$ = True, $CellContext`qcrfM$$ = 
        0.25, $CellContext`qlM$$ = 56, $CellContext`qsdM$$ = 
        55, $CellContext`sspfM$$ = 0.2, $CellContext`supplDerivativesQ$$ = 
        False, $CellContext`supplLogPlotQ$$ = 
        True, $CellContext`supplTogetherQ$$ = True}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`modelLocal = $CellContext`modelSEI2HREcon, \
$CellContext`aStocks = $CellContext`modelSEI2HREcon[
          "Stocks"], $CellContext`aSolLocal = $CellContext`aParSol, \
$CellContext`lsPopulationPlots, $CellContext`lsMoneyPlots, \
$CellContext`lsSuppliesPlots}, $CellContext`modelLocal = 
         EpidemiologyModelModifications`SetRateRules[$CellContext`modelLocal, 
           
           
           Association[$CellContext`aincp -> $CellContext`aincpM$$, \
$CellContext`aip -> $CellContext`aipM$$, $CellContext`sspf[$CellContext`SP] -> \
$CellContext`sspfM$$, $CellContext`\[Beta][$CellContext`HP] -> \
$CellContext`crhpM$$, $CellContext`qsd -> $CellContext`qsdM$$, \
$CellContext`ql -> $CellContext`qlM$$, $CellContext`qcrf -> \
$CellContext`qcrfM$$, $CellContext`nhbr[$CellContext`TP] -> \
$CellContext`nhbrM$$/
             1000, $CellContext`nhbcr[$CellContext`ISSP, $CellContext`ISNP] -> \
$CellContext`nhbcrM$$, $CellContext`mspr[$CellContext`HB] -> \
$CellContext`msprM$$, $CellContext`msdp[$CellContext`HB] -> \
$CellContext`msdpM$$]]; $CellContext`aSolLocal = Association[
           Part[
            
            EpidemiologyModelingSimulationFunctions`ModelNDSolve[$CellContext`\
modelLocal, {$CellContext`t, $CellContext`ndays$$}], 
            1]]; $CellContext`lsPopulationPlots = Quiet[
           
           SystemDynamicsInteractiveInterfacesFunctions`\
ParametricSolutionsPlots[$CellContext`aStocks, 
            KeyTake[$CellContext`aSolLocal, 
             
             Intersection[$CellContext`lsPopulationKeys, \
$CellContext`displayPopulationStocks$$]], None, $CellContext`ndays$$, 
            "LogPlot" -> $CellContext`popLogPlotQ$$, 
            "Together" -> $CellContext`popTogetherQ$$, 
            "Derivatives" -> $CellContext`popDerivativesQ$$, 
            "DerivativePrefix" -> "\[CapitalDelta]", $CellContext`opts, 
            Epilog -> {Gray, Dashed, 
              
              Line[{{$CellContext`qsdM$$, 0}, {$CellContext`qsdM$$, 
                 1.5 $CellContext`population}}], 
              
              Line[{{$CellContext`qsdM$$ + $CellContext`qlM$$, 
                 0}, {$CellContext`qsdM$$ + $CellContext`qlM$$, 
                 1.5 $CellContext`population}}]}]]; \
$CellContext`lsSuppliesPlots = If[Length[
             KeyDrop[$CellContext`aSolLocal, 
              Join[$CellContext`lsPopulationKeys, $CellContext`lsMoneyKeys]]] == 
           0, {}, 
           Quiet[
            
            SystemDynamicsInteractiveInterfacesFunctions`\
ParametricSolutionsPlots[$CellContext`aStocks, 
             KeyTake[
              KeyDrop[$CellContext`aSolLocal, 
               
               Join[$CellContext`lsPopulationKeys, \
$CellContext`lsMoneyKeys]], $CellContext`displaySupplyStocks$$], 
             None, $CellContext`ndays$$, 
             "LogPlot" -> $CellContext`supplLogPlotQ$$, 
             "Together" -> $CellContext`supplTogetherQ$$, 
             "Derivatives" -> $CellContext`supplDerivativesQ$$, 
             "DerivativePrefix" -> 
             "\[CapitalDelta]", $CellContext`opts]]]; \
$CellContext`lsMoneyPlots = Quiet[
           
           SystemDynamicsInteractiveInterfacesFunctions`\
ParametricSolutionsPlots[$CellContext`aStocks, 
            KeyTake[$CellContext`aSolLocal, 
             
             Intersection[$CellContext`lsMoneyKeys, \
$CellContext`displayMoneyStocks$$]], None, $CellContext`ndays$$, 
            "LogPlot" -> $CellContext`moneyLogPlotQ$$, 
            "Together" -> $CellContext`moneyTogetherQ$$, 
            "Derivatives" -> $CellContext`moneyDerivativesQ$$, 
            "DerivativePrefix" -> "\[CapitalDelta]", $CellContext`opts]]; 
        Multicolumn[
          
          Join[$CellContext`lsPopulationPlots, $CellContext`lsSuppliesPlots, \
$CellContext`lsMoneyPlots], $CellContext`nPlotColumns$$, Dividers -> All, 
          FrameStyle -> GrayLevel[0.8]], SaveDefinitions -> True], 
      "Specifications" :> {{{$CellContext`ndays$$, 365, "Number of days"}, 1, 
         365, 1, Appearance -> {"Open"}}, 
        Delimiter, {{$CellContext`aincpM$$, 6., 
          "Average incubation period (days)"}, 1, 60., 1, 
         Appearance -> {"Open"}}, {{$CellContext`aipM$$, 21., 
          "Average infectious period (days)"}, 1, 60., 1, 
         Appearance -> {"Open"}}, {{$CellContext`sspfM$$, 0.2, 
          "Severely symptomatic population fraction"}, 0, 1, 0.025, 
         Appearance -> {"Open"}}, {{$CellContext`crhpM$$, 0.1, 
          "Contact rate of the hospitalized population"}, 0, 30, 0.1, 
         Appearance -> {"Open"}}, 
        Delimiter, {{$CellContext`qsdM$$, 55, "Quarantine start days"}, 0, 
         365, 1, Appearance -> {"Open"}}, {{$CellContext`qlM$$, 56, 
          "Quarantine length (in days)"}, 0, 120, 1, 
         Appearance -> {"Open"}}, {{$CellContext`qcrfM$$, 0.25, 
          "Quarantine contact rate fraction"}, 0, 1, 0.01, 
         Appearance -> {"Open"}}, 
        Delimiter, {{$CellContext`nhbrM$$, 2.9, 
          "Number of hospital beds rate (per 1000 people)"}, 0, 100, 0.1, 
         Appearance -> {"Open"}}, {{$CellContext`nhbcrM$$, 0, 
          "Number of hospital beds change rate"}, -0.5, 0.5, 0.001, 
         Appearance -> {"Open"}}, {{$CellContext`msprM$$, 200, 
          "Medical supplies production rate"}, 0, 50000, 10, 
         Appearance -> {"Open"}}, {{$CellContext`msdpM$$, 1.2, 
          "Medical supplies delivery period"}, 0, 10, 0.1, 
         Appearance -> {"Open"}}, 
        Delimiter, {{$CellContext`displayPopulationStocks$$, \
{$CellContext`TP, $CellContext`SP, $CellContext`EP, $CellContext`ISSP, \
$CellContext`INSP, $CellContext`HP, $CellContext`RP, $CellContext`DIP, \
$CellContext`HB}, 
          "Population stocks to display:"}, {$CellContext`TP, \
$CellContext`SP, $CellContext`EP, $CellContext`ISSP, $CellContext`INSP, \
$CellContext`HP, $CellContext`RP, $CellContext`DIP, $CellContext`HB}, 
         ControlType -> 
         TogglerBar}, {{$CellContext`popTogetherQ$$, True, 
          "Plot populations together"}, {
         False, True}}, {{$CellContext`popDerivativesQ$$, False, 
          "Plot populations derivatives"}, {
         False, True}}, {{$CellContext`popLogPlotQ$$, False, 
          "LogPlot populations"}, {False, True}}, 
        Delimiter, {{$CellContext`displaySupplyStocks$$, {$CellContext`MS, \
$CellContext`MSD, $CellContext`HMS}, 
          "Supplies stocks to display:"}, {$CellContext`MS, $CellContext`MSD, \
$CellContext`HMS}, ControlType -> 
         TogglerBar}, {{$CellContext`supplTogetherQ$$, True, 
          "Plot supplies functions together"}, {
         False, True}}, {{$CellContext`supplDerivativesQ$$, False, 
          "Plot supplies functions derivatives"}, {
         False, True}}, {{$CellContext`supplLogPlotQ$$, True, 
          "LogPlot supplies functions"}, {False, True}}, 
        Delimiter, {{$CellContext`displayMoneyStocks$$, {$CellContext`MHS, \
$CellContext`MLP, $CellContext`MMSP}, 
          "Money stocks to display:"}, {$CellContext`MHS, $CellContext`MLP, \
$CellContext`MMSP}, ControlType -> 
         TogglerBar}, {{$CellContext`moneyTogetherQ$$, True, 
          "Plot money functions together"}, {
         False, True}}, {{$CellContext`moneyDerivativesQ$$, False, 
          "Plot money functions derivatives"}, {
         False, True}}, {{$CellContext`moneyLogPlotQ$$, True, 
          "LogPlot money functions"}, {
         False, True}}, {{$CellContext`nPlotColumns$$, 1, 
          "Number of plot columns"}, {1, 2, 3, 4, 5}}}, 
      "Options" :> {ControlPlacement -> Left, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1250., {541., 547.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.795608088133102*^9, 3.79560951145888*^9, 
  3.795615850052122*^9, 3.7956189334759283`*^9, 3.795618968404126*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"0cea5675-d8e9-48f6-8ebc-5a0404395476"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity analysis", "Section",
 CellChangeTimes->{{3.792452366394855*^9, 
  3.792452375114081*^9}},ExpressionUUID->"fa75a3a5-7d43-487d-b364-\
148946170b8a"],

Cell["\<\
When making and using this kind of dynamics models it is important to see how \
the solutions react to changes of different parameters. For example, we \
should try to find answers to questions like \"What ranges of which \
parameters bring dramatic changes into important stocks?\"\
\>", "Text",
 CellChangeTimes->{{3.7938981500169888`*^9, 3.793898366706668*^9}, {
  3.795100878325115*^9, 3.7951009087070827`*^9}, {3.7951010029921713`*^9, 
  3.7951010084895678`*^9}, {3.795170768961863*^9, 
  3.795170769413739*^9}},ExpressionUUID->"3fa476e6-c25f-4b81-938a-\
61386d613ebc"],

Cell["\<\
Sensitivity Analysis (SA) is used to determine how sensitive is a SD model to \
changes of the parameters and to changes of model\[CloseCurlyQuote]s \
equations, [BC1]. More specifically, parameter sensitivity, which we apply \
below, allows us to see the changes of stocks dynamic behaviour for different \
sequences (and combinations) of parameter values.\
\>", "Text",
 CellChangeTimes->{{3.795100957041679*^9, 3.79510099225432*^9}, {
  3.7951010555826406`*^9, 3.7951012603693237`*^9}, {3.7951708078860826`*^9, 
  3.795170818990569*^9}, {3.7952674087005157`*^9, 
  3.7952674126047373`*^9}},ExpressionUUID->"5c31c1e8-b741-498d-adf2-\
9fcfb5f6f36a"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " This section to mirrors to a point the section with same name in [AA4], \
except in this notebook we are more interested in medical supplies related SA \
because quarantine related SA is done in [AA4]."
}], "Text",
 CellChangeTimes->{{3.795267203227233*^9, 3.795267332345087*^9}, {
  3.795267370461293*^9, 3.795267417520308*^9}, {3.795565116175413*^9, 
  3.795565134212556*^9}},ExpressionUUID->"53ee8663-147f-4a6e-928b-\
74e299e74656"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " SA shown below should be done for other stocks and rates. In order to keep \
this exposition short we focus on ISSP, DIP, and HP. Also, it is interesting \
to think in terms of \[OpenCurlyDoubleQuote]3D parameter sensitivity plots.\
\[CloseCurlyDoubleQuote] We also do such plots."
}], "Text",
 CellChangeTimes->{{3.795013668211664*^9, 3.795013734981288*^9}, {
  3.7950137722199287`*^9, 3.795013833600689*^9}, {3.795101271957756*^9, 
  3.795101286098137*^9}, {3.79511302478135*^9, 3.7951130275656443`*^9}, {
  3.7951130929913597`*^9, 3.7951130951341553`*^9}, {3.795170834841874*^9, 
  3.795170836982407*^9}, {3.7952674414102917`*^9, 
  3.795267455164312*^9}},ExpressionUUID->"fab3ac24-b771-4dfa-9138-\
90b9af05879c"],

Cell[CellGroupData[{

Cell["Evaluations by Area under the curve", "Subsection",
 CellChangeTimes->{{3.795094196928739*^9, 3.79509419969566*^9}, {
  3.795099572888494*^9, 
  3.7950995891435432`*^9}},ExpressionUUID->"322a6708-59ab-4178-8b01-\
00901d59fc14"],

Cell["\<\
For certain stocks we might be not just interested in their evolution in time \
but also in their cumulative values. I.e. we are interested in the so called \
Area Under the Curve (AUC) metric for those stocks.\
\>", "Text",
 CellChangeTimes->{{3.795099265104815*^9, 3.795099342123198*^9}, {
  3.795103531561071*^9, 3.795103531942974*^9}, {3.7951708918581467`*^9, 
  3.795170954060261*^9}},ExpressionUUID->"8130e3e2-1ae3-45c1-b163-\
adc041e14c05"],

Cell["\<\
There are three ways to calculate AUC for stocks of interest:\
\>", "Text",
 CellChangeTimes->{{3.795099351000194*^9, 3.7950993678412027`*^9}, 
   3.795099401906522*^9, {3.795099483934515*^9, 3.79509949401252*^9}, {
   3.795170958773535*^9, 
   3.79517095917913*^9}},ExpressionUUID->"d8bbd719-d06d-475f-889c-\
fbd19a7f4177"],

Cell[CellGroupData[{

Cell["\<\
Add aggregation equations in the system of ODE\[CloseCurlyQuote]s. (Similar \
to the stock DIP in SEI2HR.)\
\>", "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.7950997001971207`*^9, 
   3.795099700199342*^9}},ExpressionUUID->"4150483a-6437-485e-bf7a-\
214aacf16011"],

Cell["\<\
For example, in order to compute AUC for ISSP we can add to SEI2HR the \
equation:\
\>", "Subitem",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.795099701048616*^9, 3.795099724178157*^9}, {3.795099781599737*^9, 
   3.7950997972372723`*^9}, {3.795170988007916*^9, 
   3.7951709880080643`*^9}},ExpressionUUID->"3e75b252-db72-4ddf-b802-\
f38b3c4373ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"aucISSP", "'"}], "[", "t", "]"}], "=", 
  RowBox[{"ISSP", "[", "t", "]"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.795099727908627*^9, 
  3.7950997723975887`*^9}},ExpressionUUID->"03fcbbec-3530-48ea-b79e-\
8c07e983a3ed"],

Cell["More details for such equation addition are given in [AA2].", "Subitem",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.795099701048616*^9, 3.795099724178157*^9}, {3.795099781599737*^9, 
   3.7950997972372723`*^9}, {3.795170993131672*^9, 
   3.7951710186244717`*^9}},ExpressionUUID->"736555d2-4ae5-46af-af7b-\
831082cd63ca"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Apply ", "Text"],
 StyleBox["NIntegrate", "Program"],
 " over stocks solution functions."
}], "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089781615912*^9}, 
   3.7950898214128323`*^9, {3.795099396483995*^9, 3.795099434599771*^9}, {
   3.795099497655407*^9, 
   3.7950995162761106`*^9}},ExpressionUUID->"d54313c6-bf96-4e5c-ae69-\
c7fa382e2d46"],

Cell[TextData[{
 "Apply ",
 ButtonBox["Trapezoidal rule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Trapezoidal_rule"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Trapezoidal_rule"],
 " to stock solution function values over a certain time grid."
}], "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089818577632*^9}, {
  3.795099437591412*^9, 3.795099465965087*^9}, {3.795099534164308*^9, 
  3.795099553158083*^9}, {3.795103565490394*^9, 
  3.795103567167635*^9}},ExpressionUUID->"2f74d354-8d9f-473d-9254-\
7970ac23dab8"]
}, Open  ]],

Cell["Below we use 1 and 3. ", "Text",
 CellChangeTimes->{{3.795099626944916*^9, 3.795099637114786*^9}, {
  3.795099900693989*^9, 3.795099903001273*^9}, {3.795100792496642*^9, 
  3.795100828423191*^9}, {3.795103515112382*^9, 
  3.795103516465373*^9}},ExpressionUUID->"92e39b1d-f363-4c33-8cb7-\
9c0839f34633"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of medical supplies delivery period", "Subsection",
 CellChangeTimes->{{3.795535285338819*^9, 3.795535298557781*^9}, {
  3.79556301816439*^9, 
  3.7955630264896393`*^9}},ExpressionUUID->"ef0962fe-96cd-42fc-8573-\
979b7c102348"],

Cell["\<\
Here are calculate the solutions for a certain combination of capacities and \
rates:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 
  3.795565309003253*^9}},ExpressionUUID->"654c6fb6-1cb0-4253-83b2-\
30866c708057"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "msdpVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", 
           RowBox[{"SEI2HREconModel", "[", "t", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "100"}], 
               ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "100"}], ",", 
               RowBox[{
                RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", "msdpVar"}]}], 
              "|>"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"msdpVar", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Union", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0.2", ",", "1", ",", "0.2"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "3", ",", "0.5"}], "]"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7955935868246117`*^9, 3.7955935950171413`*^9}, {
  3.795593636561391*^9, 3.795593641360437*^9}, {3.795593734283461*^9, 
  3.795593737083794*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"20327822-68ea-465e-8404-9f2545053f7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.236766`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7956080893248367`*^9, 3.795609512753903*^9, 
  3.795615851697345*^9, 3.795618934817256*^9, 3.7956189697155867`*^9, 
  3.795620074447352*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"9423be21-e1ae-4b5c-9d0c-35896da1c53f"]
}, Open  ]],

Cell["\<\
As expected more frequent delivery results in fuller utilization of the \
non-occupied hospital beds:\
\>", "Text",
 CellChangeTimes->{{3.795565395213928*^9, 
  3.795565443858611*^9}},ExpressionUUID->"4aaaca8e-f7f9-40c5-8b51-\
589a178f3b4a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "23532", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "<", "1"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"120", ",", "150"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"160", ",", "260"}], "}"}], "]"}]}], "]"}], ",", 
          "Above"}], "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, 
   3.795602036468244*^9, {3.795620035930011*^9, 3.7956200683485603`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"4d587de6-93d7-4a2e-938e-e7927e3c21e7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxd2HlYzWkbB/BDRREtQiZexxKpaKWi9JVUkjrtK/06dWraz07ejIMxMYbX
UsIUB9m3YtIQOU1jK80UjdeWDo2xDWKkkPFe7+WO5jn/nOvT93yv57qv/nnu
Z5QwO0TUm8fjZfXi8f7//fHT5sn75weaDR2DvR5L6e/62G7besh19XqyMXya
X1/ckLCTbIYREZXhLWuOkM2xZ1XRAk3KCfJw/Px22eYQURWZj5xd1m0P19aQ
R6OTn58jcr9IHovG4UtDVzvWk8dhvJZv0jC5kWyFu6eeHzZ9eZVsDbNecVV2
9dfItgi7JP+56/wN8iQcs7no2NJym2yP1mnF56IMtWQHrEn2WR558i7ZEaHc
6rHHFrSSnbB+qKVuiN99sjOaoyNjPW0fkCej4E79nG1jH5GnoE2Wc/GQ4xOy
C3beexNfHfmU7IoyB6O5/gXPyW44lRdYlvy6+/8wFUWbD+q/sntJnoZ76cOa
xy/8i+yO0WYHJj769RXZA5kPgitsXF+Tp2O3jYO0rayD7IngdCdbn+lvyMDC
LV2O/nfefrQKCNmSM3DCxi7KZ+DOpsLZI+f/TfkMZN/Isfbg8/Ax98KKxuKj
l0f0+miVF6pP5ExZYNWb8plYptf1/QfoUD4TgctPOjl9qUu5N5xHu8Y93qZH
uTeepk0cbPBHH8pn4cOquiNLputTPgt9zoiT5uw3oNwHPxye6bhgfH/KfTBg
gzBv+ClDyn3RvrlkYJJwIOW+WPH8RECNsTHlfhh79WJXchdZ5Yei7efba1+Z
UD4bqf/Syd/z1pTy2XhVl2tXOdCMcn8UidJKmxwGU+6PXZPXDa1NGkL5HNjO
arT9at9QyucgQZVnoX1vTnkAOt/3N/9T9AXlAShcfMv60F0LyueirMDqD1fp
CMrn4oj98EmnzEdSHggv9y1Gzul8ygPRlaLXNitiFOVBcBl8YDYCR1MeBEVu
vuPN0DGUC7BtfUZVU8rYj4YA4ZP6rn33rSX9XoASc0ORZdW4j9YI8MSq+Cfn
3lbUD8abm7+pzKMmUD8Y527Zqi5rrKkfDE1ITXKMhy31gyHr9BLc/GUi9UNg
I6tVy5R21A/Bu5avW49stad+CKKSPQvF3zhQPwT9PHYZ2S5xpH4o+nbpNBSu
cKJ+KOq/mxEg3+pM/VD0T3QWfVc1mfqhGJVf0l7+cgr1w3D/1uXMKy6u1A8D
1uhm/LrWjfphWLTGPmFv51TqhyFjhNF0odKd+uFw2O1jNcRgOvXDYZBS4fqw
zJP64ZjhZ7ejz0lQPxz/6v0sWLR7BvUjUL0o6D+V27yoH4Ffrk1uPbN7JvUj
EJWak21d6U39CMSqDRWXWmZRPxKNHRFNmWa+1I+EDUrz26P9qB+JXnNnZvuX
zaZ+JE5kGUqFFnOoH4WO+vrN2BJA/SiUGKoj2m0CqR+FdMsnwu1NQdSPgqko
0GFKrYD60TB5GHgh4EQw9aPRed1hxtSjIdSPxn/bkt8dLg+lfjSqLfyCuNow
6sfgdd+d7abPwqkfg6WW5xeuHxVJ/RgM6ry/r0wURf0YnD5XNCCsMpr6sdi8
OD8qaUws9WNxzuBx241tcdSPxVHX1rQfJ82nfiz8EhveGzXFUz8OW92tB364
wFE/DhGR/357rSyB+nGYEmPwle0+IfXjMDSz5viug4nUn4cP+ZvTHp5Oov48
hD2Wi47cFlF/HlJsq3aU9U+h/jz8kf1iwwn/L6k/H1eW5eZ+uzWV+vPReu3M
fp2uNOrPh8uDvw72EmdQfz4c7IcVZXZkUj8eonk2sVM3ZlM/HoqFguTRO8XU
j4f2Q3nh71YS6sfDxnXv3fwoMo9D4emnlopUMp9D6sqa3lnZZHA4b7Fcf7WE
zHEQm6Uu9peSVRwGTC7A2m6rOeS3ek/b020NhzMhX5Qf6baWQ7nurfKybvMS
sNQj8/yxbvMTwDcNH3e820jAY+9gv0/mEjDoaXzYJ6sSYPC6KOqT1QlwqB4e
88maBJguK/lsbQIm1jR9Nk+IDRX3P5svRMWxJ58NIfQbn342J8SY9c8+WyXE
yqYeVgsh+rOHNULcfNXDWiGudPQwLxEtnT3MT4Tnmx5GIrie5hKR2dOqREh6
Wp0IaU9rEiHraS1jXtI/zWcMxhxjFWM1Yw1jLWOeiDmfMRhzjFWM1Yw1jLWM
ecnM+YzBmGOsYqxmrGGsZcxLYc5nDMYcYxVjNWMNYy1j3pfM+YzBmGOsYqxm
rGGsZcxLZc5nDMYcYxVjNWMNYy1jXhpzPmMw5hirGKsZaxhrGfPSmfMZgzHH
WMVYzVjDWMuYl8GczxiMOcYqxmrGGsZaxrxM5nzGYMwxVjFWM9Yw1jLmZTHn
MwZjjrGKsZqxhrGWMS+bOZ8xGHOMVYzVjDWMtYx54n/amDGfsT1jMBYw5hiL
GasYrxNjkZfD1QWf5hHja0XcuOoMcqkY4yqT8+7Hd88nhktjoGxVALlBjMMV
S1/PcuqeV4z6tW4Z+83IbWI8619o6vqC7kc8CYabXD+QcYlsLIGLmVHQyWIy
X4LVi89W5GWR7SUoi3l0282dDAl+l+vvs+5LFkiwNb9YELed7mOcBF8N1QkZ
a0sWS5B/29LEozyL5pdAo2dbYjONvE6CvBa7w2lVdL9TSzDzkolvuie5VILS
XTa1BVXd90EJvmt2meDvTm6QoO1FXIX2x3SaX4LghLvLDziT2ySYNG2E7suj
dL/kSbE1zTzlnTXZWArdq34menvoPsqXwiZmUJfvKLK9FCHZ+RM6i+j+CimS
CkUPvIeRBVIMyrruHL2J7rucFL4jd/WNMyOLpaiZu32jeGMyzS/F0V9ReGIQ
eZ0UayQLN/kX0P1ZLYWnfomxjzm5VIqSLTvOnS2i+7ZGivTv97TWjSY3SLE2
Kck59wDdz7VSWIlNfbVO5DYpCoVL9uqdFdL8Mlw36fe2Yw7ZWIah9XaW1Tfp
/s+XIbc5SpKaTraXIfVx44GO9937ggxLfQZCsoEskCHoh4zYm1ZkTgbfM5M6
05fRviGWocJjs6VhBe0jKhlcjEaPK3w+j+aXIbj+lyEDbMlqGeYNup+VkUH7
TKkMt92Cxh0rpX1HIwNvZF3Tjc4Yml+G8IqAq83eZK0M8RbHoyryaV9qk2Es
P7Fg/kPap3hymEqq62o9ycZyJGzgUl9upf2LL4eDs8ii7k0EzS/Hyr/H35sd
R4YcY/b/Nj7xJ9rfBHIENksv97Mlc3JMd0hxd95C+55YjgjDqkVXDMgqOQYs
HWJ3fTHth+vkGHIh7keXdtof1XJoIo3sWrPJpXLs6NeSe/lpMM0vR9Ugs+j7
WeQGOfbWeMaN/Iv2U60clhsrdDIWkdvkECy7c/a0bvf+qsBZiyktemNpvzVW
oMjf5Vm8N+2/fAUE3+amp6XNpfkVMJjQbK+/qXtfVuBga1/74RdonxYoIBtm
//Wq9/40vwIzF93NdnIjixVYw7PKfp9D+7hKgajOw251Z2lfX6eA2d9j6lX9
yGoFgtJGpfeOof2+VIEXZRb7nY/40PwKvN9cmdnVh9ygwIr61pfTk+h9QKuA
vHLBb3fP0ftBmwLCouV6dTZknhKT88bf0xbQe4OxEod2rxzZT5fMV+L4KYc7
E5VeNL8SeVPKS5z+pPcLKFGsqxHpJJMFSjwqPiNf0UrvHZwSpRHC4p1JZLES
m7wOGa+80v0+okT71ID9e+7R+8k6JVab1g9UvPGg+ZWou3fB/uIQcqkSoZlv
axRT6f1Fo0RWoXNSWNI0ml+Jn74pXTItn95rtEqMco+I0Kl1w/8As7r1tQ==

            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {1}}]& ], 
         "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxd2HlYzWkbB/CfwmTGTEeS7CeytKBUUlTf9iR12vf6tWmROjtjGUczY2YU
aiL0khMvYkg01kxOMvY1jTHGcjBDapASytLrvdzRPOefrk/f8+257qt/nvsx
ScwOStHhOC6rB8f9/+f7T7ML9+8PSsxLl7o2Sun3ehhbprduSm4BWQD9tvNV
PyZsIhsi1blx1O3l5WRjrJgfF6lJ3U8eivK2s4uDUqrJQixxbf27YUUteSR+
/euaOGXaKbIpxpbenZE76Tx5DCweb/38kt1l8jistt6/w6DlCtkc1cMTqiae
v0q2RKX+gprXJ/4gT8DAB08m3r59g2yFZG7M8Yi+WrI1eisVS8IP3SFPQoGj
0ai9c++RbTAr55ROkM/fZFvYSVsjXSwfkO3gUrPZq8T0IXkyAgYJandOaiLb
Y/D0uoCa8EfkKVgQVerou/oJ2QHrBxVtn/W86//gCLeH6S9aJ7aQp+Jp/d6z
Y+e1kqfhgerroQ8vPiM74YRg7haLKc/JzrixahPfvOcF2QUb7wwa6uXcTgbq
mk3NfW91vLcKEHht6GlW+JpyV+Te+wYj4t5S7orKzjtjnYQc3uduMP1vesW5
YT3eW+UGg4a7VnPH6VDuDo9R0YWd0KXcHS8Xz7GwSetJuQdSf20PayzpRbkH
6q7OM+pzvzflnih3DN+52FmPck/0mhzCz9jeh3Iv+C+xGj937GeUe6Hvs/k5
Qw/3pdwbSZqn/ZITv6DcG2WtawJrBQLKfeCWGvV21muyygfpjZUvzjzrR/l0
GBb7Fm3tMKB8OtzEI+yqvjCk3Bei/MpD9dYDKPdFwA/FJmeSjSifgZ7HH9p9
VTaQ8hlwiS8z0b4xptwPOGZq8k/KYMr94K3fYr/zzhDKZ6JoMlqnSIdRPhNO
e2VTDhuPoNwfdQdK+9vOFlLuj2PL1rZ6hplQHgAdsw3+8B9JeQBu5SY6XA8e
RbkITbVrT9Snmr43RFhc37j61bLR9H0R8h6+yhxdPea9NSJwI5zP2OqMo34g
cndt/N44woz6gZhcOzLvnMac+oHIHvsfaZSTJfUDEfHljvDrF8ZTPwgFQXPL
ZMqJ1A9CXcKyB+XFVtQPwtm0pevFS62pH4Ss4CwDy8WTqB+M0IeedWu+taF+
MMwG9xPJi22pH4xxa3RT86rtqB+MwB+jmva1TKZ+CHJOVCnr7KdQPwQ/Z3gr
Lq5woH4IbGpqMra9dKR+CPgj0T6JymnUD4VR6H1boz7O1A9FpdWfPg17XKgf
isyO+WW9D4H6oTA/8DwiZYsr9cMQdLepqKrEjfph0HW+3vDLFnfqh2G42S25
eZUH9cOgGDF+wenbntQPR2qs+fU5ht7UD8fyp8o1bZE+1A/HoqAkqe+e6dQP
xz67lYrEITOoHwFTVVER1vlRPwLXzh+PaLPwp34EGnLfpGysD6B+BI5WbZs0
+YyI+pFw8Xx7ym9/IPUjYfKpkZvj7iDqR2KVNvL1rn3B1I9Ev8yD/vyZEOpH
YY7diFaDx6HUj8KVwIB5BSbh1I9CW9jcn/akRFA/CqL4TP2QqkjqR2P7huLo
5FHR1I/G4S0BrX+UxFA/Gir5o7SDE+KoH41BSVc69OvjqR+DBQKBfudJnvox
CLvX2Xl1TwL1Y7A61/ory7JE6scge93Yys0/JVE/FucmFmQ0HEmmfiwst0qT
y2+kUD8Wx6dmrd/zWSr1Y+Hf4rV8v28a9ePgcH/TvGXF6dSPQx4qtui+zqB+
HG6e+GpbD3Em9eOwq2JFyZwXc6gfjwkOL3nHwmzqx8P4N9vF40vF1I9H1Ak3
z+XjJNSPR8rCa68UEWSOR4ey2S4jnSzkodnbYJKRTQaPs1d2bv9BQuZ5lMyu
6eErJat4VFva9F/RZTWP0uHXzLZ2WcMj0vVGRXmXtTySTTWVe7rMJWDpvcbj
e7ssTECTTDO6sstIwFb7/j4fzCdglIF7yAerEjD6eWHEB6sTcCdvUNQHaxLg
vH3zR2sT8GZC/UdziRA7//XRwkSE+DV9NBLRsevRR/OJuKF6/NGqRJy90M3q
RGQ0drMmEUOedbM2EStedDOXhJMvu1mYBPv2bkYSYrubT8Ls7lYlQdzd6iRI
uluTBGl3a5Mg624u+d8WMgZjnrGKsZqxhrGWMZfCnM8YjHnGKsZqxhrGWsbc
LOZ8xmDMM1YxVjPWMNYy5lKZ8xmDMc9YxVjNWMNYy5hLY85nDMY8YxVjNWMN
Yy1jLp05nzEY84xVjNWMNYy1jLkM5nzGYMwzVjFWM9Yw1jLmZjPnMwZjnrGK
sZqxhrGWMZfJnM8YjHnGKsZqxhrGWsbcHOZ8xmDMM1YxVjPWMNYy5rKY8xmD
Mc9YxVjNWMNYy5jLZs5nDMY8YxVjNWMNYy1jTvxvCxgLGVsxBmMRY56xmLGK
cb4Yw72ajs39MI8YoqCcZ5pMcoUYgjONdn/Hd80nht/Q4Xo/+JEviZFU9d18
T5uuecWwn5j9e5khuVmMXobZyfZP6X7ESSDYPPjp7NNkgQRXn4xbeHADWSjB
6wGll5dmka0kkD/XeTFlGhnvvq/35z6zT8giCV5N+iQoaiPdx3gJjvmo7Uda
ksUShO29/txxXxbNL4H3oSEqs6nkfAkcS2KWplXT/U797u+vqx6W7kKukMDU
JmZNYXXXfVCC48uOt3pPI1+SoHd7+6JbB2fT/BJUNxfMLLMlN0sQrHfg/JPd
dL/kpJh/+uqEdnOyQIpTuZeu6Gyl+6hQigHVoTWeJmQrKR4YTn/Utp7ur5Ai
Ishwt9sgskgKT8n5zrAiuu/yUiwVtl2MNCSLpdiXjeiswlk0vxSvPD9P/bk/
OV8KwwWLMnxW0/1ZLUXLRqcmd2NyhRS/2xaV/bKe7tsaKZ566F84PZJ8SYqA
HXdM5++g+7lWCnNdzuWWDblZiiXDnbfqHk2k+WXQrl37tm0GWSDDwsjUCUev
0/1fKMOp3ak5qbPJVjI8n5JU2/ama1+QQTRCwWf/SBbJkN9o8PW1cWRehqsv
dCLScmjfEMuwrG5Hod4B2kdUMlwOqdhc+CSW5peh7yrN5j6WZLUM/it/6ZOe
SftMhQxTW3QvlFfQvqORweuKTd7Vl1E0vwxRBdeKr3uQtTKUpgVa/byK9qVm
GZr9/1kY3UD7FCdHHne69qQLWSCH4eTFkifFtH8J5ag7PMPmVHsYzS/HBeO/
+njHkCFHqumqOP4Y7W8iOY69bDfQsyTzcvSSrSiwXkf7nlgOVL6+ebEPWSWH
jdfwTb8tov0wXw5u2EAHuzbaH9XvXHG/WptNrpBjTKfXoDOPAml+OYIGy3Tu
ZZEvyTHAWmUwrJX2U60cJ786cTJ9PrlZDu/MtSsP9+zaXxVwG+1W3MOU9luB
AgsDlmuiPWj/FSpgjP3hszJm0vwKOL8qmNyzqGtfVqDXN1UBxidpnxYpYK87
oOrbN740vwKxae7VEx3IYgUWDXxc3/4l7eMqBfry1/afPEr7er4Cpis/5Rd9
SlYr4KF/07Azkvb7CgWcjixLsy73ovkVyDpi6drem3xJgZbvd/85NZneB7QK
eLqLL9/6ld4PmhVI2bLN6JQFmVPC4nMn3Vur6b1BoESOJi/wk55koRJHOixG
WijdaH4lOr878crqH3q/gBLz6nef42aRRUpcGHrzUc49eu/glajxOWT6bi2g
+ZUoy69w/bqu631ECTe/LztK79L7Sb4Sme7qHHG7E82vRHZxek2tEbni3fed
vpNLHOn9RaME9p60EyVPpfmVUHtOz7JfRe81WiVUbfsSO0874H+TEwZr
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {2}}]& ], 
         "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHtcjPn7xqec6dvGFhJ2lJBjThVRV0Uqqek0HaemmY5TTXPOshhbdi1i
Yp1XBlvYiFiHHDJyDqtszlmTY5L9zlLYEj+/lzvP851/er275nruuT7PZ565
788QUXZosjmHw5GacTj///fzy+TJ+d8XYH97l1ejgv7fHeLYwhNuywuIrVBd
ElyzOnE7sTX2VVWFPMgvJe6Phq7u6YbUw8QDEda8enlocgUxF0rr+Y0NK88Q
2yNU85MqedpF4qG4cndu0PIJV4mH4fKCIsvqyTXEI9CQOLekz6s/iUdi29bm
4+Ou3iQejesLBla+P3+HeCwCdY7ODx7UETtj3UW3s1EWRuLxSKu+sDiyvJ54
ArZsDHY4kPOIeCJiJjh3CvV7QjwJZvJH0Z6jnxFPxv3yFt/Coc+JXVDLLajc
M+EFsSty6rjBpyNfEruhKLXT1IC1/yWeggJf3u6UNx33YSrSMyw4zeNeEbtj
1cwntcPnviaeBvdhHx2fX2smng7rRW9KR7m9IfbAli4W6aayt8Se2Opw1t7X
41/Pjtub5ytwCvir9TNrgVPL3Ds7rXlPuhceZ4k9v4n/QLoXvjMTO0zncvBZ
90ZQUm7RlUFmn1nrjfkjx47OGWFOug/+aRq8+CM6ke6D0nKR1cS0zqTPwGTp
lumNhV1In4HTJzeb93jalfSZ0OU+WLPIozvpM2EmvTFl9u4epPtCfnaVbc7w
XqT7Irp4lGTgMQvSZ2HwczuTWGRJ+iwsHTZz2hkrK9L94B90+XnKe2KtH1zL
muqrmnuT7o/QFe0Li1v7kO6P2Y7htsctrUkPQHlo3k+1421ID0D+3cDmS0l9
SZ+N0Oz1Fgt39SN9NiQ639YH7f1JD8SkpJT/vkgeQHogBq6u77Kn3o70Ofh9
W/EJN8Ug0uegsPWQ+bH+35AehKWdM1onZnBJD8JAV5tbM/lDSA/G66JBzgiy
Jz0Ye7ud7nc3zIF0Hlr+k/pLberQzwweBuW+FLctc6T38+DwuM7FsWLYZzbw
MOHFjZ8nmY8gfwj2ZS2O7h/lRP4QvJuxjX/FMJL8IeB2+3VKzPTR5A+B0jmc
e/ePMeQPxdy7jjKlZhz5Q+Fy9GZV6SZn8odifG3sD7IfxpM/FA8dTK2jFk0g
fxgqty07tn7JRPKHIXm432TVpknkD0Mn3/WzV1RMJn8Yjily7x565UL+cBg6
+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
OkHnLDqvMWrg5DVH/3THFPwfMxaxbw==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {3}}]& ], 
         "0.6000000000000001`"], 
        Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHlczPkfxyetI0LOWFeodOpQSUqvUqFL19R0aZpmmq5p7lGy9LOWlhA2
1pUhCT/ZCotaDJYlV85WjnIt7Y8tbTljf/0e3uP7/fVPj2evz2te3/d8P9++
7/dnvEAaIerB4XCyDTic//3+/NPmzfn/H9TEH1zj86eC/t4H4lofkfvKtcQm
mH7QULwueSfxUPT+bkFW06oDxCOw3H5+nk78M/Fo3JpsvzlCdILYDGU/BrY9
X32GeALWj6zOFXmeJzaHwafciJXOl4kt8Xin1KTe9RqxFawXDa4Y3H6D2AbH
LbKPO1y+TWyHb715Z7rO3SGeDJ3jcqempnvEjpDaP/uVZ9xM7ASPBUlLYo49
JHZGzzaOefX8x8RTYHjvL8OI2U+JXTDNsW+8t90zYldsXTVmdol5C7Eb1ieX
ndnv/B/iqagaMyfsVMxLYnd4zw2fHljcSjwNowPmlae+1t8HD1TuzTDocGgn
no4u479vT8r5m9gT9lXDJ7Vc7SD2wt2W0F227q+JZ+ClR7WoreoNsTduTJ9v
GTDjHTEgW9HfKfDB+8+cDyj/PaCn9fou0n0w34vrNm7eJ9J98Krt+SgvMw4+
6774z4CH+y+NMfjM+b6IXjfXYb5VD9Jnomxb4dp/YEj6TOz74aLVlLSvSPfD
xdDCsD9LepLuh9YIu15Gf/Qi3R8rYsduXzyjD+n+eDStmRe014j0ANR2RljN
n9SP9AAM2ROoGV1jTPosuJ4Z2FsoGED6LNwtWO95xsSE9NlwPbn9cWoXcf5s
jPTlN9d1DCJ9DhyWjCnY/X4w6XPAvbJ+fO2AoaQHImBf67qbTsNID8Sy/P5G
dcLhpAdBYL519KI9pqQH4dypgX2aP44gPRhPZm766oXoa9KDMXn4N8P2PxxF
egiKH1pdcVeMIT0E3KdH+tWMGEd6KHwllR+mZJqRHopsXfnv/tHjSZ+Ll9xR
zgidQPpcLGw4ObIxciLpYZiIZ6U3xeafGWEwqKhY8GGFBa0PQ9vrrWEWJyw/
sy4M5+sa9rn0sCJ/OF6kBaeN4FmTPxw7DV0Fl3Q25A/H9XiVX5yXHfnDwftR
atN4xZ78EWhNKV6o1DiQPwK8J+H1BzY7kj8ChvZNS2TLnMgfgUi4vLFd7Ez+
SAwb5/Tzxu+mkD8SGXnVjqrNLuSPhNvtUwGFJ1zJH4kG/+xbh9vdyB8Fv7l3
gq5PdSd/FLar+sy+unoa+aPQEDppevlbD/JHYUvemWECjSf5ucgRjPk0zGgG
+blY8pul8fMqb/JzcSg66/tex0B+LoxPTXYXlfmQPxr93CwUtSW+5I/G0Wcb
fz1eNpP80ZB0HAy3qfUjfzTqV3/PvdDkT/4YmGPIbsnQWeSPwUDdXFVn7Gzy
x6DH29+8A6vmkD8G3/jWOAhGBZGfh93X3oRiUzD5eVh8+atRnbah5Oeh8M1T
i+0355Kfh728R73c6sLIH4tFuz/tCf45nPyxWJUcYObxUwT5YxEjrfm94nAk
+WMR0Bljza+LIn8ceJviLg3+i0v+ONzrWR+ydnwM+ePA8e7MrRLxyB+HguqX
jZG1seSPx5N7toOEE+PJHw+DY5En75QkkD8e18LaBh+dPI/88fA6al0z8GYS
+RNge3Jx29JzfPIn4H67WWRcSTL5EyAdntz3nURA/gTcs5v0dZVrCvkTcV21
Ou9qJzES0b7ro3vJASH5ExF8QVwo5IvIn4gR6755l9ovlfzzMOdaZdqzn4gx
Dw2b38MiVEz+eVjK91qU+Aexbh4alw69WJeTRv4kGHwt3VDWM538SShakWNt
voo4Pwku3y/6ZcHADPIn4UEFb9XdQmIOH9zMyBZNz8zPbMaHS8Oz4LxcYvCx
8vUi+bAWYj4fNvzQeFlUFn0+H30tTMWHa4m1fPySdpJvPE5CeXxMONWwbssi
4mY+7Iqtbi5vJOYk48PwXUUdztmUn4y3z8wbDQuIkYzSfQdyb98h5nfrHer3
K62klJ8Mxx7nqn1VxNpk/Pv+/Eumx4l1yZAmzKlYbyCj/GQ4OXU6BEwk5giw
3UWdUTmT2EwAk4u6xgcCYgjgW5/x3f18Yr4AIaqT745sI84X4OCNf0XnHiPW
CuAtmBxqd5NYJ8Due9dt7r7U5wvwNHjN9TW95JSfghLZm7rIscRmKRgy+oSn
oysxUrB/QMQb+yBifgockjLr/PjE+SlIO+u+0j6LWJuCVKMKmVBGrEvBjb2r
vB7JiZtT4Gh3NC5doc8XInSlwHaTns2EuJdwc/g+PUOIGQ05Qyv1zBdice/9
TtV6zheiND/v1RfWCsFrWO16UM86IfwvVoR84WYhxhY5Rn9hjgjGZ71iv7CZ
CP4/ecV9YYjwQaRjuPs5uvHLvvgvnC9CnqmEYa0ILutFzHqdCCtyNzB6swhH
wpYnMPmpcC4wYOWnwjfqNZfJT0XCi+OJTH4q6prqU5j8VDSNtmTWa1Px5kfz
QCY/FT/dXRvD5Hd/XqURwxwxHgh9mOszE0Nl8yOrfjGGhHax6hfjSMc7hvPF
6LNnGlOPVoy+MxtZ9Yth2fsew81i/DKkmMnjpKHir7us+tPgnZzIyk+Ds/8E
5vP5aViYc5vH5KfBtquQ8Wu7/y+VCpj1ujTky2JY+WnYU7SMlZ+OhhANo5ul
Q7dbyuhIh/b0Jlb96XhqPpt1/9Nh86CQ0bXpSHpxhbk+XToa6yWs/HSY+k9i
5Wdgg3UGs94sA39UX2flZ+Db4YdZ9z8DmTk2zP7Nz8AOy1us+jMQYFTOsC4D
VjxT1v7LgPGZJuZ6OJkw92xl1Z+JJR4DWfmZmPGJyzA/Ezfui1n3PxOZ74pZ
9Weizvkks16Xib4lE1j1Z6J50QVWfhaebh7K2n9ZCPqoZd3/LJg8X8PKz8Ko
vTVMfflZOLGjidnP2iz8c/M5a/9loaXFllV/FlaIW1jPvwQy9QPW/pNAUjCG
lS/Bi46HrPsvgdWNG6z6JfjmFWu/ayWYUGvLypfAg/snq34JPsKI9fxnI7m/
Iev7z0aPkAbmepCN1gGXWfs/G34Vl1j52fhrSgrr/082shubWfnd6397zMrP
RqG8jfX9S3H87DNWvhSHTVn7AVIc0LF0vhRxn9xY+1+KLQ6OrOe/+71nupfZ
rzopigyuMNwsReLWTNb+l0GYXMrcPxMZQgdGs54HGeQLVElf2FEGV5ef5zHX
J0NA2TwmP0yGg+XTWftFBu/dJgzLZLh17gXr+5Nha+2T0K16LpKh43T2pmKJ
vh4ZfvgU2j82mbhShsMhWm5hqL4+GSY+Kv71gv59WS/Dfbf+V7Sm+npleKsp
PrChg96/bTJUVxraTrqsf//L0duzxfrsDmITOVKGl/vdVej7ATl6jTolvgRi
RzkOzDS69nc/fX8gR/j2zifBe6nfCJOjTnRijciNuPs9vWPOW9PTJ6l/6X4v
R7Vut2jxJ86XY9UPh65zL1A/VCSHyewu4YJAYq0craYRlroL1F9VyrGksFSx
fBaxTo5Xy9Z2Wv9K/Vm9HGfthLlvvYmb5ZjpmjPJu5b6vTY5ckIOH/Bx0/d/
Critjm33rqJ+0USBhlvblyvsiM0UuDj90pEBe6jfdFTActZt1UxzYijwfEtr
o+cO6k/DFKhev7Rg/DhivgJlVef2Diuh/lamwFXHxdXuY4nzFcj7EPSmfDv1
x0UKfDpUcmLhBGKtAhmz3mqu7KZ+ulKByIXtplV2xLru9S8vfnQ7RP13vQL1
zo/WSb2ImxVQeZ5vTDsvoPoVODEiJHYyl5ijRO8jFrF1j6nfN1FibJBhX38V
sZkS57dEryjrReyoRKpzssurzfp5QQm3tRKVnRNxmBL9vunIPbSO5gu+EsJE
m5R352j+kCmxMbE11/qfRKpfiSU7fO39pxMXKZGyrPh5YB7NL1oleEuVj6ae
pPmmUomXD0z39+5NrFOifNv7y4ci4qh+JdaHuCx030nzUbMSDbqRfVd20vzU
1n2972JrSoOJOSqoHx8YnFtO85aJCs4Wd05xehGbqfB29NM7DmnRVL8KR5aJ
z72/rJ/XVGjyKFBypxKHqVCvMps7ZRfNd3wV/lCeTV4+lFimwte7vo3xK6B5
MF+FQz2urU74h+bFIhV6lkVZnM4l1qqQEJXNEb+h+bJSBW5e3F3PHGKdCqu3
9Qx27aJ5tF6FHS8a632+JW5WIXFuv5uR/YnbVHjsOSv7mAvNsxw1BhVNqdgS
RfOuiRq/x4WYOy0IofrV6DOiuDShjOZjRzU2domHGtym+Rlq9LQVFhgYE4ep
cfFlh7vPrECqXw3pmfCtpctp/papcezGhnjjy/r5XI2lo5dkJ5kSF6lh//HP
3v9KpXleq0bXxpKj3JoAql8N+TZexOnBxDo1+O9KB+2X0nlAvRpmI3vlvK2n
84JmNeY0rVu4yo24TY011x8khmvpfIGjwaFDZ363GUBsooFH0sf2/53jfa5f
g+jApKm1nXRe4ajBkTbLBT5SYmgQGntn5MIXdL4RpsG65zgRKSHma8BvHeSR
8pjOQ2QaHBw1Mv1TO52X5GvQ309hGaI/PynS4Ni4tWPNLb2ofg3MC16Pi51D
5y2VGtRIjq44rZhO9WuQOMn76tSddD5Tr0HYd6v6r22g85tmDS4YtQeVD56G
/wLMlpWp
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {4}}]& ], 
         "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHlcDPj/x0eUDhIqV7Yi5OqQ0SjVK2eXGh1UKtMxXdMxM81M7VqMVhZh
ybXYDusIhWqRJCa1bm0J6wijHGkdlVLK8fV7eH/++PVPj2evXvOcz6Np5v3+
mEck+wo1OBxOUh8O5/++f/9qdeH8/y9EVP3j49oipZ9ro/TXr2t4mVuJDXDk
Yf/fssL/JDbE8hy/fk82HSceDquRoWJVzGliEwQVlWz1FZ4nNsPLgkFvmjdX
EY9BVoVTqnDWFWILTNIt5GdOu0k8HtN3qgbVcuuILfH7q22FQ9rriSehM9eo
wvrmXeIp8NC2qPp06T6xFUy58bZPnjQQ22C4ZmN14AA1sS2WmYWkLyl7SjwN
Gnf1LEpSm4jtoDu1u6+v23Pi6bB4ZrTUZcpLYi5OgueWY/GKeAY0j12uKpz2
H7E9xr2K4lcueUPMg9+FaEePHe+IZ+KlKjA/+gP7OzjA/45Xnw7rdmJHPHed
/e+EtPfEs9B1P3TCq386iJ1gEXj1wGTeB2JnpF1BTGtxF7ELbDS1LOc7fyQG
RE6vbDwe93xnJRBluKfvxG2fKHcFb6IJ1zTsC+WuuNrUNcrJjIPv+Ww06HUV
3hjd5zsrZ4P3IsY61VKD8jnI1jm29Sv6Uj4Hi2RvLe1i+1E+Fwd2neO35GhS
PhcVySO0dF5oUT4PLsMac1Y5a1M+D096qgI9j+hQPh9rXSssUyfoUT4fWYUX
U03ODqB8Afx0g7WiIvQpX4BYF+NZVQYGlLthvVV1U/QnYqUb+h7xeXqtYzDl
7uDznq471DOEcncMKnlrVq5vSLkHPA+GZt22NaLcA+qx1jrXoowp98Q290qT
lYeHUe6JBb0x2urPwyn3gr3JqX6vhSMp90Kz6RGjwqejKF8IxZOcGp50NOUL
MWfKXr2zw00p94Zc/1KvnciMcm98vlZ2b95ic8p9UNFiPw3eYyj3gd/4/0Y8
8BtLOR/jrdJLbsdYfGfwERlcs7p3wzj6fT7upBv5jjs//jur+PgiEhRO17Ck
/iJ8GsoXDg+cSP1FmOE5U3RDNYn6i5D440afYKcp1F+E0N4vMx7UTKW+L34p
HJWeorCmvi86jHj1x/fYUN8X5pmtGeK1ttT3hck+Wc/kVdOo74f6dXvLdmXY
Ud8PWg1e02V7plPfD0OdUj02nudS3w83roXfP9U+g/r+iHtowr9lz6O+P/w6
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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {5}}]& ], 
         "1.`"], Annotation[#, 1., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {6}}]& ], 
         "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV2HlYzXn7B/BSqJg2RVPo2CqF0kJD6p2lEtVpob1O62k/a4e5GE62SBHG
MkzNManIUmSNRwcRKRMKI02LUmmQxlgifn6X+/Nc19M/rpfbu/f51OWc7/2Z
EC3wixuioqKSpqqi8v9/fvvqc1H53y8M6a19i+di+nsNDOmwu+64dQdZF5uD
eobujPqdbICmKfmtzTknyEZo8ZCFKflnyWPxa29thl/cZTIH1ZmXnnVvu0ae
iKLLBaI4p5vkyZh3yXvpVts6shn2ljz8rt7hLtkCJvnNJfr998mWuJKTcdG6
7gF5Gq5WX77y6caf5BnQdGizbml5QrYB/yanKmhkK3kmBsPOZQReaCPb4rne
/EmnVjwl26FxloWan0cn2R5PDr8KdpnWRXZA0tZOt/zJPeRZ6AjPvnrMtpc8
GyUf7HyuBL4gO6KjjjPHc/cr8g+ouRVzJP4t+z3MQYvpCZU31v3kuZAc5Dea
r/yH7ISVmfpmPX+8Ic/D6qHcE1aOb8nOcLyRze87+Y7sgpk50RPdnD+QAR3x
gIXnXwPfLAfC9e+pTd31ieau8KvTdDGN+ExzVwzYYdI8jgq+zefjx4Yvv9eO
U/1m+Xw0Gv81fYXFEJovgNud/vVfoEbzBajsvaJrl6BO84XYqnlizvP8oTRf
iC+dd75oPBtG80X4bmXPnrXOGjRfhNFli+YtOaJJczdYXg35foX5CJq7QWfn
qKSxFSNp7o5nxRZ9MdHaNHdHy04vp2u6ujT3QODqpp74T2S5BwzL/dtr3ujR
fDF+XrV6TdGAPs0Xw366gclFbQOae+LLb96/Ncw0pLknyt5NGF4TO5rmS9Bm
+NR4zeExNF8C3jq3oa2DRjRfin9vV3zpjTOm+VK8Snow4libCc29MJojqXQU
j6O5F3KV14ZUGJnS3BsdYdGf7ZI5NPdGdHjAk0XLJ9DcBw4NrxzgPZHmPthh
enzcY/9JNOeifktvcQN/8jeDi5DtBbKPWVPo33Nhs9Bu6ZTLZt+s5CKpQK/I
fogF5X2xL08WaRQ0lfK+iA7tD6tVWlLeF9wRHgiZN43yvjBz6zV7fGc65f0w
c85toURmTXk/VI6MqDmx34byfmgrvLhauGkm5f1w/Z/TfVZrbSnvD2+dxNK9
G+0o748Ii+yp0v32lPeH84Usl+zLDpT3h1H13Joz/bMoH4A1v05zuzfbkfIB
GP/D1el/bPuB8gHQCiowLn4/h/IBGFbCHRotc6L8MpSJM98aajpTfhlcN75+
1XXShfLL8KGhJH3YBVB+GcbFmtjHFbpSfjkeTgwQXcyfT/nlOLVm2JX/FC6g
/HKkThQutby4kPLLMd5zI/dWyyLKB2LdiI5jqQbulA+EdrBHwr/BHpQPhJZ9
CTxPLqZ8IHjGzd5aBksoHwQ9RRVXJ3kp5YPQEr9r77AzXpQPQtbgCR9Bvzfl
gzB24EVnmx6X8sGIeVX95NIhMoIxnys0U7X1pXwwBL5p9p0XyMpg8J3fx+Y5
+VE+BL7n9Y3DKsgIwYbCCTW+dv6UD0FTXcKo48VkZQi8LNXu7B8TQPlQZJYP
jndbT0Yomo7kZzx6TpaHIiI5qu1H72WUD8VtrcxC7gmyShicbHwqM7SWUz4M
xz6ZnLGJIcvDMGSDtHztebIyDJ+b9h/YrhVI+XB0L4nSlgeTEY5dWcpVgkKy
PBy708s5q16SleGwVrcyr7QPonwEZIO/Hl6+kowIVCkWHA29QJZH4POxDOeu
d2RlBDJU9dfr2QdTPhJTqzYVvk4lIxIdx0pe5hWS5ZHYPsquxaqJrIyEal2O
Tpl2COV5mFFbFekMMoeHLbWVvT0CMngwmpSldT2PzOPhSZCduO0WWc5Db9bz
sdw3ZAUPp87Oi50wLpT6eEiwydGMW0hu5WGfjvkUyySyShRqYiN91m4jc6Kw
5daz9eKTZETBeJmvk959Mi8Ki6o+pST8Q5ZHgR/5JnuDfhj1R8G+4MgvIhuy
MgqzLA+bzPUit0Zh0t+JVn8nkFWiIZmTL92+nsyJxt8bD821ziMjGgc3HeQ1
niHzomGxeF/M1jqyPBofBS/5IR2sPxqv53Adlwyw/mgIrE57xOuEU380XMXd
F8snkVViENgUHjd3NpkTgxGVqbfVPcmIgUPpaKsxYWReDJwOzvrpx1SyPAZ7
2t0ltmvIihh0r0qUe2wjK2Mw8/TfD67ksf4YbDkjST10jPXHokcwoPK2gvXH
4s983dGXbrL+WLiUX/z4sZH1x6LSwa6uop31x6Ki/J1k8CXrj4Vy+rUjNwdY
fyzeqA8Z4AyLoP5YOLZOqdLSI6vEoe/uS6csEzInDpduGgsLppARh42hg64h
1mReHGRxpqJTjmR5HCRbeHtLXcmKODx6uclqmSdZGYcvIaXrivxYfxy6Qovv
FoWw/nis2NY5PTia9ccjyHTXNmUi64/HNAvOnRYh64/HDP8bRy+sYP3xcLkv
vc1dw/rjcUd98dniDaw/HlXX2pqVWaw/HmcfXcnLz2X9fLTfVzgu2MP6+Zjc
evZh2QHWz8d4B/HOHgXr5+Nuka7kVSHr52Nj5vzYqhLWz8fONVvnJ5Wyfj4m
3jr3qL2c9fNhoG3Zan2e9SfA9aOrqv8l1p+AX/RdGryUrD8BATXn2yZUsf4E
WL0XFdRXs/4E6F4r2xB6m/V/zbe/b792h/UnwGXNQe0R91h/Am4Oai6xbWT9
iTDM5Pwx5xHrT0Tc7yE3pjSx/kQ86Wzkvmlm/YkomTV0fXEr609EV9A4Pp6y
/kScc436XNnJ+hOhDUMX827Wn4hDt3MMVjxn/UkQL0mNLfub9SfBuGftiIaX
rD8JGpOXP27vY/1J8PvglNfcz/qTMEo2csz1N6w/CfunNqjtf8v6kxB8x8co
/D3rT8ISb98hOgOsPxnPHb5PLPvI+pNx7tSmF66DrD8ZB06GW1Z9Zv3JuLc+
/fTsr+/73/qTYdXebpynSlYk43fnuK43Q8jKZMz2L8t3USe3JkP3nbvyp6Fk
lRQ4uUbdKB1G5qRgam2H2YPhZKRApm4Q8FqDzEuB58O+ClUt1p/y9fPG+Nrw
Eaw/BSulV++qjWT9KRCnZnm+ZW5NwQqz15tbvmP9qfj0svxZpTbrT4XbrXUV
e3VYfyqsgpoD+bqsPxXv5+/SttZj/anw+Pmw1StmRSoSn1p8KNZn/alQlnhe
Dh7F+lMR0rCzUt2A9adhZuEz5yPMnDQIC0+scjdk/WkwaOw+1cLMS8P5cw6m
4tGsPw3+F4d/+Mys+OqMk7JNY1h/GupUBbUaRqw/DbnHE6ZtYlYRwE2n88Zn
Zo4AftarasTfs34B0so0YtuZeQI01hVe9jJm/QJ8UPVVO8OsEGBlSkKwkQnr
F+Aev+vZCuZWAVQO3L93n1lFiPLM0S7TxpJ1hfA8/dArg5kjRLiw2/Q+s40Q
M7KfNkwYx17f17zvmK2pzFwhhraXR55l5gnh6F6X9olZKER1U8R9l/Hs9Qtx
IzyqWM6cK4R/ziO1SmaFEPVZt1Q+MpcJkei66Iy9KTufEONrMmenMNcLofHn
qLyDzK1CWDr9OtDA3CfEQrVTMcM47Pwi1FTr9zow64ow1XZTQQwzRwStd5N+
285sI4KxyOzlBWaI8GV+qKKdmSuCttjjhuYEdn4RThzqTrNmForQWdEZYMR+
HnIRFI/Nvc3Z/4dcEXLebk4wZ+8vChHCKzK2a9aRy0TgNJl6l+az95evr9ex
Z1cvn1wvQt6MMM31U9n7jQh+5z7ZTO+gz+M+EUptV67avY99/osRUmLQFOpO
1hV/3b+Ujoav2fOQGINuia1L9pBtxLjs+rQyYzZ7PhLj5x1SpxmN9DzGFcPl
9rLmKwL2vCZGfXF1V8FwslCMgweTpzuw50m5GPy9D43+sCHniqGxqXlD1VV6
XlWIcX2lqDTan1wmRvXmPG5fO3seFuNFeE1+qYhcL8bK2rELmr/Q83arGOEb
XwaezCH3idF0dMuOSBP2/C7B5lcZG8ccoed7XQmE4WZ96rPJHAn0+4/+43Od
9gUbCV6rTfQbF0CGBO6hZ4q2PaV9gytBS77t/qsSMk8CwWddw0Z1slCCoXt7
k1v2sP1GAt7Wtpz3U8m5X7/fpEPTHC7TPqSQ4MH32R3F/uQyCY5p3faNes72
KQmWT2nhCteR6yU48FxneLsJuVWCisfmg1fO0n7WJ8HAu0Nexv5sf5Oif6JX
WlebD51fiszdhgFHOWSOFO7PXB5lR9P+ZyOFc+rM+D3FtB9CipDveL71r2h/
5EqxecwhHde5ZJ4Uf427G/5iC+2bQinchMURj5o86fxSvDl8vFxtJjlXii9t
fQrBFtpXFVIkVPlMM+mkfbZMiq62c5bqC8lKKaxmmCSZF9H+Wy+FRpxThXwE
uVUKPZ1b6iOkbnR+KfL1a/nK/+7P6Rh57ZHrfm+ybjoWeKxz3aGkfZuTjlST
vavzHMg26djS9v6ns8dpP0c6Diwq9r5vQeamI988NPN50Xw6fzq0dgaE9ZuT
henYJN92pPUo7f/ydBzdy/tYYkvOTYdV9vRf3C7RfYEiHec1xuce9iCXpUOQ
XyjbWkr3C8p0LFtks2/Kfbp/qE+HRa5+vsaneXT+dDQ770oZZ0nuS8eLuwP/
WRrO7i9kMNytYbt291w6vwyim+O98+7RfQdHhtJZNTu2G5BtZLAIDFrtHEr3
I5BhetGYvTuL6P6EK0OCc/cq6dvZdH4ZTt3Tbq71JAtlOOqem72hgO5f5DIY
NPybsUGFnCtDVwSn9UwU3dcoZHjXyR9Qrab7nDIZutuvBfnZkJUy2E2ovpSb
R/c/9TJUXwybUqxNbpUhZfiRe2vX2+L/ANq8hxU=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {7}}]& ], 
         "2.`"], Annotation[#, 2., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
w/cyc0WI/MRXzWfmieBT6XiylFkowvQt4f7NzAoR5ALPIV+Z00Qo89N5NryN
nV+EL1/2V5gy54kwNWHh/bPs80UiZK3o25fD/r1WiHCk8eiBQ+z/E6UIRhnq
+t4F7PwirKkPDBXsYecXQzN4wJB9Cez8Yqw4bT49xYmdX4wjM6rnHRrMzi9G
4b9fs3ZUsucDMWpaBJvKd5O5YpTFTuXW+LHnFTGqi6WVQ9XJQjHGjTRxabnJ
nt/EeNirs+a/cnKaGH1vRlu8MGXPc2IkFkRkXq+j5808MU4+NS7btZY9z4rh
MyZlzGkLcoUY3RVtFV719HysFKO/2lu9fAW5U4xL1/LG6k5gz88SWISVfip4
RM/rmhLEdZcWX5WSDSW4brtsd+gospUEE91WCC7fYPcFCUaazMpQiSZzJRh4
6snu0MFkngScgLZryly6jwglyL7z+vHFBex+IoHKfkvtrq9030mTYLxfunvB
UXKmBPtLTb+N8CLnSTB69UOxWwu7T0mgdmZH7ytbcoUEc5xavjtspvuXUoI9
3+zWL2qk+1qnBIapX92jbdn9TYoRqtXGolS632lKMdecN37fK7r/GUqhcv/S
xdceZCspntrotyhOsPuiFLFuQckxg8hcKeyr/+g5mUD3S54ULRtWIaia7p9C
KQL3zjJJcSArpJg9vvLxyBy6r6b9/PzdaI6NNjlTipcZdiVPNtD9Nk+KIheL
HvVeuv8WSfFQRduyLJlcIUW3654avTa6LyulGCWZ5NbHJ3dKMT37t/o4Jd2v
OTKkNDkMFvDImjLM6bjy59t/Xen8Moh3dw35LiBbyVDQ7fB85zu6v0MGz5aS
P7OWkbkyXFdNqZmqSub9/LyZgGufTvd/oQz216JqT44nK2SIX/HwnpqM3hek
ybDcTcVs7RF6n5ApQ7nZarf8Kkc6vwwZg8I+rRtELpIhN0ew+q0rvY+okKH0
6PnCZ6tn0vll4J8ofuNym95fdMpQ9Cxj7OChZI4cd0ue/TAJofcdmnJMz7n9
UnFyGp1fDoN7Z1TUv9vT+eWokzf7XAwkQw6ZT/J/BBfofQpXjjj3Oad+H0nm
yVGwHQYnUuj9i1CO3nPKv9Wb2PsZOTZaXTpv40NOk2Oqnr26+jV6n5MpR/J8
s3kKK3KeHJH/3rdflU3vf4rkeLB+5O5PRuSKn7+PxVluzWF6X6SU46/s0mWq
RlPwvxCGsM8=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {8}}]& ], 
         "2.5`"], Annotation[#, 2.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV2HtYzHn7B/BRVjlWSrt2o1IOqSgdpFLvqKhIpoQU02E6H2ammcEuyq6E
ZENWZDMRYtsOhBQpOS9pLSKrg1ZsHqSsNtr187vc93NdT/90vbrnPe8+V1f1
vT/GYUlCsZpAIEgcIBD8/+dPH12ugv/9wAs7y250yujrmnj/g+CqQ8Z2sjaK
9vzycnvoAbIeCjq86x5lFpO/QJ6nbXBN1CmyAdRV9euF4mqyETaHNnQ821ZH
Hofc/O1SsfNVsinunvaflzHtJnkCuu++HN5g9yt5Er4e23VsZPdv5MnoSMmq
mnrzHtkCo+u31vZffkCegpF6fVNbWn4nW8Fli9nFJcNaydYQ18nXLz7TRp6G
iQm6JsdXtpNt8MHgippw7hOyLdRXjQ5ytXhKtkO+aaZnnumfZHtcc395oWja
c/J0zFmh4Ve7+AXZAbccfnf03vWKPAPNLaePRr7ln4MjnuuP6+2Z2k12Qoiu
9o2Jq3rIzjDflTHmz1tvyDOxKcvsiLnDW7ILZju0h3WV9ZJdUeHYPNbTpY8M
PGj+3cy7+d0npwKzRecGmu3sp7kbcr50g+Hyf2nuBmnkC5OZRgJ8ms/CwyG7
C2+MGfDJqbPg6XFs4spJajSfjQXWhVs+QJ3ms7G1aIaRTfRAmrvj0aT4OZ15
n9HcHd0Xmj5odgyiuQdMTfWzU1w0ae6BLjc7H5+jg2nuCa3ubv2VE4fS3BPi
XJ8og8phNJ+D/xQ0vAwPG0HzOdiYkWVXp61N87lI/+bI48h+cupc7BR83nT9
jQ7NvbDjsIXy8LuRNPfCqpLzWlUj9GjujRq37ow71qNo7g3xPz7Xr0Xo09wH
7qJRf60t/JzmPvDtXfl3yz9f0Hwerhsu63ku/pLm8+Dy9qB6UdtXNJ+PqW0e
lQ6yMTSfj5DVxR/OfGFIc18YZuf8ZRNnRHNfNKlfvO0RaEzzBVjTe98cvuNo
vgCZzRq6Tf4mNPdDvnfpvjtRpp+Mj75UG/t+y3h6vR+c7HJdx1dP+OQaP8Tb
Xs+xVZtE+YXQfpC+8IslZpRfiGHJ231v1Eym/ELULptgHTTTgvIL8Z/jL/Sb
6i0pL4T9Hi9RsnIq5YWofLWrtnivFeWFCOjPSJZstKa8EIWH1jWap0yjvD8O
P0nfszvNhvL+qPANHCvfa0t5f+hevWy1tdqO8v5Yl1VUcrLbnvIBKJt51OT2
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
Kax83vyyhC2SYtDfthvj2BIpDpm/3ryWnSrFFl295m3sLClG+0Zv3s9WSbGp
dceOEnapFKtV336oZtdIMVHVePcmu0GKR+b3vvqd3SpFe/qQxj/ZXVKMur2m
ovy/55eh20YxLZF/37RlkA3Ol3Xw3z8jGW5dVN07uYPPL0Ok797Zcfz/DDL0
Pggv3RrA55dharzD7N2WfH4ZDMON8wRqfH4ZggtlX9vf5ucXGT7YT/1ufx45
6+Proyf35PLzmUoG8/3HA9IsyaUynDSKiyzp4udLGc59q50WXUZukOH17hnf
9iXx86YMu4Lk0w9bkLtkGDH6jUPxU35+TkbxwhyTeflk7WTIet5Znl5KNkrG
vd/aHxvrkK2SseuNxpOqK/y8n4wRz4QfSteS/ZJRE13dbmZDFn18fVHR+pwG
2j8kydj7s2ubwpH3k2RErzF2tyig/SUrGfYDRn7RO5ysSsbRyFEmw1fRPlSa
jBM28SdUj3mfSsby96vft8wnNyQj4O/Fy/86Q/tXazKG+Kcc0ZhI7vr4/Rjr
fum4i/c3OTIyfN4XDSRry2HWP3rrWgXte0ZyrHo+y+LyU9oPreRoG5Z0MW8Z
74tyOIwcWmvwK+2XfnI8jf5jhv9cskiOS1Z+bv61tI9K5FiY2PbY3Jn3UzlS
dF2FnRW0v2Z9fH8NzcF7p5NVcsQY/9bhXkH7b6kcLvv65vU48j4sh1quwYyi
87QvN8ihcXn8coUnuVWOjnHZTv63ZtH55bh9Q2zjFUQWKDBg0SDV0qe0j2sr
UJcs7UhTko0U+Kz91OZ6DbKVAi3G551scmmfhwIWi2QvjluR/RQo8BxxbncW
7f8iBbzU7i3qraP7AYkC9eWvjq97P5POr0Bue8vNCdPJWQqkeE89/JTvF1QK
xKwqC6yodKLzK2A5IGXy92rkGgVeWqmdCvWl+4kGBTpPDKs3zaP7i1YFBut2
Xr3xmu43uhQo7E0Tz/ciC5QIy8l9vadgOp1fiTOq8bMPqZONlNg5LrwpNJLu
S6yUeO5i2lJ7g+5ToMQpD1eb0/ZkPyW0Z6Z9Y1NgS+dX4mrGOrNJo8gSJTyt
qjds3Ez3NalKvH2Rf8J1ADlLiYEpDy64r6H7HZUSJ/9RFG18R/c/pUq4Nduu
ePsN3wcpUbZ04aUNAnKDEjWaG6+N20T3R61KRDvcDK4daYX/A8vKlJo=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {9}}]& ], 
         "3.`"], Annotation[#, 3., "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {1}}]& ], 
         "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {2}}]& ], 
         "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {3}}]& ], 
         "0.6000000000000001`"], 
        Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {4}}]& ], 
         "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {5}}]& ], 
         "1.`"], Annotation[#, 1., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {6}}]& ], 
         "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {7}}]& ], 
         "2.`"], Annotation[#, 2., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {8}}]& ], 
         "2.5`"], Annotation[#, 2.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {9}}]& ], 
         "3.`"], Annotation[#, 3., "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {1}}]& ], 
         "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {2}}]& ], 
         "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {3}}]& ], 
         "0.6000000000000001`"], 
        Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {4}}]& ], 
         "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {5}}]& ], 
         "1.`"], Annotation[#, 1., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {6}}]& ], 
         "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {7}}]& ], 
         "2.`"], Annotation[#, 2., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {8}}]& ], 
         "2.5`"], Annotation[#, 2.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {9}}]& ], 
         "3.`"], Annotation[#, 3., 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {1}}]& ], 
         "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {2}}]& ], 
         "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {3}}]& ], 
         "0.6000000000000001`"], 
        Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {4}}]& ], 
         "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {5}}]& ], 
         "1.`"], Annotation[#, 1., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {6}}]& ], 
         "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {7}}]& ], 
         "2.`"], Annotation[#, 2., "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {8}}]& ], 
         "2.5`"], Annotation[#, 2.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$133927, {9}}]& ], 
         "3.`"], Annotation[#, 3., 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {124.05159337343679`, 280.2929605786161}], 
              Offset[{0., 0.}, {124.05159337343679`, 280.2929605786161}], 
              Offset[{0., 0.}, {123.02989504737413`, 284.0801520820551}], 
              Offset[{0., 0.}, {123.02989504737413`, 284.0801520820551}], 
              Offset[{0, 0}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 5}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 10}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 10}, {122.00819672131146`, 287.86734358549415`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {124.05159337343679`, 280.2929605786161}], 
              Offset[{0., 0.}, {124.05159337343679`, 280.2929605786161}], 
              Offset[{0., 0.}, {123.02989504737413`, 284.0801520820551}], 
              Offset[{0., 0.}, {123.02989504737413`, 284.0801520820551}], 
              Offset[{0, 0}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 5}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 10}, {122.00819672131146`, 287.86734358549415`}], 
              Offset[{0, 10}, {122.00819672131146`, 287.86734358549415`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.487378725943399, 23.}, {122.00819672131146`, 
               287.86734358549415`}], 
              
              Offset[{6.487378725943403, 10.000000000000002`}, {
               122.00819672131146`, 287.86734358549415`}], 
              
              Offset[{-12.512621274056597`, 9.999999999999998}, {
               122.00819672131146`, 287.86734358549415`}], 
              
              Offset[{-12.5126212740566, 23.}, {122.00819672131146`, 
               287.86734358549415`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.2`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-3.012621274056599, 16.5}, {122.00819672131146`, 
             287.86734358549415`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.98440834210027`, 221.28659486736032`}], 
              Offset[{0., 0.}, {118.98440834210027`, 221.28659486736032`}], 
              Offset[{0., 0.}, {117.99630253170587`, 225.07378637079938`}], 
              Offset[{0., 0.}, {117.99630253170587`, 225.07378637079938`}], 
              Offset[{0, 0}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 5}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 10}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 10}, {117.00819672131146`, 228.86097787423842`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.98440834210027`, 221.28659486736032`}], 
              Offset[{0., 0.}, {118.98440834210027`, 221.28659486736032`}], 
              Offset[{0., 0.}, {117.99630253170587`, 225.07378637079938`}], 
              Offset[{0., 0.}, {117.99630253170587`, 225.07378637079938`}], 
              Offset[{0, 0}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 5}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 10}, {117.00819672131146`, 228.86097787423842`}], 
              Offset[{0, 10}, {117.00819672131146`, 228.86097787423842`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{7.0590516356323185`, 23.}, {117.00819672131146`, 
               228.86097787423842`}], 
              
              Offset[{7.059051635632322, 10.000000000000002`}, {
               117.00819672131146`, 228.86097787423842`}], 
              
              Offset[{-11.940948364367678`, 9.999999999999998}, {
               117.00819672131146`, 228.86097787423842`}], 
              
              Offset[{-11.940948364367681`, 23.}, {117.00819672131146`, 
               228.86097787423842`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.4`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.4409483643676797`, 16.5}, {117.00819672131146`, 
             228.86097787423842`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {122.99750415921817`, 244.59423727288663`}], 
              Offset[{0., 0.}, {122.99750415921817`, 244.59423727288663`}], 
              Offset[{0., 0.}, {122.00285044026482`, 248.38142877632566`}], 
              Offset[{0., 0.}, {122.00285044026482`, 248.38142877632566`}], 
              Offset[{0, 0}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 5}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 10}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 10}, {121.00819672131148`, 252.16862027976472`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {122.99750415921817`, 244.59423727288663`}], 
              Offset[{0., 0.}, {122.99750415921817`, 244.59423727288663`}], 
              Offset[{0., 0.}, {122.00285044026482`, 248.38142877632566`}], 
              Offset[{0., 0.}, {122.00285044026482`, 248.38142877632566`}], 
              Offset[{0, 0}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 5}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 10}, {121.00819672131148`, 252.16862027976472`}], 
              Offset[{0, 10}, {121.00819672131148`, 252.16862027976472`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{7.39161700997574, 23.}, {121.00819672131148`, 
               252.16862027976472`}], 
              
              Offset[{7.391617009975744, 10.000000000000002`}, {
               121.00819672131148`, 252.16862027976472`}], 
              
              Offset[{-11.608382990024257`, 9.999999999999998}, {
               121.00819672131148`, 252.16862027976472`}], 
              
              Offset[{-11.60838299002426, 23.}, {121.00819672131148`, 
               252.16862027976472`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.6000000000000001`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.108382990024258, 16.5}, {121.00819672131148`, 
             252.16862027976472`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {134.71911549656517`, 249.08722253558506`}], 
              Offset[{0., 0.}, {134.71911549656517`, 249.08722253558506`}], 
              Offset[{0., 0.}, {133.3636561089383, 252.8744140390241}], 
              Offset[{0., 0.}, {133.3636561089383, 252.8744140390241}], 
              Offset[{0, 0}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 5}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 10}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 10}, {132.00819672131146`, 256.6616055424631}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {134.71911549656517`, 249.08722253558506`}], 
              Offset[{0., 0.}, {134.71911549656517`, 249.08722253558506`}], 
              Offset[{0., 0.}, {133.3636561089383, 252.8744140390241}], 
              Offset[{0., 0.}, {133.3636561089383, 252.8744140390241}], 
              Offset[{0, 0}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 5}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 10}, {132.00819672131146`, 256.6616055424631}], 
              Offset[{0, 10}, {132.00819672131146`, 256.6616055424631}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.64198891147139, 23.}, {132.00819672131146`, 
               256.6616055424631}], 
              
              Offset[{8.641988911471394, 10.000000000000002`}, {
               132.00819672131146`, 256.6616055424631}], 
              
              Offset[{-10.358011088528606`, 9.999999999999998}, {
               132.00819672131146`, 256.6616055424631}], 
              
              Offset[{-10.35801108852861, 23.}, {132.00819672131146`, 
               256.6616055424631}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.8`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.8580110885286085, 16.5}, {132.00819672131146`, 
             256.6616055424631}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {164.1645229208499, 239.39761805953944`}], 
              Offset[{0., 0.}, {164.1645229208499, 239.39761805953944`}], 
              Offset[{0., 0.}, {162.5863598210807, 243.1848095629785}], 
              Offset[{0., 0.}, {162.5863598210807, 243.1848095629785}], 
              Offset[{0, 0}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 5}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 10}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 10}, {161.0081967213115, 246.97200106641753`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {164.1645229208499, 239.39761805953944`}], 
              Offset[{0., 0.}, {164.1645229208499, 239.39761805953944`}], 
              Offset[{0., 0.}, {162.5863598210807, 243.1848095629785}], 
              Offset[{0., 0.}, {162.5863598210807, 243.1848095629785}], 
              Offset[{0, 0}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 5}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 10}, {161.0081967213115, 246.97200106641753`}], 
              Offset[{0, 10}, {161.0081967213115, 246.97200106641753`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.838751980430567, 23.}, {161.0081967213115, 
               246.97200106641753`}], 
              
              Offset[{6.838751980430571, 10.000000000000002`}, {
               161.0081967213115, 246.97200106641753`}], 
              
              Offset[{-7.161248019569429, 9.999999999999998}, {
               161.0081967213115, 246.97200106641753`}], 
              
              Offset[{-7.161248019569433, 23.}, {161.0081967213115, 
               246.97200106641753`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.1612480195694308, 16.5}, {161.0081967213115, 
             246.97200106641753`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {240.20069869535865`, 169.03902653498963`}], 
              Offset[{0., 0.}, {240.20069869535865`, 169.03902653498963`}], 
              Offset[{0., 0.}, {240.10444770833507`, 172.8262180384287}], 
              Offset[{0., 0.}, {240.10444770833507`, 172.8262180384287}], 
              Offset[{0, 0}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 5}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 10}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 10}, {240.0081967213115, 176.61340954186772`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {240.20069869535865`, 169.03902653498963`}], 
              Offset[{0., 0.}, {240.20069869535865`, 169.03902653498963`}], 
              Offset[{0., 0.}, {240.10444770833507`, 172.8262180384287}], 
              Offset[{0., 0.}, {240.10444770833507`, 172.8262180384287}], 
              Offset[{0, 0}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 5}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 10}, {240.0081967213115, 176.61340954186772`}], 
              Offset[{0, 10}, {240.0081967213115, 176.61340954186772`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.499999999999998, 23.}, {240.0081967213115, 
               176.61340954186772`}], 
              
              Offset[{9.500000000000002, 10.000000000000002`}, {
               240.0081967213115, 176.61340954186772`}], 
              
              Offset[{-9.499999999999998, 9.999999999999998}, {
               240.0081967213115, 176.61340954186772`}], 
              
              Offset[{-9.500000000000002, 23.}, {240.0081967213115, 
               176.61340954186772`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1.5`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {240.0081967213115, 176.61340954186772`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {174.82640506600416`, 124.12266587154451`}], 
              Offset[{0., 0.}, {174.82640506600416`, 124.12266587154451`}], 
              Offset[{0., 0.}, {173.91730089365782`, 127.90985737498356`}], 
              Offset[{0., 0.}, {173.91730089365782`, 127.90985737498356`}], 
              Offset[{0, 0}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 5}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 10}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 10}, {173.0081967213115, 131.6970488784226}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {174.82640506600416`, 124.12266587154451`}], 
              Offset[{0., 0.}, {174.82640506600416`, 124.12266587154451`}], 
              Offset[{0., 0.}, {173.91730089365782`, 127.90985737498356`}], 
              Offset[{0., 0.}, {173.91730089365782`, 127.90985737498356`}], 
              Offset[{0, 0}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 5}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 10}, {173.0081967213115, 131.6970488784226}], 
              Offset[{0, 10}, {173.0081967213115, 131.6970488784226}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.999999999999998, 23.}, {173.0081967213115, 
               131.6970488784226}], 
              
              Offset[{7.000000000000002, 10.000000000000002`}, {
               173.0081967213115, 131.6970488784226}], 
              
              Offset[{-6.999999999999998, 9.999999999999998}, {
               173.0081967213115, 131.6970488784226}], 
              
              Offset[{-7.000000000000002, 23.}, {173.0081967213115, 
               131.6970488784226}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["2.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {173.0081967213115, 131.6970488784226}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {161.40928664563899`, 98.28032976634908}], 
              Offset[{0., 0.}, {161.40928664563899`, 98.28032976634908}], 
              Offset[{0., 0.}, {160.20874168347524`, 102.06752126978813`}], 
              Offset[{0., 0.}, {160.20874168347524`, 102.06752126978813`}], 
              Offset[{0, 0}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 5}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 10}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 10}, {159.0081967213115, 105.85471277322716`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {161.40928664563899`, 98.28032976634908}], 
              Offset[{0., 0.}, {161.40928664563899`, 98.28032976634908}], 
              Offset[{0., 0.}, {160.20874168347524`, 102.06752126978813`}], 
              Offset[{0., 0.}, {160.20874168347524`, 102.06752126978813`}], 
              Offset[{0, 0}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 5}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 10}, {159.0081967213115, 105.85471277322716`}], 
              Offset[{0, 10}, {159.0081967213115, 105.85471277322716`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.499999999999998, 23.}, {159.0081967213115, 
               105.85471277322716`}], 
              
              Offset[{9.500000000000002, 10.000000000000002`}, {
               159.0081967213115, 105.85471277322716`}], 
              
              Offset[{-9.499999999999998, 9.999999999999998}, {
               159.0081967213115, 105.85471277322716`}], 
              
              Offset[{-9.500000000000002, 23.}, {159.0081967213115, 
               105.85471277322716`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["2.5`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {159.0081967213115, 105.85471277322716`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {253.0782260757418, 84.64136438719441}], 
              Offset[{0., 0.}, {253.0782260757418, 84.64136438719441}], 
              Offset[{0., 0.}, {253.04321139852664`, 88.42855589063345}], 
              Offset[{0., 0.}, {253.04321139852664`, 88.42855589063345}], 
              Offset[{0, 0}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 5}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 10}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 10}, {253.00819672131146`, 92.2157473940725}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {253.0782260757418, 84.64136438719441}], 
              Offset[{0., 0.}, {253.0782260757418, 84.64136438719441}], 
              Offset[{0., 0.}, {253.04321139852664`, 88.42855589063345}], 
              Offset[{0., 0.}, {253.04321139852664`, 88.42855589063345}], 
              Offset[{0, 0}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 5}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 10}, {253.00819672131146`, 92.2157473940725}], 
              Offset[{0, 10}, {253.00819672131146`, 92.2157473940725}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.999999999999998, 23.}, {253.00819672131146`, 
               92.2157473940725}], 
              
              Offset[{7.000000000000002, 10.000000000000002`}, {
               253.00819672131146`, 92.2157473940725}], 
              
              Offset[{-6.999999999999998, 9.999999999999998}, {
               253.00819672131146`, 92.2157473940725}], 
              
              Offset[{-7.000000000000002, 23.}, {253.00819672131146`, 
               92.2157473940725}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["3.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {253.00819672131146`, 92.2157473940725}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 279.16880256649654`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.09995738187458436]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "0.2`", "0.4`", "0.6000000000000001`", "0.8`", "1.`", "1.5`", "2.`", 
       "2.5`", "3.`"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.79560808977382*^9, 3.79560951327666*^9, 
  3.79561585226864*^9, 3.795618935326351*^9, 3.795618970217043*^9, 
  3.7956200749868917`*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"ea9b3498-2172-44b2-823e-40c6f52df727"]
}, Open  ]],

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 
  3.79556297488484*^9}},ExpressionUUID->"1c230c85-72d6-4a0e-9665-\
9a9e1a233853"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->
  "In[462]:=",ExpressionUUID->"92c7b259-c069-42b8-bc29-109ec7857109"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.2`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.4`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.6000000000000001`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.8`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1.5`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2.5`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "57115.71557855084`", "57115.605157210244`", "56879.28203614555`", 
     "55696.087815198785`", "49315.52730006458`", "35329.895380866896`", 
     "27810.539667264828`", "23062.482635617096`", "19770.505963442174`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7956080898240023`*^9, 3.795609513330327*^9, 
  3.795615852344294*^9, 3.795618935401247*^9, 3.795618970276166*^9, 
  3.795620075050806*^9},
 CellLabel->
  "Out[463]=",ExpressionUUID->"1f00986d-7d9c-4726-93db-f8f7d318e7e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "aAUCs", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795620031888612*^9},
 CellLabel->
  "In[464]:=",ExpressionUUID->"936f810b-7ba3-4de8-a4e7-21096e06bdff"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             57115.71557855084}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{44.42588235294117, 
            76.07514290801815}, {-91.06941477620863, 101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 57115.71557855084]& ,
         TagBoxNote->"57115.71557855084"],
        StyleBox["57115.71557855084`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[57115.71557855084, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4313013086509717, 0.7097759791803192, 0.9270779244117016], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             57115.605157210244`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{78.9439894894389, 
            110.59325004451588`}, {-91.0690441667118, 101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 57115.605157210244`]& ,
         TagBoxNote->"57115.605157210244"],
        StyleBox["57115.605157210244`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[57115.605157210244`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4426628530738022, 0.716152003846674, 0.9290563450438893], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             56879.28203614555}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{113.46209662593664`, 
            145.11135718101363`}, {-90.27586784304337, 101.12927768428996`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 56879.28203614555]& ,
         TagBoxNote->"56879.28203614555"],
        StyleBox["56879.28203614555`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[56879.28203614555, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4995464692073373, 0.7480747184073868, 0.9389616638635642], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             55696.087815198785`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.98020376243437`, 
            179.62946431751135`}, {-86.30468788346862, 101.12927768428996`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 55696.087815198785`]& ,
         TagBoxNote->"55696.087815198785"],
        StyleBox["55696.087815198785`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[55696.087815198785`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8069246879774689, 0.9044098145909002, 0.8175730865648375], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             49315.52730006458}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{182.4983108989321, 
            214.1475714540091}, {-64.88947675415817, 101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 49315.52730006458]& ,
         TagBoxNote->"49315.52730006458"],
        StyleBox["49315.52730006458`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[49315.52730006458, {}], "Tooltip"]& ]}, 
     {RGBColor[0.947317807530112, 0.8098193052876967, 0.5921153627920595], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             35329.895380866896`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{217.01641803542984`, 
            248.66567859050681`}, {-17.949202523385168`, 
            101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 35329.895380866896`]& ,
         TagBoxNote->"35329.895380866896"],
        StyleBox["35329.895380866896`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[35329.895380866896`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8823120883103945, 0.6667030085710555, 0.7260185406070814], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
             27810.539667264828`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{251.53452517192756`, 283.1837857270046}, {
            7.288171180888554, 101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 27810.539667264828`]& ,
         TagBoxNote->"27810.539667264828"],
        StyleBox["27810.539667264828`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27810.539667264828`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8082461624089915, 0.5821341246916056, 0.9528843915293854], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
             23062.482635617096`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{286.0526323084253, 317.7018928635023}, {
            23.224176104839117`, 101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23062.482635617096`]& ,
         TagBoxNote->"23062.482635617096"],
        StyleBox["23062.482635617096`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23062.482635617096`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 
             19770.505963442174`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{320.57073944492305`, 352.22}, {34.2731075114411, 
            101.12927768428996`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 19770.505963442174`]& ,
         TagBoxNote->"19770.505963442174"],
        StyleBox["19770.505963442174`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19770.505963442174`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["0.2`", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["0.4`", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["0.6000000000000001`", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["0.8`", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["1.`", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["1.5`", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["2.`", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["2.5`", TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["3.`", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.795608089885255*^9, 3.795609513396428*^9, 
  3.7956158525005627`*^9, 3.7956189354894238`*^9, 3.795618970342525*^9, 
  3.795620075097575*^9},
 CellLabel->
  "Out[464]=",ExpressionUUID->"93c7a04a-e073-4572-906d-44dff271a8f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of medical supplies production rate", "Subsection",
 CellChangeTimes->{{3.7955353017302723`*^9, 3.795535314701345*^9}, {
  3.795562992357071*^9, 
  3.795563012415473*^9}},ExpressionUUID->"13083ba8-00ed-43ec-894d-\
333461b3c6e1"],

Cell["\<\
In order to demonstrate the effect of medical supplies production rate (mspr) \
it is beneficial to eliminate the hospital beds availability restriction -- \
we assume that we have enough hospital beds for all infected severely \
symptomatic people.\
\>", "Text",
 CellChangeTimes->{{3.795565158971141*^9, 3.795565266859865*^9}, {
  3.795597674764045*^9, 3.79559768251436*^9}, {3.7956025006061974`*^9, 
  3.795602510124279*^9}},ExpressionUUID->"a1a60b1c-1ee9-4312-8270-\
9e977d883a96"],

Cell["\<\
Here are calculate the solutions for a certain combination of capacities and \
rates:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 
  3.795565309003253*^9}},ExpressionUUID->"2206fc0a-fd5c-4130-9c07-\
2f936aed7ab6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "msprVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", 
           RowBox[{"SEI2HREconModel", "[", "t", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "100000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MSD", "]"}], "->", "1000"}], ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "msprVar"}], ",", 
               RowBox[{
                RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", "1.5"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "ISSP", "]"}], "\[Rule]", "0.2"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "TP", "]"}], "\[Rule]", "0.001"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "ISSP", "]"}], "\[Rule]", "1"}], ",", 
               RowBox[{
                RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                RowBox[{"100", "/", "1000"}]}]}], "|>"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"msprVar", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "20", ",", "60", ",", "100", ",", "200", ",", "300", ",", "1000", ",",
          "10000"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.795535462982524*^9, 
   3.795535470517447*^9}, {3.795535574644824*^9, 3.7955356259502153`*^9}, {
   3.79553567769163*^9, 3.7955357604599743`*^9}, {3.795535811137045*^9, 
   3.795535880957884*^9}, {3.7955359309335117`*^9, 3.795536034073927*^9}, {
   3.795536161651259*^9, 3.795536189730521*^9}, {3.795543106794696*^9, 
   3.7955431203157387`*^9}, {3.795543178458723*^9, 3.795543203355995*^9}, {
   3.79554328182514*^9, 3.795543320377591*^9}, {3.7955433507418013`*^9, 
   3.795543365591765*^9}, {3.795543403036688*^9, 3.795543483430274*^9}, {
   3.795543541726907*^9, 3.795543736375537*^9}, {3.795544043946135*^9, 
   3.795544130359878*^9}, {3.795544180097293*^9, 3.7955442365476027`*^9}, 
   3.795544538178595*^9, {3.795544595194655*^9, 3.795544646147169*^9}, {
   3.79554472222055*^9, 3.795544750739852*^9}, 3.795544786920904*^9, {
   3.795544818960697*^9, 3.795544884254778*^9}, {3.7955449363568687`*^9, 
   3.7955450028638268`*^9}, 3.795545102522052*^9, {3.795545176592492*^9, 
   3.795545269517124*^9}, {3.795545426741288*^9, 3.795545522896562*^9}, {
   3.795545632167034*^9, 3.79554568327673*^9}, {3.7955457340172653`*^9, 
   3.795545771162369*^9}, {3.795545854866557*^9, 3.795545926449738*^9}, {
   3.7955459580991*^9, 3.795546008542389*^9}, {3.7955466355494223`*^9, 
   3.795546786953774*^9}, {3.7955468520256233`*^9, 3.7955468649855556`*^9}, {
   3.79554690224717*^9, 3.79554692666833*^9}, {3.795547003239843*^9, 
   3.7955470524341307`*^9}, {3.795559900628643*^9, 3.795560028780301*^9}, {
   3.795560074163666*^9, 3.795560187642342*^9}, {3.7955611986175423`*^9, 
   3.795561208316094*^9}, {3.795561275860918*^9, 3.7955612762565413`*^9}, {
   3.795617341850153*^9, 3.795617372672542*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"2822791a-8cf6-4ca7-b5c6-af7fbc6ffe72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.142803`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.795608090048958*^9, 3.79560951357137*^9, 3.795615852699739*^9, {
   3.795617344290226*^9, 3.7956173768636923`*^9}, 3.795618935665255*^9, 
   3.795618970519265*^9, 3.795620006270146*^9, 3.7956200752672577`*^9},
 CellLabel->
  "Out[465]=",ExpressionUUID->"0731e218-2da0-4fd6-a84c-61f44026c386"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospitalized Population", "Subsubsection",
 CellChangeTimes->{{3.795563051103643*^9, 
  3.795563053096005*^9}},ExpressionUUID->"cf8e4b4a-82ba-4121-94fc-\
9ec82cb08646"],

Cell["\<\
As expected we can see that with smaller production rates we get less \
hospitalized people:\
\>", "Text",
 CellChangeTimes->{{3.795565316248878*^9, 3.7955653471752033`*^9}, 
   3.795603426000639*^9},ExpressionUUID->"d0bc4244-6bb1-4565-a478-\
5a061d84b687"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "1232", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"180", ",", "240"}], "}"}], "]"}], ",", "Above"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\nproduction rate\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.795534777979782*^9, 3.795534796956739*^9}, {
   3.795535348026557*^9, 3.7955353481371813`*^9}, {3.795535394164115*^9, 
   3.795535402712393*^9}, 3.795543185006671*^9, {3.7955602828778152`*^9, 
   3.795560324712989*^9}, {3.795560497799026*^9, 3.795560525416196*^9}, {
   3.795560913403819*^9, 3.79556100906176*^9}, {3.795561280212948*^9, 
   3.795561312467668*^9}, {3.795600929678321*^9, 3.795600952865465*^9}, 
   3.7956020313614893`*^9, {3.795619976752067*^9, 3.795619987270672*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"64ccaa2c-21e7-4cbe-8253-e5a573cbc8d0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Nydx/emwTN3hNnHyJPwPjdGzpQ==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9zsUEjSXm+bdOuiI/wHLmNEX
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
WH/beivDkbhl8P2bsP42OeWK/wNGV8bM
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHlczGsbh6eyF7IcQmlKq6KJEHL6ikoppdJepqlpX2a3hOZoIbQhSykj
yloqWSK9KfsRIdk1dCgiSUQ6eb0f9/zxzj99ru75/q55Zub3PPc9Opw4N64y
g8GIVWIw/vf396PTmvH/D/DbUtvwTkD/H4KNwYt3W27NIlaHyXi7i9uDCojH
onG1hm5zWgmxBh4nOgXVhJ0h1sTkuUY8N241MROXhip1taXXEeuibd1TX67V
dWI9vP8SzNo6o57YAJNSWgc1zLpLbIQDrNZjo7vuE0/FvyOvVZnVNxGb4vUp
7qW+q4+Jp6P1qtv05uZnxCyoOG6t81aTE5sjvb8swavyJfEMsAR3JpevaiGe
ibaSWGW3Ja+JLSCzXxJobdpKPAs69w7Y5+u9JZ6Nms0llSdmtBPPwWWRrv0l
rw/EllhU28NyzP5IPBc39locCv2q+Bzm4VDNrd7PZl3E8zF3cHe94erPxFaw
eRpu8PZON/EC1Bk4nTSx/Er8JzwPREd0lvUQW8Pr5Atduz+/EwMlnz2NHV/0
/mYpEKLJHGS8o4/qC6E75ju0A/upvhDWbFe9BUwGftdtcEXL4/gtLaXfLLVB
SuIc3VVGylRfhP6ipKSfUKH6Ijxv2aM7M3wA1RcjuRGu7/IHUn0xJg3W6h/y
ZhDVbdFa0bMp4c8hVLfFbFGa9dKjQ6luh+3tRZNXGapS3Q7FLvdjNc+rUd0e
ievZ34M5I6huD45eG+rU1am+BPWXn3wM7SOWLsFnNde3N7tHUd0BjpGzUop6
R1PdAfl5j3UujBhLdUfwN4490Gj+B9UdMbBN3ncjZBzVl0LVymfohiPjqb4U
Tdk3upr/1aC6E+ryVnW3cydS3QlnxjWPOPFyEtWdMfae6nVLgRbVnaGclzTy
vIY21ZehdrBe/8woJtWXIVN/9DNbTx2qu+BT/71ZWKZLdRc4n3uq+cR9CtVd
MbHT93BjmN5vhiuyL2uv+rFFn57vii39s130qw1+c40r0jhOxRbKRpRfjn0u
nSs0vI0pvxxbvi70vlUzlfLLkXjezMF3gSnll+OL/ovpT25Po7wbJjLauUKJ
GeXdkOp6ubYkh0V5N+wcMyqBl2JOeTeUuqLXJGEG5d0har5zbnfyTMq7w648
wUKUY0F5d0zydHHeVj2L8u64majx7HTXbMp7YF9Di8e9OZaU94DF5tnL76TP
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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {7}}]& ], 
         "10000"], Annotation[#, 10000, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {7}}]& ], 
         "10000"], Annotation[#, 10000, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {7}}]& ], 
         "10000"], 
        Annotation[#, 10000, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135339, {7}}]& ], 
         "10000"], 
        Annotation[#, 10000, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {238.89894829134738`, 453.29649520862756`}], 
              Offset[{0., 0.}, {238.89894829134738`, 453.29649520862756`}], 
              Offset[{0., 0.}, {240.44537578501797`, 525.3935402880744}], 
              Offset[{0., 0.}, {240.44537578501797`, 525.3935402880744}], 
              Offset[{0, 0}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 5}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 10}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 10}, {241.99180327868854`, 597.4905853675212}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {238.89894829134738`, 453.29649520862756`}], 
              Offset[{0., 0.}, {238.89894829134738`, 453.29649520862756`}], 
              Offset[{0., 0.}, {240.44537578501797`, 525.3935402880744}], 
              Offset[{0., 0.}, {240.44537578501797`, 525.3935402880744}], 
              Offset[{0, 0}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 5}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 10}, {241.99180327868854`, 597.4905853675212}], 
              Offset[{0, 10}, {241.99180327868854`, 597.4905853675212}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, 23.}, {241.99180327868854`, 
               597.4905853675212}], 
              
              Offset[{8.500000000000002, 10.000000000000002`}, {
               241.99180327868854`, 597.4905853675212}], 
              
              Offset[{-8.499999999999998, 9.999999999999998}, {
               241.99180327868854`, 597.4905853675212}], 
              
              Offset[{-8.500000000000002, 23.}, {241.99180327868854`, 
               597.4905853675212}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["20", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {241.99180327868854`, 597.4905853675212}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {190.7109651232576, 1344.665975777244}], 
              Offset[{0., 0.}, {190.7109651232576, 1344.665975777244}], 
              Offset[{0., 0.}, {192.35138420097306`, 1416.763020856691}], 
              Offset[{0., 0.}, {192.35138420097306`, 1416.763020856691}], 
              Offset[{0, 0}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 5}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 10}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 10}, {193.9918032786885, 1488.8600659361377`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {190.7109651232576, 1344.665975777244}], 
              Offset[{0., 0.}, {190.7109651232576, 1344.665975777244}], 
              Offset[{0., 0.}, {192.35138420097306`, 1416.763020856691}], 
              Offset[{0., 0.}, {192.35138420097306`, 1416.763020856691}], 
              Offset[{0, 0}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 5}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 10}, {193.9918032786885, 1488.8600659361377`}], 
              Offset[{0, 10}, {193.9918032786885, 1488.8600659361377`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.69916713844298, 23.}, {193.9918032786885, 
               1488.8600659361377`}], 
              
              Offset[{8.699167138442984, 10.000000000000002`}, {
               193.9918032786885, 1488.8600659361377`}], 
              
              Offset[{-8.300832861557016, 9.999999999999998}, {
               193.9918032786885, 1488.8600659361377`}], 
              
              Offset[{-8.30083286155702, 23.}, {193.9918032786885, 
               1488.8600659361377`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.19916713844298278`, 16.5}, {193.9918032786885, 
             1488.8600659361377`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {234.65877864828437`, 1762.9107772476716`}], 
              Offset[{0., 0.}, {234.65877864828437`, 1762.9107772476716`}], 
              Offset[{0., 0.}, {234.82529096348645`, 1835.0078223271184`}], 
              Offset[{0., 0.}, {234.82529096348645`, 1835.0078223271184`}], 
              Offset[{0, 0}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 5}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 10}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 10}, {234.99180327868854`, 1907.1048674065653`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {234.65877864828437`, 1762.9107772476716`}], 
              Offset[{0., 0.}, {234.65877864828437`, 1762.9107772476716`}], 
              Offset[{0., 0.}, {234.82529096348645`, 1835.0078223271184`}], 
              Offset[{0., 0.}, {234.82529096348645`, 1835.0078223271184`}], 
              Offset[{0, 0}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 5}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 10}, {234.99180327868854`, 1907.1048674065653`}], 
              Offset[{0, 10}, {234.99180327868854`, 1907.1048674065653`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.999999999999998`, 23.000000000000004`}, {
               234.99180327868854`, 1907.1048674065653`}], 
              
              Offset[{11.000000000000002`, 10.000000000000004`}, {
               234.99180327868854`, 1907.1048674065653`}], 
              
              Offset[{-10.999999999999998`, 9.999999999999996}, {
               234.99180327868854`, 1907.1048674065653`}], 
              
              Offset[{-11.000000000000002`, 22.999999999999996`}, {
               234.99180327868854`, 1907.1048674065653`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {234.99180327868854`, 1907.1048674065653`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {180.17940644935425`, 2706.4984538476756`}], 
              Offset[{0., 0.}, {180.17940644935425`, 2706.4984538476756`}], 
              Offset[{0., 0.}, {178.59380158533287`, 2778.595498927122}], 
              Offset[{0., 0.}, {178.59380158533287`, 2778.595498927122}], 
              Offset[{0, 0}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 5}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 10}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 10}, {177.0081967213115, 2850.6925440065693`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {180.17940644935425`, 2706.4984538476756`}], 
              Offset[{0., 0.}, {180.17940644935425`, 2706.4984538476756`}], 
              Offset[{0., 0.}, {178.59380158533287`, 2778.595498927122}], 
              Offset[{0., 0.}, {178.59380158533287`, 2778.595498927122}], 
              Offset[{0, 0}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 5}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 10}, {177.0081967213115, 2850.6925440065693`}], 
              Offset[{0, 10}, {177.0081967213115, 2850.6925440065693`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.263451536589185`, 23.000000000000004`}, {
               177.0081967213115, 2850.6925440065693`}], 
              
              Offset[{10.263451536589189`, 10.000000000000004`}, {
               177.0081967213115, 2850.6925440065693`}], 
              
              Offset[{-11.736548463410811`, 9.999999999999996}, {
               177.0081967213115, 2850.6925440065693`}], 
              
              Offset[{-11.736548463410815`, 22.999999999999996`}, {
               177.0081967213115, 2850.6925440065693`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["200", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.7365484634108133, 16.5}, {177.0081967213115, 
             2850.6925440065693`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {190.04957356494884`, 3973.1423693373376`}], 
              Offset[{0., 0.}, {190.04957356494884`, 3973.1423693373376`}], 
              Offset[{0., 0.}, {188.52888514313014`, 4045.2394144167847`}], 
              Offset[{0., 0.}, {188.52888514313014`, 4045.2394144167847`}], 
              Offset[{0, 0}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 5}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 10}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 10}, {187.00819672131146`, 4117.336459496231}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {190.04957356494884`, 3973.1423693373376`}], 
              Offset[{0., 0.}, {190.04957356494884`, 3973.1423693373376`}], 
              Offset[{0., 0.}, {188.52888514313014`, 4045.2394144167847`}], 
              Offset[{0., 0.}, {188.52888514313014`, 4045.2394144167847`}], 
              Offset[{0, 0}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 5}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 10}, {187.00819672131146`, 4117.336459496231}], 
              Offset[{0, 10}, {187.00819672131146`, 4117.336459496231}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.87850009167558, 23.000000000000004`}, {
               187.00819672131146`, 4117.336459496231}], 
              
              Offset[{9.878500091675583, 10.000000000000004`}, {
               187.00819672131146`, 4117.336459496231}], 
              
              Offset[{-12.121499908324417`, 9.999999999999996}, {
               187.00819672131146`, 4117.336459496231}], 
              
              Offset[{-12.12149990832442, 22.999999999999996`}, {
               187.00819672131146`, 4117.336459496231}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["300", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.1214999083244175`, 16.5}, {187.00819672131146`, 
             4117.336459496231}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {230.33367083655884`, 4604.489816307787}], 
              Offset[{0., 0.}, {230.33367083655884`, 4604.489816307787}], 
              Offset[{0., 0.}, {232.16273705762367`, 4676.5868613872335`}], 
              Offset[{0., 0.}, {232.16273705762367`, 4676.5868613872335`}], 
              Offset[{0, 0}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 5}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 10}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 10}, {233.9918032786885, 4748.683906466681}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {230.33367083655884`, 4604.489816307787}], 
              Offset[{0., 0.}, {230.33367083655884`, 4604.489816307787}], 
              Offset[{0., 0.}, {232.16273705762367`, 4676.5868613872335`}], 
              Offset[{0., 0.}, {232.16273705762367`, 4676.5868613872335`}], 
              Offset[{0, 0}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 5}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 10}, {233.9918032786885, 4748.683906466681}], 
              Offset[{0, 10}, {233.9918032786885, 4748.683906466681}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{15.959246145819348`, 23.000000000000004`}, {
               233.9918032786885, 4748.683906466681}], 
              
              Offset[{15.959246145819352`, 10.000000000000004`}, {
               233.9918032786885, 4748.683906466681}], 
              
              Offset[{-12.040753854180648`, 9.999999999999996}, {
               233.9918032786885, 4748.683906466681}], 
              
              Offset[{-12.040753854180652`, 22.999999999999996`}, {
               233.9918032786885, 4748.683906466681}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.9592461458193495`, 16.5}, {233.9918032786885, 
             4748.683906466681}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {211.4589709285678, 5199.559963765508}], 
              Offset[{0., 0.}, {211.4589709285678, 5199.559963765508}], 
              Offset[{0., 0.}, {211.72948546428393`, 5271.657008844955}], 
              Offset[{0., 0.}, {211.72948546428393`, 5271.657008844955}], 
              Offset[{0, 0}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 5}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 10}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 10}, {212.00000000000003`, 5343.754053924402}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {211.4589709285678, 5199.559963765508}], 
              Offset[{0., 0.}, {211.4589709285678, 5199.559963765508}], 
              Offset[{0., 0.}, {211.72948546428393`, 5271.657008844955}], 
              Offset[{0., 0.}, {211.72948546428393`, 5271.657008844955}], 
              Offset[{0, 0}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 5}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 10}, {212.00000000000003`, 5343.754053924402}], 
              Offset[{0, 10}, {212.00000000000003`, 5343.754053924402}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.680807561899584`, 23.000000000000004`}, {
               212.00000000000003`, 5343.754053924402}], 
              
              Offset[{16.680807561899584`, 10.000000000000004`}, {
               212.00000000000003`, 5343.754053924402}], 
              
              Offset[{-16.319192438100416`, 9.999999999999996}, {
               212.00000000000003`, 5343.754053924402}], 
              
              Offset[{-16.319192438100416`, 22.999999999999996`}, {
               212.00000000000003`, 5343.754053924402}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["10000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.18080756189958558`, 16.5}, {212.00000000000003`, 
             5343.754053924402}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 5097.607807613243}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.1358822341898828]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"20", "60", "100", "200", "300", "1000", "10000"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\nproduction rate\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\nproduction rate\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795608090450644*^9, 3.795609514004015*^9, 3.795615853171014*^9, {
   3.7956173448393173`*^9, 3.7956173773704023`*^9}, 3.795618936104163*^9, 
   3.795618970940974*^9, {3.795619989520051*^9, 3.7956200067396173`*^9}, 
   3.795620075658985*^9},
 CellLabel->
  "Out[469]=",ExpressionUUID->"bd1e51c1-56c8-408e-8d21-dc709d13381a"]
}, Open  ]],

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 
  3.79556297488484*^9}},ExpressionUUID->"05d126e0-c41c-4110-8e44-\
47fc1a646a5f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->
  "In[470]:=",ExpressionUUID->"c4339540-57b2-40d9-adff-08fe15a7ca4e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["20",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["200",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["300",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["10000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "122210.52260431084`", "189202.28158652107`", "246653.81517459944`",
      "367051.38254343625`", "455566.2165947149`", "484367.80444473366`", 
     "484367.8028544024`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.795608090527054*^9, 3.795609514056291*^9, 3.795615853226234*^9, {
   3.795617344902418*^9, 3.795617377440597*^9}, 3.795618936174869*^9, 
   3.795618970992715*^9, 3.795620006803334*^9, 3.795620075735077*^9},
 CellLabel->
  "Out[471]=",ExpressionUUID->"f093437d-2eb3-4797-96fe-69fac2d807d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "aAUCs", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795620024080208*^9},
 CellLabel->
  "In[472]:=",ExpressionUUID->"d913eed1-93ae-47fa-99e6-6ee69eae773a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             122210.52260431084`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{50.19294117647059, 90.12954620784687}, {
            50.35135598198082, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 122210.52260431084`]& ,
         TagBoxNote->"122210.52260431084"],
        StyleBox["122210.52260431084`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[122210.52260431084`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8680062164130772, 0.6494578114512446, 0.7674711614002543], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             189202.28158652107`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{93.8946834751628, 133.83128850653907`}, {
            24.325194998650645`, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 189202.28158652107`]& ,
         TagBoxNote->"189202.28158652107"],
        StyleBox["189202.28158652107`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[189202.28158652107`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9309744437858168, 0.7501492631711724, 0.6096532847000884], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             246653.81517459944`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{137.59642577385497`, 177.53303080523125`}, {
            2.005392016621272, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 246653.81517459944`]& ,
         TagBoxNote->"246653.81517459944"],
        StyleBox["246653.81517459944`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[246653.81517459944`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9232657102424098, 0.9494225513281427, 0.6743424543730028], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             367051.38254343625`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{181.29816807254716`, 
            221.23477310392346`}, {-44.7688160046189, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 367051.38254343625`]& ,
         TagBoxNote->"367051.38254343625"],
        StyleBox["367051.38254343625`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[367051.38254343625`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5740818818546858, 0.7899035061029623, 0.9519407442352278], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             455566.2165947149}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{224.99991037123937`, 
            264.93651540261567`}, {-79.15664751450784, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 455566.2165947149]& ,
         TagBoxNote->"455566.2165947149"],
        StyleBox["455566.2165947149`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[455566.2165947149, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             484367.80444473366`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{268.70165266993155`, 
            308.63825770130785`}, {-90.34600533028292, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 484367.80444473366`]& ,
         TagBoxNote->"484367.80444473366"],
        StyleBox["484367.80444473366`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[484367.80444473366`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.43129600788417843`, 0.7097730044245495, 0.9270770013728963], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
             484367.8028544024}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{312.4033949686238, 
            352.3400000000001}, {-90.34600471244251, 98.32989339434131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 484367.8028544024]& ,
         TagBoxNote->"484367.8028544024"],
        StyleBox["484367.8028544024`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[484367.8028544024, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.4107501820830298, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["20", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["60", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["100", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["200", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["300", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["1000", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["10000", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.795608090583482*^9, 3.795609514119268*^9, 3.79561585329827*^9, {
   3.7956173449743834`*^9, 3.795617377500773*^9}, 3.795618936258101*^9, 
   3.7956189710533543`*^9, {3.7956200069016542`*^9, 3.795620025940839*^9}, 
   3.795620075798808*^9},
 CellLabel->
  "Out[472]=",ExpressionUUID->"9a321f1f-d7ff-4ee9-8bf6-699040f5eb1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies", "Subsubsection",
 CellChangeTimes->{{3.795563039753837*^9, 
  3.795563044062641*^9}},ExpressionUUID->"00ab6c0e-318c-4493-bf1d-\
6a6383c55eaf"],

Cell["\<\
Here we plot the availability of MS at MS producer\[CloseCurlyQuote]s storage:\
\>", "Text",
 CellChangeTimes->{{3.795565353284425*^9, 
  3.795565371621876*^9}},ExpressionUUID->"189e0ec6-6f14-460e-a164-\
df9814dfaa0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "821", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "MS"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "MS", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"100", ",", "160"}], "}"}], "]"}], ",", "Above"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\nproduction rate\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.795534777979782*^9, 3.795534796956739*^9}, {
   3.795535348026557*^9, 3.7955353481371813`*^9}, {3.795535394164115*^9, 
   3.795535402712393*^9}, 3.795543185006671*^9, {3.795543509101215*^9, 
   3.795543512688059*^9}, {3.795560406737671*^9, 3.795560483970497*^9}, {
   3.7955605524637613`*^9, 3.795560555319584*^9}, {3.7955610292542953`*^9, 
   3.79556104438737*^9}, {3.795561329063559*^9, 3.795561336576962*^9}, 
   3.7956009809682217`*^9, {3.795602016929503*^9, 3.79560202215984*^9}, {
   3.7956199170488873`*^9, 3.7956199509593353`*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"773424bf-b27b-4847-8bd7-ace1a49c764d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxNl3tczFkfx4dCtS7ZUCKSW5GEitz6FColSiWVaqrp3tTceXjaRrZlLSv3
ux2rRSGWdrdc1rhtQjbrUu6RUJSSokiPZ51jvv0zr3ef8zmf+Z7z/Z3zm0FR
qXNjOgoEgpQOAsH/Pz//1bv8+5H4DuwfaJ76075zIs4G6NzQb3NOBGdjZNiI
C9eEcO6Fy2bvDykDOZuhOWWgVagv5/64+mz23y7enC0RVV+1aLA7ZyuM89av
6eTKeQjuZB5sfDqJ8zBEe45K+suJszXeOt6xzh7DeQReLhd0UdtytsWxPj0e
BQ/nbIdVo2vWjbHibI+mpcHvOltwHoPatt0vb5tyHgvflG5euV9zHgf7nHPV
C7txdsCOhhl73Aw4O6Jy6qJZRnqcnfBKbVN4te0t4/GIuG5yYs07zhNgZPPd
IJ9Gzs5wH+xZ2LmO80RUlUTOOvmc8yRYvm7eLa7kPBlJKw2/MX/AeQraJszb
fbac81RkHbUojrnO2QW/bqrL07vKGThhHG2w4yJjNbAu7avldue47orFRV+X
Hz/FdVdI+upno4DrbvD4fs2Pp49y3Q139T2dxh/i+jSUzA522LeP69OwpsSz
f4+fuT4du15GLEnZwfXpuOizr/z8Jq7PwNDsU/k913J9BlxvbFgR8APX3XFh
bOuFVZlcd0fuDyZlhelc98Ct350t7v6H6x7IsRY1vJJz3RN+p4bveSvmuic6
nzm0sCGO6zNR+HTQgXuRXJ+JK+fKxAWhXPfCtbbSJ8sCue4FYKzN1Dlc90ac
4Wv3p55c94ZD7ofJS9y4PgvlTnnv30/i+iz03bRDFOfIdR+8WOI586Qd132w
9OG9xJbhXJ+NfsbLFlkM4vpsNBZ86D7cnOtz0Ov84j96mXB9Drz6rHz65Cuu
+6LI5I/WjfqM4QvfvCmTh7U1s/G+yF4ddnt9E2OtL0qyJj+/V8tY4IfgujZR
exVj+GG3Y+aIlvvc74fqM/c/FN3kfj9sj65SJZRw/1ys/Lh5wN3z3D8Xqg9d
vMxPcv9ctDlnOg05xv1zMfW5+lVTDvf7Y9n1IaGrNNzvD7N7KxyebOJ+f8z3
DjBoXcX9/ih3ezv2Ugb3B0A7vfi+7yLuD0Djz94fvhdzfwDMpjvPlEZxfwDi
XuVP6xjE/YGQVw6xneDN/YEYvrd3ezcX7g/EP/9cU3wzlvsDsTCv9v2yodw/
D9YK/3wzM+6fh7WXHyU5GXH/PFj1M99+630T88/DpS0bhK9fMhYEYXGKe1rG
fcYIgpeo1CW9hLE6CHtN03+pOMn9QdCz+sVy1wHunw8717UX87Zy/3z0bn08
wHA598/HrcF2U/bIuX8+Fje1b5NFcH8wToy0dU724v5gXEixif/WgfuD0bWn
oD7PgvuD0fRz2Z0Hnbg/BOmawes6175h/hCcNetzyfQ6Y3UIdte7JugVMNaG
4Lco6Y+F2xkLQjHM7OBSm2+4PxRDE1tzXSO4PxRFDVcyX03l/lB8E/B+40AL
7l+A9QYrQ0+1NDL/Aiwdc9r92A3G6gXQxBzNqTnEWLsAl92uHPDOZCwIQ7sw
c9KpEO4PQ68Dre1D7Lg/DM6TxN5x7a+ZPwyPB63Vi7vKWBCO7NQtmzttZ4xw
2I8K/mgVw1gdjlmHVRk7bbk/HDHfrizya2hg/gi8iRJeND/GGBHQ+thuuyZl
rI5A1627pT6jGGsj0KcuLTe6qp75hXjd/nfCs62MLYUorblwN8eLMYQQ9RW0
NNa9+sxCIXr69zrkCcZqIWaU1ZQ9XVH3mTVClFRWPQy7WMvyhNg3rN/NCR9f
fuYKIWwLox3bbBgLIlF4s9Z+pPcLlh8J1aX06imRNSw/Eg+qW6xzk6pZfiQm
n7nz4GHCc5YfiawhO+Z4hj5j+ZE4a5rn5uHylOVHQjDtkHBi7yqWH4ldfdOP
L7pXyfKjUDjT5pr/hscsPwpGfcdOL5j8iOVHYcD5Sb3HHXnI8qNQ/p/0rruv
3GP5Ufi9clO/rJLbLD8KC8ZtLbny6y2WH4URN5bmmC+6zvKjUCLpGu4wsJTl
R+PaQ6nFFu9ilh+NV0WbFpj2PsvyoxGeV74x0P43lh+NR/tX7RVv0rD8aDzd
knv6ZskKlh+NgrM+552N5Cw/Gus81tXsGhXB8j+N189MLXLzYfkiKEdpd9X1
dmX5IkS2Hy3Y6eTM8kWoGhAf0VrjyPJFCD5zonpXvgPLF2Hr3ZQgmRtjjQj+
3ff/KTVjrBWhR/8W048GjCtEOLyz/MlsPcaCGLzYcXv1+A6MLWPQ3cJ1p0zA
GDEI7/TViBGchTG4n1Cd0YOzOgZm7qX5nThrYqDKj+3bkbM2Bn/a518QcK6I
ARYe9/zCglgcvKQ1/8KWsfjrvzcNvzBiIfD4Se8LC2Nxfk9ghy+sjkVzW5rg
C2ticSzZTsfaWJR79tRxRSy2re+sY0Echi/pqGPLOEg8OugYcahKFOhYGIdn
h9va29vHsfw4OMwirInDwTzi18Yh+g7xV8QhZECrbrwgHtZlH3VsGY/s/t1I
fjxSRxqQ/Hg0rK8m+fE48OIlyf8030+2JD8evRcOI/nxiHAh9QoS8G6cBak/
AQl6Vbr5kIC0oF4kPwFrNhvpWJ0At1FdyPonIMeZzK9NgPhHWn8C5s8kLEjE
w2/bSf2JEJkQHYm4/5jowkTEdCK6OhF7upH11iSiq5zo2kRc9iD+ik/z9yDj
BUmYX0LYMgkBe8h+IgmpHQkLkxBiROpVJ8GqmKyHJglnm+t147VJKKytI/lJ
GGg+kuQnY0QvR5KfjIBm0p9IxsQKuv/JODtOj+QnY0kl6R9NMsQPSL3aZLSL
aP3JsDlPWCCG4QCyXpZi/HOCzAcxyjNIvwrFmFPcQvpPjJJFZD6NGNNX03wx
Rq4j4yvEEF2l/ZeChl8GkvwUOL0zI/WnIN2zguSn4PThCyQ/BW76b0l+Copc
Gkl+CnqqyPevSEGGG6lXkIodFrT+VNgtJ4xU5E8hLEyFwUpSnzoVzxPp+qdi
izsZr01FPz3CFalI+5qMF0iQ1kJ0Ywl2ZpB+spSg8El3HdtLcDiank8SlJfX
6ubzlSDbi8wvlKD4mJVuvESCJ1NIP6klqLtA+i1Lgr+s6PMkwbVx5PsdkWAJ
fX61EsTYkPUolWB2Fu03CQzLCNdLsLee9p8Ur98RNpYivo2eB1Is/EjYXorV
rYQhxVbKvlIcp+stlKLdkLBEimnv6f5JUVpNOEuKU/R80UhRFk7rl2LAI1q/
FKaNhEulODmQcIUU+qFkP+qlKKn9QOqXoUNfohvLsDub3kcybDA11LG9DMN/
IwwZaiOI31eGA28qyf7L0CW3SMcSGZp+uErql6H4dxPdfFkyND/cT+qX4VYX
Z919e0SGVJN7pH4ZCveHkfplaL0xmtQvg//ETjqul+Gghj7/cqzOoPsvh8Eb
sn6WcozXELaXY/Qbuv9y/Hscc91XDuWf9L6Q48hGwhI5uuuT8Wo5NgwlnCXH
pGP0PJNjDOUjcuhNofe7HLFx5DwulePXVMIV8k+/6Gn/y2FdSu9/BVwayf1i
rMDSJ2R/LRUoLSbvA/YKPNpGz2cFFMdp/yswypLcT0IFjG6+J/UrkDmQvr8o
sDaYjM9S4Hk8Pc8+jX9H6j2iQGhHer4rELCRrF+pAuaV9PlXoKA/0esVuHqQ
Pv9KpJfQ/ldi/VL6/CvhEkb89kocHE33X4ni8aQeXyWGX6f3tRLfVZPzTaKE
5z7S72olThuZkvqVGDyC5Gk+zWf9huy/Eqccaf1KfMyh558SgTdp/UqUX6L7
r8SzXbR+FXbS+8dYhTMfaP0qRND7xF6FpDTCUGGLMWFfFW7Q81aogp8f0SWf
+ChhtQovmsj6Z6mQeYfc1xoVLsnJ+8wRFfqbkPdPrQp/BJH1KVWhcgvptwoV
/Nn+/A++V8Tl
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
sz4RpVeSBZ/ZkAinYUONXJ+IXnusjCxIQsDbDkYWJqF4sZmRkYRngQIji5Nw
btebjx8/zmD5SdiygLA+Cd0mmJP8JJgmmpD8JLh0azKuFyRDtP4/RhYm4+YK
Z5KfjC1DB5D8ZKTsPUTyk7Ep6DDJT4bL+kySn4xglz0kPxn6uxNJ/xQU3PmK
9E9BRk0nkp8C2VlTkp+Cbbakjy4FNolkPvoUbBASNqSgaelH4/3VpyB7CGFB
KlSHCAtTkTmY+JGKESFEF6fC05awLhVKR3I/+lQ0RxE2pGKX9weSn4pr58i8
BVJYyTqT/lIolpL9ACnEps9JvhQrg56SfCniEkeRfCmW7PAm+VJIy0pJvhQW
w1+S/DQ4R9L+ae2/D5L7RRp6O9H+abicS/unwbeasD4Np7rQ+afh4Qc6/zQs
sie6IB2uE2l+Ohb2pfnpuGhOWJyOibeIX5eOkbMJ69MRf/2dcb0hHfCm+z8d
l4s7knwZfj/QQvJlmKmpJfky9NhJ5i2WoeTYSJIvQ7i5H8mXYdejIyRfBjtL
f9JfBsc1J8n8M1Bk+ifJz8DDFeR9bv9r907be5KfgbMlZP/oMrBbRefffr0a
woYMTPiZzj8Dl47T/S9HjywyP2s5ltgSFsoh+0DyXOXYFkF0yGG6lbyfAXJU
/0zWi+VoUbw2slyO7142k/uXoy2S7P9cOcb52ZJ5yrHQgvQvkuOP17tIPzmm
Tioyco0cJV9sJ33lWJR228hNcvi10PNPAX/6flsrELyV7kcF+hUSdlVgvoT2
V2CBLbm/AAXyvN6S/gpMbyB+uQIFYnK+6xSoPPy3Uc9VIE5G5qNXYJeUzLNI
gQPJ5Lw0KPB+Onk/ahQ4vZrMs16BrQOJ3qSAzxfkeQmUeLCd9ldi2WnSR6hE
3SHyPXFV4kg5uR8okfMfcv2Adr3CwrherERBMjnP5UrYptwhz18Jnfoa6a/E
H552xvV6JdQ+MHKREhtrbUh/JYad6GHkGiUynUh+vRK+xaRvkxI96sh5IFCh
11KBka1V8FSQ5yNUQepC+6sQfpbMCyo4jiQcoMKZi8QvVuGUjrBchY5traS/
Co2iBtK/ff0Jct7oVVgpJv2KVCjWkvPHoIKokZxnNSo4bXQg/VXoBDL/JhUK
Z9Pnr4b1OcLWatwtJvMQqhH2kLCrGtX0/IUaoY9pfzVclEQXq9HrJt3/auxZ
Tfa7Tg336lekvxqeVXT/q/HLc7r/1QhaZEn6q6HeSJ5PjRqPc8g869WwabhP
9r8aJ/qT80igwV03sn+tNUg+T1ioweIM+v5rUBRMn78GJStofw3gTvtr8EsR
7a/B0kb6/dSg7jDZH7ka5L8h+1evQdApayMXaTC8pgvpr8Gph2SeNRqsmk6+
J/UadHf+i/TXoLDvl0a/QItKOg9rLUYU0PNPizO36fmvxaKF9P3XYl4m7a9F
XT79fUGLt2dofy3S/6b9tfhAv1e5Whxto98zLXaPIfMs0qJvE/2+aTHyEuEa
LariyPr69utt+cT/BUmyAMs=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
pZFFSbg80szISEKFZS8jS5LQs/9lT09PGMtPgvnmF0bWJaGv2ILkJ6EsgDyv
LgntXfeN6wXJsD372MiiZMytdSb5yVhVHUHyk/HbuTKSn4yNWkeSn4zmBpqf
jBjxCaNel4xEO1NSfwoCcsj+RSlI7/nTyEiB20EByU/BovC3JD8FJwJI/3Qp
+MWPPF+fgj5Du0l+ClY2kH4IUtGwhOiiVNy+do/kp8Ihg/RHkopja0meNhXD
+vxO6k/FtvRWI+tTURA+m/Q/FWtsa0j/0/DpF5UkPw0thR+Q/qfBxa+L5Kfh
T9shJD8NG9+Yk/rTsHtOG8lPQ4VLD6k/DdhAWJCOzzrfkPx0TMptJ/Wn43C1
K+l/OjJEcpKfjpk+z0n96Sju3Ujy0xFWn0PqT4dGZUP6n4GB1wcYWZSBd/bT
+c9AsLA3yc/Al55k/9oMjP7mD5KfgbaRJsb1+gwMPdmH5GfA5DQ5T4JMfHlA
QPIzYbOQMDLhO4KwJBO3BhDWZqLZjLAuE/4dZH/6TCzvof3PxJH+ZL0gC3GN
RBdl4cYdwsjCQTHNz8LdEWT/2izY3aD5WSizovlZyJxFzktdFgZ4kX4KZJik
J/0WyrAjmDxfJMOxo+T9OsnQM4TMF2TYWDTKuF4sQ4O7O9mvDPuujjSyTAav
TpKnlWFICNlPngzjfEi+ToY9OaS+Ihk+nEhYL8NP/QhXyfDbU9pvGaq/Js9v
lSGhoi+pX45NJsNI/XK0FY4g9cuR8iG5z5zkSOog5x1yNK28a2SxHP1z6LzK
kdsSTuqXo8KRnG+tHOJucp7z5FA+/pjMsxzq2itGLpJjilkzeb9/7aeY3F9V
clwR0frl8LhO3n+rHJ3f0vOvQAo9T0IFzAbTeVQgzI3010kBi1GEoYDjArJe
rIBfCdElCjyZT86fTIHZoYS1CggDyf7yFDAPJveRTgGPenKeixQYfWOQkfUK
eH5K5qVKAV3uU1K/AjHfku9JqwIvTB2M6wVKvD/wHSMLlSi3OEzqV8Jk+hky
/0rIWxNJ/Up4Lx5tZLESLyeQ+1iihPUhMj8yJaLHkPnQKrGrmOw/T4mg8aR/
OiV8VhEuUuLPsfR8K1FbROqrUsJxM7kP65SQaMj6ViXMztLvnwpKX9JfoQoF
9h2kfhWEKeQ+d1JhvbCTzL8K5X2nkvpVSN6zjtSvwk+j8kn9KpQKg0n9Kpx9
RJ6Xp8KPrWS+dSpY6kl9RSrk1ZP+6VUYtZX0p0qF8x/R+Vdh4TlavwpPC+j8
q9GUTb6vQjXybpA8kRolOjKfTmoUyUi/oMaNVyRfrMYJW1KPRI0gZ/I9lamh
G0m/X2qkx5L+5akxsE+8kXVqtFZlGrlIjTIhuS/0arzZRPZTpcY2c8J1f+3v
FpmvVjV2pZL9CjTwLSQs1OCj8/T8a/DgLWEnDb60od8nDWZWkP6INXC1IM+T
aLAgi7BMg2X/V78GQ5bR86/B/m7yfnUa5EeT/+eKNCh6SerRa7CP3jdVGrTJ
Cddp4OXyN/8Hw72mvg==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
3DvyVcj8gUbSX4+LJx6XhDmfwH8A/4Hkbw==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Ocp/ftF/EO3/bb33f+VG/o1e/i+iBjxG
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {7}}]& ], 
         "10000"], Annotation[#, 10000, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {7}}]& ], 
         "10000"], Annotation[#, 10000, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {7}}]& ], 
         "10000"], 
        Annotation[#, 10000, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {1}}]& ], 
         "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {3}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {4}}]& ], 
         "200"], Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {5}}]& ], 
         "300"], Annotation[#, 300, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {6}}]& ], 
         "1000"], Annotation[#, 1000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$135919, {7}}]& ], 
         "10000"], 
        Annotation[#, 10000, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {146.91033711992702`, 37547.829115058754`}], 
              Offset[{0., 0.}, {146.91033711992702`, 37547.829115058754`}], 
              Offset[{0., 0.}, {147.95107019930776`, 38952.476190509115`}], 
              Offset[{0., 0.}, {147.95107019930776`, 38952.476190509115`}], 
              Offset[{0, 0}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 5}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 10}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 10}, {148.99180327868854`, 40357.12326595947}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {146.91033711992702`, 37547.829115058754`}], 
              Offset[{0., 0.}, {146.91033711992702`, 37547.829115058754`}], 
              Offset[{0., 0.}, {147.95107019930776`, 38952.476190509115`}], 
              Offset[{0., 0.}, {147.95107019930776`, 38952.476190509115`}], 
              Offset[{0, 0}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 5}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 10}, {148.99180327868854`, 40357.12326595947}], 
              Offset[{0, 10}, {148.99180327868854`, 40357.12326595947}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.383134415833728`, 23.}, {148.99180327868854`, 
               40357.12326595947}], 
              
              Offset[{10.383134415833732`, 10.000000000000002`}, {
               148.99180327868854`, 40357.12326595947}], 
              
              Offset[{-6.616865584166268, 9.999999999999998}, {
               148.99180327868854`, 40357.12326595947}], 
              
              Offset[{-6.616865584166272, 23.}, {148.99180327868854`, 
               40357.12326595947}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["20", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.8831344158337302`, 16.5}, {148.99180327868854`, 
             40357.12326595947}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {159.1415336121948, 3228.0975313816584`}], 
              Offset[{0., 0.}, {159.1415336121948, 3228.0975313816584`}], 
              Offset[{0., 0.}, {160.56666844544165`, 4632.744606832016}], 
              Offset[{0., 0.}, {160.56666844544165`, 4632.744606832016}], 
              Offset[{0, 0}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 5}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 10}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 10}, {161.9918032786885, 6037.391682282374}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {159.1415336121948, 3228.0975313816584`}], 
              Offset[{0., 0.}, {159.1415336121948, 3228.0975313816584`}], 
              Offset[{0., 0.}, {160.56666844544165`, 4632.744606832016}], 
              Offset[{0., 0.}, {160.56666844544165`, 4632.744606832016}], 
              Offset[{0, 0}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 5}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 10}, {161.9918032786885, 6037.391682282374}], 
              Offset[{0, 10}, {161.9918032786885, 6037.391682282374}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, 23.}, {161.9918032786885, 
               6037.391682282374}], 
              
              Offset[{8.500000000000002, 10.000000000000002`}, {
               161.9918032786885, 6037.391682282374}], 
              Offset[{-8.499999999999998, 9.999999999999998}, {
               161.9918032786885, 6037.391682282374}], 
              
              Offset[{-8.500000000000002, 23.}, {161.9918032786885, 
               6037.391682282374}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.5}, {161.9918032786885, 6037.391682282374}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {108.0287239541975, 95160.40262922998}], 
              Offset[{0., 0.}, {108.0287239541975, 95160.40262922998}], 
              Offset[{0., 0.}, {110.01026361644301`, 96565.04970468034}], 
              Offset[{0., 0.}, {110.01026361644301`, 96565.04970468034}], 
              Offset[{0, 0}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 5}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 10}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 10}, {111.99180327868852`, 97969.6967801307}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {108.0287239541975, 95160.40262922998}], 
              Offset[{0., 0.}, {108.0287239541975, 95160.40262922998}], 
              Offset[{0., 0.}, {110.01026361644301`, 96565.04970468034}], 
              Offset[{0., 0.}, {110.01026361644301`, 96565.04970468034}], 
              Offset[{0, 0}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 5}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 10}, {111.99180327868852`, 97969.6967801307}], 
              Offset[{0, 10}, {111.99180327868852`, 97969.6967801307}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.541350303941371`, 23.000000000000004`}, {
               111.99180327868852`, 97969.6967801307}], 
              
              Offset[{11.541350303941375`, 10.000000000000004`}, {
               111.99180327868852`, 97969.6967801307}], 
              
              Offset[{-10.458649696058625`, 9.999999999999996}, {
               111.99180327868852`, 97969.6967801307}], 
              
              Offset[{-10.458649696058629`, 22.999999999999996`}, {
               111.99180327868852`, 97969.6967801307}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.5413503039413722, 16.5}, {111.99180327868852`, 
             97969.6967801307}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {136.94351149150577`, 77417.16746498557}], 
              Offset[{0., 0.}, {136.94351149150577`, 77417.16746498557}], 
              Offset[{0., 0.}, {138.46765738509714`, 78821.81454043594}], 
              Offset[{0., 0.}, {138.46765738509714`, 78821.81454043594}], 
              Offset[{0, 0}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 5}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 10}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 10}, {139.99180327868854`, 80226.46161588629}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {136.94351149150577`, 77417.16746498557}], 
              Offset[{0., 0.}, {136.94351149150577`, 77417.16746498557}], 
              Offset[{0., 0.}, {138.46765738509714`, 78821.81454043594}], 
              Offset[{0., 0.}, {138.46765738509714`, 78821.81454043594}], 
              Offset[{0, 0}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 5}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 10}, {139.99180327868854`, 80226.46161588629}], 
              Offset[{0, 10}, {139.99180327868854`, 80226.46161588629}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{12.915732807002962`, 23.000000000000004`}, {
               139.99180327868854`, 80226.46161588629}], 
              Offset[{12.915732807002966`, 10.000000000000004`}, {
               139.99180327868854`, 80226.46161588629}], 
              
              Offset[{-9.084267192997034, 9.999999999999996}, {
               139.99180327868854`, 80226.46161588629}], 
              
              Offset[{-9.084267192997038, 22.999999999999996`}, {
               139.99180327868854`, 80226.46161588629}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["200", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.9157328070029638`, 16.5}, {139.99180327868854`, 
             80226.46161588629}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {104.89402148028594`, 101297.82707405764`}], 
              Offset[{0., 0.}, {104.89402148028594`, 101297.82707405764`}], 
              Offset[{0., 0.}, {105.94291237948724`, 102702.474149508}], 
              Offset[{0., 0.}, {105.94291237948724`, 102702.474149508}], 
              Offset[{0, 0}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 5}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 10}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 10}, {106.99180327868854`, 104107.12122495836`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {104.89402148028594`, 101297.82707405764`}], 
              Offset[{0., 0.}, {104.89402148028594`, 101297.82707405764`}], 
              Offset[{0., 0.}, {105.94291237948724`, 102702.474149508}], 
              Offset[{0., 0.}, {105.94291237948724`, 102702.474149508}], 
              Offset[{0, 0}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 5}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 10}, {106.99180327868854`, 104107.12122495836`}], 
              Offset[{0, 10}, {106.99180327868854`, 104107.12122495836`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.326897430654503`, 23.000000000000004`}, {
               106.99180327868854`, 104107.12122495836`}], 
              
              Offset[{11.326897430654506`, 10.000000000000004`}, {
               106.99180327868854`, 104107.12122495836`}], 
              
              Offset[{-10.673102569345494`, 9.999999999999996}, {
               106.99180327868854`, 104107.12122495836`}], 
              
              Offset[{-10.673102569345497`, 22.999999999999996`}, {
               106.99180327868854`, 104107.12122495836`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["300", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.3268974306545043, 16.5}, {106.99180327868854`, 
             104107.12122495836`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {151.66169537591907`, 74691.15063860631}], 
              Offset[{0., 0.}, {151.66169537591907`, 74691.15063860631}], 
              Offset[{0., 0.}, {153.3267493273038, 76095.79771405668}], 
              Offset[{0., 0.}, {153.3267493273038, 76095.79771405668}], 
              Offset[{0, 0}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 5}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 10}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 10}, {154.99180327868854`, 77500.44478950703}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {151.66169537591907`, 74691.15063860631}], 
              Offset[{0., 0.}, {151.66169537591907`, 74691.15063860631}], 
              Offset[{0., 0.}, {153.3267493273038, 76095.79771405668}], 
              Offset[{0., 0.}, {153.3267493273038, 76095.79771405668}], 
              Offset[{0, 0}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 5}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 10}, {154.99180327868854`, 77500.44478950703}], 
              Offset[{0, 10}, {154.99180327868854`, 77500.44478950703}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{18.507244281387194`, 23.000000000000004`}, {
               154.99180327868854`, 77500.44478950703}], 
              
              Offset[{18.5072442813872, 10.000000000000004`}, {
               154.99180327868854`, 77500.44478950703}], 
              
              Offset[{-9.4927557186128, 9.999999999999996}, {
               154.99180327868854`, 77500.44478950703}], 
              
              Offset[{-9.492755718612804, 22.999999999999996`}, {
               154.99180327868854`, 77500.44478950703}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{4.507244281387198, 16.5}, {154.99180327868854`, 
             77500.44478950703}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {147.30714328212417`, 99059.02044319484}], 
              Offset[{0., 0.}, {147.30714328212417`, 99059.02044319484}], 
              Offset[{0., 0.}, {148.64947328040637`, 100463.6675186452}], 
              Offset[{0., 0.}, {148.64947328040637`, 100463.6675186452}], 
              Offset[{0, 0}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 5}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 10}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 10}, {149.99180327868854`, 101868.31459409556`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {147.30714328212417`, 99059.02044319484}], 
              Offset[{0., 0.}, {147.30714328212417`, 99059.02044319484}], 
              Offset[{0., 0.}, {148.64947328040637`, 100463.6675186452}], 
              Offset[{0., 0.}, {148.64947328040637`, 100463.6675186452}], 
              Offset[{0, 0}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 5}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 10}, {149.99180327868854`, 101868.31459409556`}], 
              Offset[{0, 10}, {149.99180327868854`, 101868.31459409556`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.138939529771395`, 23.000000000000004`}, {
               149.99180327868854`, 101868.31459409556`}], 
              
              Offset[{17.138939529771395`, 10.000000000000004`}, {
               149.99180327868854`, 101868.31459409556`}], 
              
              Offset[{-15.861060470228605`, 9.999999999999996}, {
               149.99180327868854`, 101868.31459409556`}], 
              
              Offset[{-15.861060470228605`, 22.999999999999996`}, {
               149.99180327868854`, 101868.31459409556`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["10000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0.6389395297713947, 16.5}, {149.99180327868854`, 
             101868.31459409556`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Medical Supplies\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 100000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.13006274179051258`]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"20", "60", "100", "200", "300", "1000", "10000"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\nproduction rate\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\nproduction rate\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795608090944934*^9, 3.795609514534239*^9, 3.795615853740336*^9, {
   3.7956173454176283`*^9, 3.795617377966485*^9}, 3.795618936695475*^9, 
   3.795618971439694*^9, {3.795619949636629*^9, 3.7956199525237217`*^9}, 
   3.795620007315385*^9, 3.795620076187585*^9},
 CellLabel->
  "Out[476]=",ExpressionUUID->"36a2d60a-3c20-4220-a216-ad77f20bc81a"]
}, Open  ]],

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}, {
  3.795563059996977*^9, 
  3.7955630609711*^9}},ExpressionUUID->"15193a5e-99fa-4000-ad0e-3bbec7a86519"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.7955632049989843`*^9, 3.795563214490553*^9}, 
   3.79556327410254*^9},
 CellLabel->
  "In[477]:=",ExpressionUUID->"345560ae-c320-46dd-bd0b-ddfd2a8f5fee"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["20",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["200",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["300",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["10000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "1.2765687302905887`*^7", "1.3251935547096385`*^7", 
     "1.3739428890619205`*^7", "1.4221470558730656`*^7", 
     "1.4493541971924983`*^7", "1.566468848675795`*^7", 
     "2.9749830094500124`*^7"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.795608090989818*^9, 3.7956095145843163`*^9, 3.795615853859599*^9, {
   3.795617345501583*^9, 3.795617378052161*^9}, 3.7956189367852917`*^9, 
   3.795618971492014*^9, 3.7956200073943367`*^9, 3.7956200762398033`*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"63b14462-ec71-49e7-9636-d6313064a990"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563089270934*^9, 3.795563094734707*^9}, {3.795563188877359*^9, 
   3.7955631892435427`*^9}, {3.795563231448268*^9, 3.795563255689892*^9}, {
   3.795563332699952*^9, 3.7955633428676443`*^9}, 3.795619911973071*^9},
 CellLabel->
  "In[479]:=",ExpressionUUID->"221c75fe-2fe5-4f44-8974-d77d8ebe39cc"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             1.2765687302905887`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.03764705882353, 93.48206357186749}, {
            11.619013228591157`, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.2765687302905887`*^7]& ,
         TagBoxNote->"1.2765687302905887*^7"],
        StyleBox["1.2765687302905887`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2765687302905887`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.776992258443742, 0.5069809777887414, 0.9445877292399677], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             1.3251935547096385`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{97.19396979684561, 136.63838630988957`}, {
            8.581744380747239, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.3251935547096385`*^7]& ,
         TagBoxNote->"1.3251935547096385*^7"],
        StyleBox["1.3251935547096385`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3251935547096385`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7920640114224763, 0.5432225195479378, 0.9485886772403557], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             1.3739428890619205`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.3502925348677, 179.79470904791165`}, {
            5.536698226846767, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.3739428890619205`*^7]& ,
         TagBoxNote->"1.3739428890619205*^7"],
        StyleBox["1.3739428890619205`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3739428890619205`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8069672158328822, 0.5790587693688873, 0.9525448823327108], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             1.4221470558730656`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{183.50661527288977`, 222.95103178593374`}, {
            2.525705057390624, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.4221470558730656`*^7]& ,
         TagBoxNote->"1.4221470558730656*^7"],
        StyleBox["1.4221470558730656`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4221470558730656`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8164602934247722, 0.5930050636471301, 0.9316613536322867], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             1.4493541971924983`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{226.66293801091186`, 266.10735452395585`}, {
            0.8262561903624146, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.4493541971924983`*^7]& ,
         TagBoxNote->"1.4493541971924983*^7"],
        StyleBox["1.4493541971924983`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4493541971924983`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8595579711275, 0.6400636711966283, 0.7940118356290689], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             1.566468848675795*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{269.81926074893397`, 
            309.26367726197793`}, {-6.489115881952117, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.566468848675795*^7]& ,
         TagBoxNote->"1.566468848675795*^7"],
        StyleBox["1.566468848675795`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.566468848675795*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
             2.9749830094500124`*^7}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{312.97558348695605`, 
            352.42}, {-94.46961212803292, 91.85775743934168}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.9749830094500124`*^7]& ,
         TagBoxNote->"2.9749830094500124*^7"],
        StyleBox["2.9749830094500124`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9749830094500124`*^7, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.4107501820830298, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox[
        RotationBox["\"20\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        RotationBox["\"60\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        RotationBox["\"100\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        RotationBox["\"200\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        RotationBox["\"300\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        RotationBox["\"1000\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        RotationBox["\"10000\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Medical Supplies\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.795608091046136*^9, 3.795609514668025*^9, 3.795615853928808*^9, {
   3.795617345574704*^9, 3.795617378123905*^9}, 3.795618936866774*^9, 
   3.795618971551896*^9, 3.795620007477667*^9, 3.795620076282393*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"832d912d-f7d7-4b68-8bb9-3594d7e639b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of delivery disruption starts", "Subsection",
 CellChangeTimes->{{3.795596468558853*^9, 3.7955964773461447`*^9}, {
  3.7955969378645678`*^9, 3.795596941317894*^9}, {3.795597999972139*^9, 
  3.7955980031897707`*^9}},ExpressionUUID->"9c479f68-8a47-4689-b1e8-\
08a0c32675d1"],

Cell["\<\
Here we compute simulation solutions for a set of delivery disruption starts \
using disruption length of 7 days and disruption \
\[OpenCurlyDoubleQuote]slowing down\[CloseCurlyDoubleQuote] factor 2:\
\>", "Text",
 CellChangeTimes->{{3.79559565982668*^9, 3.795595681518528*^9}, {
  3.79559740019081*^9, 3.795597404229685*^9}, {3.7955978235016937`*^9, 
  3.7955978757816563`*^9}},ExpressionUUID->"0a3bfcbd-49d2-44c2-b9e8-\
17ede9b1cb22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "ddsVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ddsVar", "->", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"ModelNDSolve", "[", 
             RowBox[{
              RowBox[{"SetRateRules", "[", 
               RowBox[{"modelSEI2HREcon", ",", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", 
                   "100000"}], ",", 
                  RowBox[{
                   RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "1000"}],
                   ",", 
                  RowBox[{
                   RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "100"}], ",", 
                  
                  RowBox[{"ql", "\[Rule]", "56"}], ",", 
                  RowBox[{"qsd", "\[Rule]", "60"}], ",", 
                  RowBox[{
                   RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                   RowBox[{"3", "/", "1000"}]}], ",", 
                  RowBox[{"dbp", "\[Rule]", "1"}], ",", 
                  RowBox[{"dds", "\[Rule]", "ddsVar"}], ",", 
                  RowBox[{"ddl", "\[Rule]", "7"}], ",", 
                  RowBox[{"dsf", "\[Rule]", "2"}]}], "|>"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"40", ",", "120", ",", "20"}], "]"}], ",", "365"}], "]"}]}],
       "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.795594988373721*^9, 3.795595042599126*^9}, {
   3.795595077487207*^9, 3.795595109899185*^9}, {3.795596503068597*^9, 
   3.795596646282609*^9}, {3.7955966869448023`*^9, 3.79559672577597*^9}, {
   3.7955967628590727`*^9, 3.7955968235317793`*^9}, {3.7955974302764378`*^9, 
   3.79559746156117*^9}, {3.795597745215475*^9, 3.795597745549872*^9}, {
   3.795597923260331*^9, 3.795597967313772*^9}, 3.795617129925963*^9, {
   3.795617455518653*^9, 3.795617530838056*^9}, {3.795617666784709*^9, 
   3.795617683561266*^9}, 3.795620120848329*^9, {3.79562017507101*^9, 
   3.795620202625725*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"358a25c5-c2b8-473e-a23e-911a3d4ccb86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.427769`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.795608091431056*^9, 3.79560951510144*^9, 3.79561585441218*^9, 
   3.795617054918624*^9, 3.7956171333930483`*^9, {3.795617460769896*^9, 
   3.795617534240265*^9}, {3.795617673831061*^9, 3.795617689084931*^9}, 
   3.795618937315692*^9, 3.795618972337994*^9, 3.795619759383238*^9, 
   3.7956200767695837`*^9, 3.7956201246235733`*^9, {3.79562017895181*^9, 
   3.7956202063313723`*^9}, 3.7956203041131163`*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"2949d791-6b7e-46cd-b7bc-ee02b3ebecf8"]
}, Open  ]],

Cell["\<\
Note, that disruption start at day 365 means no disruption. Also, we use \
three hospital beds per thousand people.\
\>", "Text",
 CellChangeTimes->{{3.795597890261262*^9, 3.795597912558473*^9}, {
  3.795620228520543*^9, 
  3.795620295078094*^9}},ExpressionUUID->"d062c2dc-74b4-4382-8c28-\
e76b124fbba8"],

Cell["Here we plot the results for HP only:", "Text",
 CellChangeTimes->{{3.795595685872078*^9, 3.7955957289149427`*^9}, {
  3.795596811895562*^9, 
  3.7955968129756193`*^9}},ExpressionUUID->"b0173610-efa7-461a-a412-\
80a2b24d29d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "009", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "140"}], "}"}], "]"}], ",", "Bottom"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndisruption start\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795595056179405*^9, 
   3.795595072738517*^9}, {3.795595157671277*^9, 3.795595199632392*^9}, {
   3.7955952456250753`*^9, 3.795595273084453*^9}, {3.79559570107738*^9, 
   3.795595721873345*^9}, {3.795596715157984*^9, 3.7955967192059383`*^9}, {
   3.795596785347459*^9, 3.79559678763986*^9}, {3.79559684722462*^9, 
   3.795596868577026*^9}, {3.795597125937623*^9, 3.795597323755536*^9}, {
   3.795600995121154*^9, 3.795601030199226*^9}, 3.7956020951052322`*^9, 
   3.795602745931857*^9, {3.795602785753594*^9, 3.795602826434808*^9}, {
   3.79560290956074*^9, 3.795603012400429*^9}, {3.7956030503956003`*^9, 
   3.795603128198551*^9}, {3.7956169902323837`*^9, 3.7956170049562483`*^9}, {
   3.7956170491020737`*^9, 3.7956170677319517`*^9}, {3.795619721519725*^9, 
   3.795619749441154*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"facf79dd-1a42-48cf-81d0-d2c0b4425eca"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHk4lHsfxomKUimtlkwirZItEW5JZSk72QdjH2aftlPGUhFFb1FRkdLi
JNoP51TaTkWLVIqWM1k6lSiKVnl7L9/nj9c/ro+vez7PfV08v2VKOM8zcpCC
gkKiooLC/74PfH2wU/j/L5iZFHSklmTTz1VQojdNdXBFGbE6FH9MuqFacYl4
LKyqjM98Uaolngg/Rz9dI/FDYm3oTP3Y7PPgGTELaw7YabawW4j1UNUx4/NP
yzfE+kh+WfJujyrzXNOwoqrlvUztE/F0iHdemrnq4hfimQgYNnroHZufxLMx
K82S6+o3CANsBNvSM313dYYQG8P/fp7l6cxhxPPwnqWQVnNxFLEJlKdHq07u
GENsihRVu92VqeOJzbDTSSDY+6cmsTmGvfryIOmkLrEFnlpaSvOv6hHPx9QA
N3tHk2nEluh647xkzsKZxAsw+X6cpOWHEbEVOJrjzeOdTYitsTtXqDg+15x4
IUZ92mokFy8gtoHHAg25obItsS1OJg85+6nCntgOvje9DB0bFxMDlhdiToXn
LBtgGaD69VppyHtXmtsjq/xq5l1VD5rbw1uxfuTfo7xpvgjsGRzRn/v8aL4I
jcoNcda1gTR3gFvi8F0v/dk0d8Dr12qHyqwjaL4Ykz8lPSneF0XzxeDFt14N
yY2juSMC1B/+bLXm0dwR52uX1vf5Cmm+BDfrb+S2DZbQfAmq8/zebopeRfOl
UNlqLzUoXEPzX2xWU2BbtY7my9B9uFx12cX1NF+G+Nm5Zp4RMpo7YdW0qtFl
Cik0d0LXzKTU45qpNHfGqCnWD4ffJpY547WKQp21fRrNXbBBaL42YBexzAUi
1fIzjc+ZuSsueFadMNLeSHNXmCZf2XjDh1hhORxv6U8xzmLmy/HycluDdjUz
X4Gp0vKVrV3MfAVgVup1dsommruhoWA1t8yNWOYGVwON583rmLk7MhsUZTGH
ieGOO6tmCdzuMb/vjm06Yy8c6SWudoeGWUCpTHsz5T3gnsBpeg1ieOB8WKF/
ZwSxzAMlOuOO7d9IXO2BzB+Lrw85zOQ9kd54c5bpdSbvCZdFkfK5LUzeE4Ij
VwUqCumU98R56w99N7SIFbywcMthizUWxPjF28SR09yJZV6IEx7hNcYweS/4
z5vdVCBj8t5YUmtyR7qLyXujf+7ZCaIyJu8NtZFNJnuuMHlvaMoXOnY1MHkf
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
L9VqptA=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
apanZw==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
40cV9ZfgzLlJUXyTqvn/BdQltNE=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Vs++tMz4H8znmXE=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {6}}]& ], 
         "365"], Annotation[#, 365, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {6}}]& ], 
         "365"], Annotation[#, 365, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {6}}]& ], 
         "365"], Annotation[#, 365, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {1}}]& ], 
         "40"], Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {2}}]& ], 
         "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {3}}]& ], 
         "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {4}}]& ], 
         "100"], Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {5}}]& ], 
         "120"], Annotation[#, 120, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$157492, {6}}]& ], 
         "365"], Annotation[#, 365, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.39794154860265`, 824.5500349881987}], 
              Offset[{0., 0.}, {118.39794154860265`, 824.5500349881987}], 
              Offset[{0., 0.}, {119.19487241364558`, 813.1686615064164}], 
              Offset[{0., 0.}, {119.19487241364558`, 813.1686615064164}], 
              Offset[{0, 0}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -5}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -10}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -10}, {119.99180327868854`, 801.787288024634}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.39794154860265`, 824.5500349881987}], 
              Offset[{0., 0.}, {118.39794154860265`, 824.5500349881987}], 
              Offset[{0., 0.}, {119.19487241364558`, 813.1686615064164}], 
              Offset[{0., 0.}, {119.19487241364558`, 813.1686615064164}], 
              Offset[{0, 0}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -5}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -10}, {119.99180327868854`, 801.787288024634}], 
              Offset[{0, -10}, {119.99180327868854`, 801.787288024634}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, -9.999999999999998}, {
               119.99180327868854`, 801.787288024634}], 
              
              Offset[{8.500000000000002, -23.}, {119.99180327868854`, 
               801.787288024634}], 
              
              Offset[{-8.499999999999998, -23.}, {119.99180327868854`, 
               801.787288024634}], 
              
              Offset[{-8.500000000000002, -10.000000000000002`}, {
               119.99180327868854`, 801.787288024634}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["40", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., -16.5}, {119.99180327868854`, 801.787288024634}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {80.23926131085723, 753.162494656579}], 
              Offset[{0., 0.}, {80.23926131085723, 753.162494656579}], 
              Offset[{0., 0.}, {82.11553229477289, 741.7811211747967}], 
              Offset[{0., 0.}, {82.11553229477289, 741.7811211747967}], 
              Offset[{0, 0}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -5}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -10}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -10}, {83.99180327868854, 730.3997476930143}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {80.23926131085723, 753.162494656579}], 
              Offset[{0., 0.}, {80.23926131085723, 753.162494656579}], 
              Offset[{0., 0.}, {82.11553229477289, 741.7811211747967}], 
              Offset[{0., 0.}, {82.11553229477289, 741.7811211747967}], 
              Offset[{0, 0}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -5}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -10}, {83.99180327868854, 730.3997476930143}], 
              Offset[{0, -10}, {83.99180327868854, 730.3997476930143}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.76581534394773, -9.999999999999998}, {
               83.99180327868854, 730.3997476930143}], 
              
              Offset[{8.765815343947734, -23.}, {83.99180327868854, 
               730.3997476930143}], 
              
              Offset[{-8.234184656052266, -23.}, {83.99180327868854, 
               730.3997476930143}], 
              
              Offset[{-8.23418465605227, -10.000000000000002`}, {
               83.99180327868854, 730.3997476930143}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.2658153439477317, -16.5}, {83.99180327868854, 
             730.3997476930143}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {98.23690193471573, 756.3299333189351}], 
              Offset[{0., 0.}, {98.23690193471573, 756.3299333189351}], 
              Offset[{0., 0.}, {100.11435260670214`, 744.9485598371527}], 
              Offset[{0., 0.}, {100.11435260670214`, 744.9485598371527}], 
              Offset[{0, 0}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -5}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -10}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -10}, {101.99180327868854`, 733.5671863553704}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {98.23690193471573, 756.3299333189351}], 
              Offset[{0., 0.}, {98.23690193471573, 756.3299333189351}], 
              Offset[{0., 0.}, {100.11435260670214`, 744.9485598371527}], 
              Offset[{0., 0.}, {100.11435260670214`, 744.9485598371527}], 
              Offset[{0, 0}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -5}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -10}, {101.99180327868854`, 733.5671863553704}], 
              Offset[{0, -10}, {101.99180327868854`, 733.5671863553704}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.760822623376427, -9.999999999999998}, {
               101.99180327868854`, 733.5671863553704}], 
              
              Offset[{8.76082262337643, -23.}, {101.99180327868854`, 
               733.5671863553704}], 
              
              Offset[{-8.23917737662357, -23.}, {101.99180327868854`, 
               733.5671863553704}], 
              
              Offset[{-8.239177376623573, -10.000000000000002`}, {
               101.99180327868854`, 733.5671863553704}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["80", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.2608226233764284, -16.5}, {101.99180327868854`, 
             733.5671863553704}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {123.78421150084489`, 776.5998192913016}], 
              Offset[{0., 0.}, {123.78421150084489`, 776.5998192913016}], 
              Offset[{0., 0.}, {125.8880073897667, 765.2184458095193}], 
              Offset[{0., 0.}, {125.8880073897667, 765.2184458095193}], 
              Offset[{0, 0}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -5}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -10}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -10}, {127.99180327868852`, 753.8370723277369}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {123.78421150084489`, 776.5998192913016}], 
              Offset[{0., 0.}, {123.78421150084489`, 776.5998192913016}], 
              Offset[{0., 0.}, {125.8880073897667, 765.2184458095193}], 
              Offset[{0., 0.}, {125.8880073897667, 765.2184458095193}], 
              Offset[{0, 0}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -5}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -10}, {127.99180327868852`, 753.8370723277369}], 
              Offset[{0, -10}, {127.99180327868852`, 753.8370723277369}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.365949683431452`, -9.999999999999996}, {
               127.99180327868852`, 753.8370723277369}], 
              
              Offset[{11.365949683431456`, -22.999999999999996`}, {
               127.99180327868852`, 753.8370723277369}], 
              
              Offset[{-10.634050316568544`, -23.000000000000004`}, {
               127.99180327868852`, 753.8370723277369}], 
              
              Offset[{-10.634050316568548`, -10.000000000000004`}, {
               127.99180327868852`, 753.8370723277369}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.3659496834314546, -16.5}, {127.99180327868852`, 
             753.8370723277369}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {139.0481158574684, 736.5798613447039}], 
              Offset[{0., 0.}, {139.0481158574684, 736.5798613447039}], 
              Offset[{0., 0.}, {137.02815628938993`, 725.1984878629215}], 
              Offset[{0., 0.}, {137.02815628938993`, 725.1984878629215}], 
              Offset[{0, 0}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -5}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -10}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -10}, {135.0081967213115, 713.8171143811392}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {139.0481158574684, 736.5798613447039}], 
              Offset[{0., 0.}, {139.0481158574684, 736.5798613447039}], 
              Offset[{0., 0.}, {137.02815628938993`, 725.1984878629215}], 
              Offset[{0., 0.}, {137.02815628938993`, 725.1984878629215}], 
              Offset[{0, 0}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -5}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -10}, {135.0081967213115, 713.8171143811392}], 
              Offset[{0, -10}, {135.0081967213115, 713.8171143811392}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.080289376219508`, -9.999999999999996}, {
               135.0081967213115, 713.8171143811392}], 
              
              Offset[{11.080289376219511`, -22.999999999999996`}, {
               135.0081967213115, 713.8171143811392}], 
              
              Offset[{-10.919710623780489`, -23.000000000000004`}, {
               135.0081967213115, 713.8171143811392}], 
              
              Offset[{-10.919710623780492`, -10.000000000000004`}, {
               135.0081967213115, 713.8171143811392}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["120", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.08028937621950938, -16.5}, {135.0081967213115, 
             713.8171143811392}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {124.72094316431719`, 838.88166971174}], 
              Offset[{0., 0.}, {124.72094316431719`, 838.88166971174}], 
              Offset[{0., 0.}, {124.85637322150286`, 827.5002962299576}], 
              Offset[{0., 0.}, {124.85637322150286`, 827.5002962299576}], 
              Offset[{0, 0}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -5}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -10}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -10}, {124.99180327868854`, 816.1189227481752}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {124.72094316431719`, 838.88166971174}], 
              Offset[{0., 0.}, {124.72094316431719`, 838.88166971174}], 
              Offset[{0., 0.}, {124.85637322150286`, 827.5002962299576}], 
              Offset[{0., 0.}, {124.85637322150286`, 827.5002962299576}], 
              Offset[{0, 0}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -5}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -10}, {124.99180327868854`, 816.1189227481752}], 
              Offset[{0, -10}, {124.99180327868854`, 816.1189227481752}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.999999999999998`, -9.999999999999996}, {
               124.99180327868854`, 816.1189227481752}], 
              
              Offset[{11.000000000000002`, -22.999999999999996`}, {
               124.99180327868854`, 816.1189227481752}], 
              
              Offset[{-10.999999999999998`, -23.000000000000004`}, {
               124.99180327868854`, 816.1189227481752}], 
              
              Offset[{-11.000000000000002`, -10.000000000000004`}, {
               124.99180327868854`, 816.1189227481752}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["365", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., -16.5}, {124.99180327868854`, 816.1189227481752}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 857.132109849756}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"40", "60", "80", "100", "120", "365"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndisruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndisruption start\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795608091743012*^9, 3.7956095154533453`*^9, 3.7956158548053017`*^9, {
   3.7956170553472013`*^9, 3.795617083671084*^9}, 3.795617133812457*^9, {
   3.7956174611992197`*^9, 3.795617534707052*^9}, {3.795617674275744*^9, 
   3.79561768954919*^9}, 3.795618937678411*^9, 3.7956189727006683`*^9, {
   3.795619751285913*^9, 3.7956197597699757`*^9}, 3.795620077236198*^9, 
   3.7956201250031757`*^9, {3.795620179326803*^9, 3.795620206707642*^9}, 
   3.795620304480287*^9},
 CellLabel->
  "Out[560]=",ExpressionUUID->"f06445a1-faa8-409d-80ef-50ba6d2dc67c"]
}, Open  ]],

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 
  3.79556297488484*^9}},ExpressionUUID->"48a23ff0-a082-4888-aa27-\
64124db54e0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->
  "In[561]:=",ExpressionUUID->"4173ad93-3cb5-4f7e-9049-5666557adde0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["40",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["80",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["120",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["365",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "104896.76943930662`", "107681.16697659534`", "107686.0170851416`", 
     "107691.2151111681`", "107730.59047634003`", "110738.84311578225`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 8 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7956080918122883`*^9, 3.795609515499177*^9, 3.79561585488441*^9, 
   3.795617055409218*^9, 3.7956171338780823`*^9, {3.7956174612697897`*^9, 
   3.7956175347714148`*^9}, {3.795617674342074*^9, 3.795617689610409*^9}, 
   3.7956189377478733`*^9, 3.795618972800807*^9, 3.7956197598287907`*^9, 
   3.7956200773017397`*^9, 3.7956201250635023`*^9, {3.7956201793905697`*^9, 
   3.79562020676657*^9}, 3.795620304540056*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"7ae06329-b2c1-46de-bb71-12c99aa3198b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795619905008315*^9},
 CellLabel->
  "In[563]:=",ExpressionUUID->"432bfbeb-f95c-48ae-b187-21742d946bc6"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             104896.76943930662`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{50.19294117647058, 
            96.81099471575402}, {-82.41870761292401, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 104896.76943930662`]& ,
         TagBoxNote->"104896.76943930662"],
        StyleBox["104896.76943930662`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[104896.76943930662`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9564848581413907, 0.8595452817603512, 0.5888857291582562], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             107681.16697659534`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.29874223331977`, 
            147.9167957726032}, {-87.15016853705626, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107681.16697659534`]& ,
         TagBoxNote->"107681.16697659534"],
        StyleBox["107681.16697659534`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107681.16697659534`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.956553742595558, 0.8601962275237145, 0.5889488146427303], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             107686.0170851416}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{152.40454329016896`, 
            199.02259682945237`}, {-87.15841021187359, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107686.0170851416]& ,
         TagBoxNote->"107686.0170851416"],
        StyleBox["107686.0170851416`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107686.0170851416, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9566275684042315, 0.860893868202787, 0.5890164254986652], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             107691.2151111681}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{203.51034434701813`, 
            250.12839788630157`}, {-87.1672430946418, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107691.2151111681]& ,
         TagBoxNote->"107691.2151111681"],
        StyleBox["107691.2151111681`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107691.2151111681, {}], "Tooltip"]& ]}, 
     {RGBColor[0.957186803421682, 0.8661785390292316, 0.5895285818688824], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             107730.59047634003`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{254.61614540386734`, 
            301.2341989431508}, {-87.234152722017, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107730.59047634003`]& ,
         TagBoxNote->"107730.59047634003"],
        StyleBox["107730.59047634003`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107730.59047634003`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             110738.84311578225`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{305.72194646071654`, 
            352.3399999999999}, {-92.34600533028294, 96.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 110738.84311578225`]& ,
         TagBoxNote->"110738.84311578225"],
        StyleBox["110738.84311578225`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[110738.84311578225`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox[
        RotationBox["\"40\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        RotationBox["\"60\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        RotationBox["\"80\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        RotationBox["\"100\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        RotationBox["\"120\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        RotationBox["\"365\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.795608091866829*^9, 3.7956095155563*^9, 3.7956158549505987`*^9, 
   3.795617055473845*^9, 3.795617133947701*^9, {3.795617461342414*^9, 
   3.795617534845407*^9}, {3.79561767441399*^9, 3.7956176896798563`*^9}, 
   3.7956189378389063`*^9, 3.795618972875029*^9, 3.795619759886361*^9, 
   3.7956200773541822`*^9, 3.7956201251128473`*^9, {3.795620179442169*^9, 
   3.795620206847189*^9}, 3.795620304589016*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"e4db5f80-ed01-4516-9115-f6f010eb04dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined variability of delivery start and disruption", "Subsection",
 CellChangeTimes->{{3.795601159283374*^9, 3.795601194518931*^9}, {
  3.795602127854918*^9, 
  3.795602132511779*^9}},ExpressionUUID->"55ae5789-5078-4570-9233-\
811ddd958e21"],

Cell["\<\
Here are calculate the solutions for a set of combinations of delivery \
periods and delivery disruption starts:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 3.795565309003253*^9}, {
  3.7956032633252287`*^9, 
  3.795603305895309*^9}},ExpressionUUID->"888f5df2-2c09-412f-b33e-\
4e0f024f7c66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "par", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", "modelSEI2HREcon"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "100000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "1000"}], ",", 
               RowBox[{"dbp", "\[Rule]", 
                RowBox[{
                "par", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"dds", "\[Rule]", 
                RowBox[{
                "par", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"ddl", "\[Rule]", "7"}], ",", 
               RowBox[{"dsf", "\[Rule]", "4"}], ",", 
               RowBox[{
                RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                RowBox[{"3", "/", "1000"}]}]}], "|>"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"par", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "1", ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"60", ",", "100", ",", "365"}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7955935868246117`*^9, 3.7955935950171413`*^9}, {
  3.795593636561391*^9, 3.795593641360437*^9}, {3.795593734283461*^9, 
  3.795593737083794*^9}, {3.795601221127277*^9, 3.7956013359121*^9}, {
  3.795601437289263*^9, 3.795601440738947*^9}, {3.795601480760767*^9, 
  3.795601482852895*^9}, {3.795601611034786*^9, 3.7956016113712597`*^9}, {
  3.795601658567089*^9, 3.7956016589260883`*^9}, {3.795601934083888*^9, 
  3.795601945265081*^9}, {3.7956021787427263`*^9, 3.795602265189323*^9}, {
  3.795617558605207*^9, 3.7956175646333237`*^9}, {3.795617855487258*^9, 
  3.795617882960855*^9}, {3.795620312067724*^9, 3.795620344478365*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"a97919b9-8a63-46fa-9db1-bdee219416ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.731522`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.795608092378126*^9, 3.795609516111783*^9, 3.7956158555935297`*^9, 
   3.795617577482085*^9, 3.795617736117977*^9, {3.795617861271405*^9, 
   3.795617889085108*^9}, 3.7956189384559727`*^9, 3.795618973630127*^9, 
   3.795619792448801*^9, 3.795619835539172*^9, 3.7956200780290117`*^9, 
   3.795620148921983*^9, {3.795620315369323*^9, 3.795620348092712*^9}},
 CellLabel->
  "Out[592]=",ExpressionUUID->"d71e8bb2-5e37-46fe-adb8-adb16246c9a4"]
}, Open  ]],

Cell["\<\
As expected more frequent, less disrupted delivery brings fuller utilization \
of the non-occupied hospital beds:\
\>", "Text",
 CellChangeTimes->{{3.795565395213928*^9, 3.795565443858611*^9}, {
  3.795603342165628*^9, 
  3.795603396165184*^9}},ExpressionUUID->"e9518c55-4887-4fe9-829a-\
1ce6bec7db13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "3233", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"ToString", "[", "#1", "]"}]}], "]"}], ",", 
        RowBox[{"ToString", "[", "#1", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "160"}], "}"}], "]"}], ",", "Left"}], "}"}]}], 
       "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", 
       RowBox[{"Keys", "[", "aVals", "]"}]}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period & disruption start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, {
   3.795601393822171*^9, 3.7956014136393347`*^9}, {3.7956016866247587`*^9, 
   3.795601839479281*^9}, {3.7956022724436197`*^9, 3.795602304078045*^9}, {
   3.795619768950802*^9, 3.795619785462158*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"65efd27d-3ea3-42aa-8827-8c4ec8e44329"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
J9OV5OdglE34MGcDWp8wOWC8T93EHLuC/BxM8XHpzDNcTn4ONu1ePz3UfBn5
ORh6Z0cgXGm9U8KBrkrK6h72EvJzMHCxydfgDYvJz0F/tcc+uocl5I/Fu5NT
5im30vqJGQsZ27fj9gRixKI0yW8vN1ZE/lgE1xWYLq8Wkj8WT10labd7aD1W
Eos5WRjm5UMsi8WFE13r/6jikz8WK318GKeGEDO4GDpw6rUwIY/8XOR9do0r
O0rrPXDB1C1ye7g9ifxcKNtxbuhkJJKfizFd6/R7liWQn4uFNw1PWC6JJz8X
R3bE169YSevJZi6eDPdetTSLS/44XLG4c+lJeSz542A+t/uY+BSH/HGYfXLT
7qevaH3KioMBc83QDl3FejUOqrlfy7y92OSPQ8M8S7OL2dHkj0PGP+3p+tdo
vdscB797Q5dq6inWv/FI2JdyLjY5kvzxyGFOZL74O4L88djK6PMh1JCYFQ9O
Wb/cvAzFejoeo01TnuxuDid/PCwmOW7+92gY+ePR4aF5S1AWSv54WB79c83X
/BDyJ0DneN0q02xarzMToDzr1v7K3GDyJyAjf9PTMTuCyJ+AP1avOGh1IJD8
CdC8pyb+8wqt/0sScKaiUdfqgz/5E9Avymxy5jji5m95zZmyoEA/8ifCdhae
cTbTfoKZCOaSikpBkw/5EzFK2+W+lT4xKxEJFmNK1vC9yZ+I//pXG2mcpf1J
SSKE6dLaKkNiWSJ2tnSkjc3wJH8ivPz9AtgPFpI/CZ9HKVnH1nqQPwna6puN
nu5YQP4k1G57r5KSTfshVhK6VR4yrmfMJ38Snrc6SXPXu5E/Cdl7bPqxCuaR
PwmXakOHtf1G+6vmJDjdTOj74owL+ZPx8lPloP5tzuRPRrbWb/3/0yFGMu4L
By5Z4zGX/Mkw8DIN9ltP+zdpMl47nR5tdtGR/Mm4Vduz9poWsSwZ+3ct/lWJ
40D+ZORqdf22sl6xH+TBhlH1WV2XWJ2HxHvH2qQrQNfDAz49PDvtHzs5m/GQ
p3J+lls57S/Bw+WdBl7PMufI2ZMHl8bl5/YstaHr/cb8k2enCa3lzONhguPz
A5MkVnT9PKi/GT9x9mrav+bwMCu+4oJqoQX14eHq1ifunjWz5VzNg7HMYFz9
7VnU71tuZZWr0p/4Cg97vpxa9a817Y+beXCy70gatGSGnDt4sMiv8MKR6dSf
D5WXr1bbqRCr86FTs7DynB/tt5l8HOturqz4fRr156Pm0prMAlVi8OH6oDaC
nWBG/fnYwQnMO1w5lfrzoXd+Rk52Gu3neXyUZTQtex5vQv35OHCoo5IdMoX6
87F878OWPf6TqT8fo8PGBQUG0/lANR8aA6R+YzhG1J+PR5NdFpavmET9+bB4
e7Rm+7aJ1J+P19p2Dw7L6Lyhg49BUeqPq16Pp/4CxNrWZU03JFYXYN+5VXP6
RhhSfwHmfC6+ca98HPUXwGTWjG0r2g2ovwC2KpcNK0DsKYB5xx/zdbfoU38B
tPT4aqXvmdRfgO351al9g4ilApwOfZSsvZbOS3IEKJh9Iq5/hB71F8D7QkS9
yHUM9RfghM6n4z2Wo6m/AELzFA/XmaOovwBqyQeyP1rSeUzzt/dQTJ/2gy46
1F8AzdV/dkwNG0n9hZgk+qo9IkWb+gtxdv+bc9rldL7DFCJE675dW+MI6i/E
g4oevwWqxBBi/zVORqfzcOovhLSh/PzWDZrUX4hbvqszlZvo/IgnxC5Wg+D1
JGKpEIFZ1sv0U4dRfyF2vpldF/FQnfoLsb1mUcxiR+Jv793MQaKQoGA6n5IJ
0d7qzymyGEr9hbjuPLTVU38I9RdioYYsTWf4YOovRGuYnf0W9UHUX4TOW3rp
Qi06/1IXIXXIxI++41WpvwheqVHeL2wGUH8RfJ+d9m4O6U/9RQh9xy1sXUvn
aZ4ihK1z2nCyRoX6i+D+4pHzmNa+1F+E2l+FS2qMiaXfvv/z/AXOvD7UXwRb
tm1o3lFl6v/t+y4k5wSrEVeLkJeuPjAqVon6i2BQdGGE4AyD+otgJAgc4TmF
uFkEH7vb17NNvsrPAztEUNtx8W/XIYrzQTHuZk0OjPvYLWd1MUw/tC7Pf9Ul
Z6YYViadhZwXX+RsJoa1gXlMVsdnOUOMovD9t/YxiD3F2CPKZyzVofNIlhg1
3q4tRVYf5cwTY/Qwrvhc1Ac5S8UwafUNr9v8Xs45Yrgq26saXqTzzRIxVA86
s08ozjurxRAef97i7fNWzjIx6s0uR/9S0innK2JUd44Y7P7ujZybxUgetMnG
2oO4Q4z2Q31TjfYpzlMlWH81V/hQk1hdgpB/rrEX9rym/hI83h+5rvhhG/WX
4MzYs1rO51upvwReEsfYF7JX1F+C3MKLHpNlL6m/BNMHRT378yyd5/IkeD+u
f4bxnefUX4KDKsML7d49o/4SaI95mlqqRVwigdn9zMx+9i3UX4Im47//0hc+
pf4S3K/82vD770+ovwRFVbUvItvoPLlZgkfMgx+UZj62+x9tCcDL
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHlYzPvbx0dKlpBQtpiSFpSKkFJvLfb2lPZpaqZ9mh1xnBFFIlmjxKhT
hJMW+3amYy8lu07OEVlaELIW9eu5ur9/PPNP16t77l6fd9/lsxhwE715aiwW
S9CHxfq/n72fD46s///B2AtuDikF2+j3/RFarOOqUfInsTZeaw2vGlDyF/EI
nOvSKPret4p4FEa56I6zkD4gHgfu1e9vlt1/SsyGnWHOmEZOI7EhBBonBnTP
biY2QpLujfZ9A5hxGeOom1a3QuszsSmWXNWav+Lyd+LJuN2y3Lx6bhfxVLQ+
s05b6q+GXrZAoE2syR39fsSWmObxVliePpDYCm7/hdyvvDyU2Brn9/nZj3+n
Qzwd9v1a686t1yWegbYp4Vf3XxhDbIMhI27NVpROIJ6JVbujTmdfMSSehTO1
wzJdrY2JZ8Nd4lZkbj+Z2BbfbPTbG39aEM/BuMvdyXGLrYntECHYwtPdbUNs
D683cccapLbEcxGo8Fhjqu5A7IA1ow7rfimZR+yIdJNpua51LsTAHv1Sp4jM
hb2sAMryjfzD2pZSfR52+137VDPAi+rz8DLRNv36UF+qO+GSuL7fxVx/qjth
5rNCffuqIKo7Q+fpva7nARyqO2PUs51GxXYRVHfBb+n2Cfm5fKq74PEujw1h
u2Op7grJ2djqV3aJVHfFmQe/Pmr6i6k+Hyv6sfauS5VRfT5uOW+47uO4iuoL
sD0wT6SV9RvVF6A0PKpczWcd1Rcic/a1pKvOG6i+EBP66OV8OL6R6osg8c70
n3gwneqLsGrYwHLO5W1UX4wvpZGnNjhtp/piqGnwj3a47aD6ElSHDLJrnr6T
6kuwJPxUp6bmLqovRXJkKS+2hlixFF8zl1TWbdlNdTfc9ht4Ms15D9XdoJ9V
VqzbTsxyxyw81XmZk0V1d3gWDt7l4LCX6h5gLz98bHsCscID/WKrzr+YxNQ9
cbbGt/XOKeqHJ8L0ntgYzWH+nid+FppI/S+RT+WJmFv/fjJixsPyQsvFKZdq
btN44YVV0mcRqTeIFV7Y8U/lgs2zmH4vXF69/3JoDdPvjZFPi8+6JzJ+b5xb
0L2ofSgzXm90/b3v1cHjxCpvHForNWa77KN+Hxx9deWa8SNi+KDS66PBeW42
9fvAoi5vUFczscoHrv/VN06Iz6F+X7jqNS3zaCaGL/ihnacvhO+n/p77vN/t
0TsfEqt8cezEAnU111zqXwZ+l2XI9BJiLIPLgclCT70D1L8MD9RH/VAkEauW
QfTwjlVrHTHLDznefRvKbQ5Svx90KhHRtZVY4QfTH9l/v31BrPKDWvfDpx5j
lNTvj8DGNG7OPGL0PIeqML3oKGKFP7a61G65mk6s8od3QMj1y8VM/3L8av/m
EFnL9C+H+IzZ+4oPTP9yfOiT6PZy6CHqX46Rs4qDH5sTswKw2Hp/YeFiYgTg
4/ki1xA+sSIAZhvnN2msY/oDYNjEsuyzh+kPRP8NtwsslUx/IB7UKrpWMKwI
xI/pN0LLspj+QFi/e7i5OJXpD4LrkC0TpgmY/iCMz6++1+LO9AchKm37oy1m
TH8Qlg4zmHaqi8kfjCzL+1Y/apj8wfjL69nrxmwmfzBsnHg7v3KZ/18w8n6W
GxSZMP0haM6z8n94j7l+IVjTYnLX2Yu5fiEov3LCWPiauf493z+6oTY7j7n+
oci2NTQwWUmMUIxPY537K5i5f0LhHp6ZfHAh0x+KBz5DffvOZPrDoB6cHHWe
zfSHoWiy9GyNBtMfhqBaH6VjI92fqjA0G99srjzD3L8cfJXFj6lIJmZz0Kl5
5vQLZ+Z+5qBu8ZZ0l066/zkcVOedPm9bxDwfHGS6t85xcidWclBfUjvkVws9
TyoOPv4dwNFXEDdw8LjJqi93CPP8hWOk8ZN/M/bQ88kOh60v/7+o0cQIx/UA
X/M/s+j55oTDO/gOZ5QOsSIc3x1nJAWm0ftBGQ6/4VlpY7rofaIKx661y+98
FhI3hGOAQYpL0gvm/cNFy2uILX2I2Vxwi4zWb7/CvM+4GFTemqI1g5jDRY6+
SbVGAfO+5mKm38nYx7rESi5S9+4/ezeN3vcqLgQX7r2166L5oIELTmlbma+U
mR8i4O6lf837Lc0f7AiUuSSn8vjEiMBsN4+sUy8yyR+B0gGhPF44sSICAf0e
Rk28RvORMgJPStoW/nE7g/wR2DJygJekbiv5I2Ca9bDzz9Yt5I/EOvUPxrF9
idmRUB6Z9vI0m+Y7RCKKazAl13kz+SNxsXzZRnZ8Gvkj8cv4v3LH7E3kj4TX
wCFmX6pp/lRFovJhdd4sTeKGSMzlrdjZ4ZpKfh7ss6fstticQn4eqksO3ai4
T/MxeNDVMDNXGhJzeDhcOPV7uXw9+XkwfV708NWdZPLzcGS/xFzfgljFg8aF
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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVmHlcjen/xk9ZUhJRTSSOkG1KIyW0XCJLad+jnDp16rSczpokHFSWmhFF
RoMjY0kz2tBYhpMpjSUitGgquzZKCFm+/V7n8/zx659e766u1/Vc5zzP/dz3
Z1JYvFeEOovFEqixWP/3W/XT7cD6/z8wuuhqn3psF/19GEJOj3YaUvQn8Si8
0B5zU7PoCrEezn8bkv9x0E1iQxguMRhvLr1PPB5hFR9f+tY2EbOx0CR33FPO
U2ITCIYUan63aSOegiSDqt5fNZnrMsUpV+3vcu13xNPhUqG9dO3lj8Qzcas9
wKza7hvxj+hombNjpb86VGyOIKvoaXeMhxJbYLZ7p7A0XYv4J7g2B9feuDyS
eA4u/OpnO6FrNLElbId2NJzfakA8F29mhVb8dnEcsRV09K7byIsnEltj3d7I
cwf+MSGeh7Ia3UynOabENnCTuOab2c4kno8+K+Pep1/MiRdg/OXvW2Kc5xAv
BFeQEWGw14rYFp4vYwpapfOJ7RAkd0+ePtie2B7JhicM3hctInZA+rTZB50a
lhAD+4yLHbmZy1UsB0qOTvFf82Yl6Yuw16/y7W1NT9IX4Vn8/PRrI31Id8Tf
4kdDLx30J90R1i3HjW1vriJ9MUY33fv2OJBD+mIYtmRNOb2QS/oSbEi3jTt6
kEf6EtRlu6es2RtNuhMkf0VXP18YT7oTyu5/7dHwF5O+FGuHsvZvTpORvhTX
F6dc83ZYR/oy7A7KE2nnbCB9GYpDI0vVvTeTvhyZNpVJFYtTSF+OiWo/5Hb/
sY30FZB4ZfpPPpxO+gqs09Uq5VzeRboz3heHn01x3E26M9SH8E59dt1Duguq
g4cvbLPMIt0FLqFn+zU0sklfiS3hxRHRt4nlK/Eh0+VGQ8Ze0l1xy0/rzI7F
+0h3hXFOyWmDXmKWG+ahafSz3BzS3eBxfES2vf1+0t2xOzLDkN9ILHcHy7Ur
8IjwV9I98C3Y/cEktQMqhgc0l64Wm2QQyz0Q2pZTV6+bq2KlBxqkz7MT9xCz
PDGPL3Sw1PmN/J64b/rXNptUYrknzF4Odz3XR6z0hGGKorA+4iD5vWCsVTbp
xh1ieCFoiHpiqdUh8ntBRyPq08UcYqUXlvz8o0DzAzHLG3JbubnS4zD5vSHW
22Ix6CSx3Bu1z8/ov+snVnqDb/4lN9BUQX4ftMSqPZrtSgwfuN0ovJIuJpb7
YMqQr4Xr9xErfdB3MDt1xHnG74u83+dnuTUyfl9UtNXnu3xm/L7gvssw1h17
hPy+CP0YdOOUNTHLD+OHXTCc4k0MP3D6etW2C4jlflAGxes93s74/WC+snzt
/DzG74+p1dndBy4wfn8sbw59pnOP8fvjXMWY4EOvGL8/hsZkaHt9Y/wBcPL8
6j5nTB75AyC+bWS5bBqxPAAf/pgj2b+AWBmAyr7pW8xciVmBqHEO2zFiDeMP
hLO3PNZByPgDMfnT95vX5Yx/QL+9buOTDMYfhOAJh9OO/cL4g5A1YvTxhjTG
H4Sed/lKnwTGH4SdWb0VrcGMfxXWVS1+sNCe8Q+sO4FRaYaGjH8VrGLtbCZ0
Mv1XwX3ao5g25vNirUbB0yJz7VTm81uNHZKcbTouzOe3Gjpqsg7BCMa/GluT
lhTm3WK+/2BsTqzdZLCD+f6DUVouaDRfzHz/wXg8I+iJmiZz/wRDT+NcSk4l
3Y+sEPTseejtmsXcvyHI0K38nC9k7t8QFCvmV1z3Ze7fEOhMUS+psWX8a1DX
kNO0bhLjX4NHxZV9l1mMfw26Zz5ftKeeeX7WIJHL1z5xgnl+OHgbqNjnFEfM
5qDqyInOaTOIwUFPjUN38CN6PjkcWGgf1Z+XQiznYFm74xmLKcQKDo4FnRr2
6iLzvHNw55XJzJEriVs5aPPPjgp/wKwfodgtXLO/IICYHYr+9FVdJx8y61Eo
lr3XMzT2IOaEYmoUj3+1ktYveSh678svOdsQK0IxfvaqUSEnab1ThgIF2Yd+
NSBuDcXGiP6gXVtpvWSFYQ+U/1a+ofWUHYaJm6y/la0iRhjUd3m0Paii9ZgT
Bs2OzoKUucTyMEy20dObmEfrt2KAQzymfBhFrAyDWjT/uOdmWv9bw/CXdHWF
sJd5P3Bxx/K/vJ2RxGwupDXJn2//R+8TcDHp2Jc/eH7EHC4yDRWB0ruZlM9F
cMiBJ3ruxAou+NVpr64coveTkoujfvFqd3//hfK5eBJxPCqp6GfKD8cSu7cV
d8szKD8ciUErHjyvp/cdwtG1qmXWlfc7KT8cyipFI8eQWB6OIv5l3evYQfnh
mBLcX9Qj2E754bjpkXyrJo/ep60DulbT1MCmNMqPQHHyygNJRsTsCJQ3p6aZ
cFIpPwJ51Y6TbE/R+5kTgQq5WnXRp62UH4G2++dDo9yIFREI+DovfsXJLZQf
ARO3osT5GsStEajaeHWGcQzz/ufhdK4orb5WTvk8aDXu03dfRAweTtWZjvyX
t4nyefB8+nfBO++NlM+DRo5RZdsK2l8oeNiS92ly3PJkyufht+P88iXu6ymf
h6OTu99ahyRRfiSmtReka8lov8KOhO5h689pWYmUH4mhdT+GS8+vpfxI1E98
ejH3RQLlR+Jd57Paa+OIFZEIHflFoPSl/ZAyEg6zM119cqSUH4munxU27i0S
yo+Cb1u21iYzYnYU6oJnnyvZTPsrRKGh5rjLhUciyo9C1z3HL7yFxPIobJPV
j09XCCk/CjtHbDP9rEWsjMLb6D8Fuu8FlB+FQvxsMrY5jvL5WL1+ncX5mljK
52PqbvfDR27FUD4f7HslhSl3aT/I4cNeX/+hQQuf8vkIl6YW67yPonw+Lg96
qD51DLGSj4tdvKN68yMpn4+xF1YmH+DRfpMVjZ5Zzsmy3AjKj4bzujEZvLpw
yo+GqV3YVotxxJxonExXm7CfS/tXeTQeLFP0cEvDKD8adh2ssNWaxMpo/Pil
LtslIpTyoxFjzed9vUb7YVYMDnREhTiYE7NjcG/0TJdyqzWUH4PaIZa93LEh
lB+DrolTFw/XCKb8GFzeZHot5BvttxUxqPtP/GbY9yDKj0HB3GFDy4YRt8ZA
r1igM9YokPJjYTfz5KXHVgGUHwvH43C4FkD7ecRCb1xnyMatfpQfiw8b5S4V
Z30pP3bg/JeV7vOGzgOKWFy+FvW6azaxMhbHA+oTPdd6U34seMcivBwrvSg/
Ds1vTpxJHUvMjkNca2fjEwmdNxCH01uvvDG570H5cfhzYt33UQuI5XEoue5z
t9fZnfLjUBtxMivgRzfKj0P51dcd3T+4Un4curMrb3NGMOcbAXaaigPctV0o
X4CY2srzPD1nyhcgp+G8sc/UFZQvwKUvwbur7JnzkgABRlbtEs4yyhdg+cSC
Ap2dSylfAGOd/W/cLzpRvgBfj2V6v+1lzl/x4LfebSmxJGbHA4PD+jySFlN+
POZubrf/pcqR8uNxemjHDnMjYnk8jq2IrOqT0vlOEY8bj672FN8H5cejNPHG
Z9MFxK3xaNX/T+rk7ED5Qqy73HDp+Uw6L44Swqqg+ky1vh1djxAS0cPCw1q2
KrYQ4p1Cx01NcyFdnxD8oorQ3FELVOwhRGlSVc3YSXQe5Qix4/WDxFkLbFQs
FOJISpb+llXz6PqFiPjLYsa9FGsVZw5cT3fG43tn6Xw7sK7s/Xvrd7vXc1Vc
JET64zfld8yIlUIca9t2Z6nUUsU1Qox/azYhvJzOy61CDNawfdKuR9wtxMmn
oYkKwU/UX4Qz35o9Vt62oP4ipG1Oai2zJGaLUOIlNwi2m039RUhMqjHtN6bz
OUQoav6k/2qYGfUXIeHmNnnl11nUX4TiTf1rbL7Q+V4oQsC8ceptg4jlIjjM
0di9RW8G9RfBcuLzTaVm06m/CJsOR48xc59G/UXIK3wYcjSR5gdKETRHJs+s
zp9K/UW48sL+EffJFOovwiFlU9BkE+JuEXp+sFS7ETWZ+otxyKd3g+E5E+ov
xjSDI//c1SRmi9Fmf/PtBe4k6i/GgsjYpbn/sKm/GC7LRCzbGcQeYpQELSmu
mU7zD44YBZZNVY2aE6i/GPmLr1vMfT+e+ovR7L994cZ2I+ovxjPzXYeD22ie
ohDj687ikKSesdRfjEjLh4c3qRMrxRj3NSjLaLwh9RejyVbk993uB+ovhsme
/PrmSJrXdA/wqWVXhb/qU38JNlxJXiW4p0f9JThtlSLNGk3MluBhgJb7ocAx
1F+CgN8Kt7ufoHkQJGjw/GlwdL8u9ZfgvFni/RJfYs4Aq+VN7zk7ivpLUFxf
bvPaiFguQXxhLq9dh+ZNmRLs+Wet3/HuEdRfAtdLvTqnm7SpvwQu672e5d0b
Tv0lYN903TXjHs2vaiTYPkNDp71Rk/pLoB01PW1X5zDqL8GEjaOn/zuUmCXF
zljdMU4zNKi/FG7+Nxdc8Kb5GFuKFZZ/uTWnDqH+UmRZ9ByOvjKY+ksx4X30
MCMWsYcUWq3Xa/9cNoj6D/y/clj+073q1F8KiWe7dFO7GvWX4t9Kc9+lTsSZ
Uky6PiL1+zEW9ZfCeIPYWapNXCRFebdlRUs3zfeUUrStrW/cWPtVxTVSNE/y
uspVflFxqxRNv4S3zS7rV3G3FHeOPZq8vewzzQdlYFduT9cr/6TiUTJcGZ/P
ldfSPJEtw+0VO/rXve5TsYUMH6vn7S7RJYYMmamHrJttP6jYQ4bAwQfLSuPf
q5gjg882nc2d+TSvFMqwb17p9iUdvSqWy/Ayf751kiVxpgzXWt67um15q2KF
DB3eoxu31vWouEiGFybW+q1ziJUy9LBlfjOzaT5aI8MNx65+/w9vqL8M6Nxf
wbnzmvrLwPnYlqxZ2kX9E9CxcaRjt6KT+icgrraw7Nz+DuqfgJbY9OdqB9qp
fwJOJk03TPqd5rNIQPeGxqs3yl5R/wSUfGsMy6t9Sf0TMFzJ55b0vaD+A/4L
gwYVTiaWJ+Db8PML3P2fU/8E/J6w5/eVe55R/wTcPRUUxr1P8+GigX3u+rCh
XsbEygR8Dpu4oSH2CfVPQOOZfX2Xrj6m/gmY8XHHw/IJjx3+B8zGwsI=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
YI3ZyqeUX4y3ToULVWP/sfsfyOG0Tg==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
+Yz6yxGWu/va8d3Nzv8FwxWyww==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
f81TlSKmKbyi/hJMcLAfY9D60vZ/fbqw2w==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167199, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.2891789281603, 2522.8991819717808`}], 
              Offset[{0., 0.}, {118.2891789281603, 2522.8991819717808`}], 
              Offset[{0., 0.}, {120.14049110342441`, 2565.758149770022}], 
              Offset[{0., 0.}, {120.14049110342441`, 2565.758149770022}], 
              Offset[{0, 0}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 5}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.617117568263}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {118.2891789281603, 2522.8991819717808`}], 
              Offset[{0., 0.}, {118.2891789281603, 2522.8991819717808`}], 
              Offset[{0., 0.}, {120.14049110342441`, 2565.758149770022}], 
              Offset[{0., 0.}, {120.14049110342441`, 2565.758149770022}], 
              Offset[{0, 0}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 5}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.617117568263}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.617117568263}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{24.341643961779724`, 25.000000000000004`}, {
               121.99180327868852`, 2608.617117568263}], 
              
              Offset[{24.341643961779724`, 10.000000000000004`}, {
               121.99180327868852`, 2608.617117568263}], 
              
              Offset[{-18.658356038220276`, 9.999999999999996}, {
               121.99180327868852`, 2608.617117568263}], 
              
              Offset[{-18.658356038220276`, 24.999999999999996`}, {
               121.99180327868852`, 2608.617117568263}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.841643961779724, 17.5}, {121.99180327868852`, 
             2608.617117568263}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {65.21155334065966, 2936.7473538452177`}], 
              Offset[{0., 0.}, {65.21155334065966, 2936.7473538452177`}], 
              Offset[{0., 0.}, {64.60987503098556, 2979.6063216434586`}], 
              Offset[{0., 0.}, {64.60987503098556, 2979.6063216434586`}], 
              Offset[{0, 0}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 5}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 10}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 10}, {64.00819672131146, 3022.4652894417}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {65.21155334065966, 2936.7473538452177`}], 
              Offset[{0., 0.}, {65.21155334065966, 2936.7473538452177`}], 
              Offset[{0., 0.}, {64.60987503098556, 2979.6063216434586`}], 
              Offset[{0., 0.}, {64.60987503098556, 2979.6063216434586`}], 
              Offset[{0, 0}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 5}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 10}, {64.00819672131146, 3022.4652894417}], 
              Offset[{0, 10}, {64.00819672131146, 3022.4652894417}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{14.021408615540931`, 25.000000000000007`}, {
               64.00819672131146, 3022.4652894417}], 
              
              Offset[{14.021408615540931`, 10.000000000000005`}, {
               64.00819672131146, 3022.4652894417}], 
              
              Offset[{-33.978591384459065`, 9.999999999999995}, {
               64.00819672131146, 3022.4652894417}], 
              
              Offset[{-33.978591384459065`, 24.999999999999993`}, {
               64.00819672131146, 3022.4652894417}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-9.978591384459069, 17.5}, {64.00819672131146, 
             3022.4652894417}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {151.37077186154204`, 1519.9544920330925`}], 
              Offset[{0., 0.}, {151.37077186154204`, 1519.9544920330925`}], 
              Offset[{0., 0.}, {153.68128757011527`, 1563.2697577815718`}], 
              Offset[{0., 0.}, {153.68128757011527`, 1563.2697577815718`}], 
              Offset[{0, 0}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 5}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.585023530051}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {151.37077186154204`, 1519.9544920330925`}], 
              Offset[{0., 0.}, {151.37077186154204`, 1519.9544920330925`}], 
              Offset[{0., 0.}, {153.68128757011527`, 1563.2697577815718`}], 
              Offset[{0., 0.}, {153.68128757011527`, 1563.2697577815718`}], 
              Offset[{0, 0}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 5}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.585023530051}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.585023530051}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{29.6045145023831, 25.000000000000007`}, {
               155.99180327868854`, 1606.585023530051}], 
              
              Offset[{29.6045145023831, 10.000000000000005`}, {
               155.99180327868854`, 1606.585023530051}], 
              
              Offset[{-18.3954854976169, 9.999999999999995}, {
               155.99180327868854`, 1606.585023530051}], 
              
              Offset[{-18.3954854976169, 24.999999999999993`}, {
               155.99180327868854`, 1606.585023530051}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{5.604514502383101, 17.5}, {155.99180327868854`, 
             1606.585023530051}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {140.0589331903044, 1681.0757132586286`}], 
              Offset[{0., 0.}, {140.0589331903044, 1681.0757132586286`}], 
              Offset[{0., 0.}, {142.02536823449645`, 1723.93468105687}], 
              Offset[{0., 0.}, {142.02536823449645`, 1723.93468105687}], 
              Offset[{0, 0}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 5}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 10}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 10}, {143.99180327868854`, 1766.793648855111}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {140.0589331903044, 1681.0757132586286`}], 
              Offset[{0., 0.}, {140.0589331903044, 1681.0757132586286`}], 
              Offset[{0., 0.}, {142.02536823449645`, 1723.93468105687}], 
              Offset[{0., 0.}, {142.02536823449645`, 1723.93468105687}], 
              Offset[{0, 0}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 5}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 10}, {143.99180327868854`, 1766.793648855111}], 
              Offset[{0, 10}, {143.99180327868854`, 1766.793648855111}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{19.766874932310145`, 25.000000000000004`}, {
               143.99180327868854`, 1766.793648855111}], 
              
              Offset[{19.766874932310145`, 10.000000000000004`}, {
               143.99180327868854`, 1766.793648855111}], 
              
              Offset[{-14.233125067689855`, 9.999999999999996}, {
               143.99180327868854`, 1766.793648855111}], 
              
              Offset[{-14.233125067689855`, 24.999999999999996`}, {
               143.99180327868854`, 1766.793648855111}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.766874932310145, 17.5}, {143.99180327868854`, 
             1766.793648855111}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {82.17599306064801, 2207.170832528548}], 
              Offset[{0., 0.}, {82.17599306064801, 2207.170832528548}], 
              Offset[{0., 0.}, {80.09209489097975, 2250.029800326789}], 
              Offset[{0., 0.}, {80.09209489097975, 2250.029800326789}], 
              Offset[{0, 0}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 5}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 10}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 10}, {78.00819672131148, 2292.8887681250303`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {82.17599306064801, 2207.170832528548}], 
              Offset[{0., 0.}, {82.17599306064801, 2207.170832528548}], 
              Offset[{0., 0.}, {80.09209489097975, 2250.029800326789}], 
              Offset[{0., 0.}, {80.09209489097975, 2250.029800326789}], 
              Offset[{0, 0}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 5}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 10}, {78.00819672131148, 2292.8887681250303`}], 
              Offset[{0, 10}, {78.00819672131148, 2292.8887681250303`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.657200389992123`, 25.000000000000004`}, {
               78.00819672131148, 2292.8887681250303`}], 
              
              Offset[{17.657200389992123`, 10.000000000000004`}, {
               78.00819672131148, 2292.8887681250303`}], 
              
              Offset[{-22.342799610007877`, 9.999999999999996}, {
               78.00819672131148, 2292.8887681250303`}], 
              
              Offset[{-22.342799610007877`, 24.999999999999996`}, {
               78.00819672131148, 2292.8887681250303`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.3427996100078774`, 17.5}, {78.00819672131148, 
             2292.8887681250303`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {66.73845592126207, 1865.0293855543514`}], 
              Offset[{0., 0.}, {66.73845592126207, 1865.0293855543514`}], 
              Offset[{0., 0.}, {64.87332632128678, 1907.8883533525927`}], 
              Offset[{0., 0.}, {64.87332632128678, 1907.8883533525927`}], 
              Offset[{0, 0}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 5}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 10}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 10}, {63.00819672131148, 1950.7473211508338`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {66.73845592126207, 1865.0293855543514`}], 
              Offset[{0., 0.}, {66.73845592126207, 1865.0293855543514`}], 
              Offset[{0., 0.}, {64.87332632128678, 1907.8883533525927`}], 
              Offset[{0., 0.}, {64.87332632128678, 1907.8883533525927`}], 
              Offset[{0, 0}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 5}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 10}, {63.00819672131148, 1950.7473211508338`}], 
              Offset[{0, 10}, {63.00819672131148, 1950.7473211508338`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.015646003828063`, 25.000000000000004`}, {
               63.00819672131148, 1950.7473211508338`}], 
              
              Offset[{16.015646003828063`, 10.000000000000004`}, {
               63.00819672131148, 1950.7473211508338`}], 
              
              Offset[{-23.984353996171937`, 9.999999999999996}, {
               63.00819672131148, 1950.7473211508338`}], 
              Offset[{-23.984353996171937`, 24.999999999999996`}, {
               63.00819672131148, 1950.7473211508338`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-3.9843539961719365`, 17.5}, {63.00819672131148, 
             1950.7473211508338`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {77.61528812499206, 1301.4541678883631`}], 
              Offset[{0., 0.}, {77.61528812499206, 1301.4541678883631`}], 
              Offset[{0., 0.}, {74.81174242315177, 1344.3131356866043`}], 
              Offset[{0., 0.}, {74.81174242315177, 1344.3131356866043`}], 
              Offset[{0, 0}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 5}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 10}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 10}, {72.00819672131146, 1387.1721034848456`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {77.61528812499206, 1301.4541678883631`}], 
              Offset[{0., 0.}, {77.61528812499206, 1301.4541678883631`}], 
              Offset[{0., 0.}, {74.81174242315177, 1344.3131356866043`}], 
              Offset[{0., 0.}, {74.81174242315177, 1344.3131356866043`}], 
              Offset[{0, 0}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 5}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 10}, {72.00819672131146, 1387.1721034848456`}], 
              Offset[{0, 10}, {72.00819672131146, 1387.1721034848456`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{20.31212612790135, 25.000000000000004`}, {
               72.00819672131146, 1387.1721034848456`}], 
              
              Offset[{20.31212612790135, 10.000000000000004`}, {
               72.00819672131146, 1387.1721034848456`}], 
              
              Offset[{-22.68787387209865, 9.999999999999996}, {
               72.00819672131146, 1387.1721034848456`}], 
              
              Offset[{-22.68787387209865, 24.999999999999996`}, {
               72.00819672131146, 1387.1721034848456`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.1878738720986501`, 17.5}, {72.00819672131146, 
             1387.1721034848456`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {155.44809045789782`, 937.2239201492413}], 
              Offset[{0., 0.}, {155.44809045789782`, 937.2239201492413}], 
              Offset[{0., 0.}, {157.71994686829316`, 980.0828879474825}], 
              Offset[{0., 0.}, {157.71994686829316`, 980.0828879474825}], 
              Offset[{0, 0}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 5}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 10}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 10}, {159.99180327868854`, 1022.9418557457236`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {155.44809045789782`, 937.2239201492413}], 
              Offset[{0., 0.}, {155.44809045789782`, 937.2239201492413}], 
              Offset[{0., 0.}, {157.71994686829316`, 980.0828879474825}], 
              Offset[{0., 0.}, {157.71994686829316`, 980.0828879474825}], 
              Offset[{0, 0}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 5}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 10}, {159.99180327868854`, 1022.9418557457236`}], 
              Offset[{0, 10}, {159.99180327868854`, 1022.9418557457236`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{27.63629226352088, 25.000000000000007`}, {
               159.99180327868854`, 1022.9418557457236`}], 
              
              Offset[{27.63629226352088, 10.000000000000005`}, {
               159.99180327868854`, 1022.9418557457236`}], 
              
              Offset[{-20.36370773647912, 9.999999999999995}, {
               159.99180327868854`, 1022.9418557457236`}], 
              
              Offset[{-20.36370773647912, 24.999999999999993`}, {
               159.99180327868854`, 1022.9418557457236`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{3.636292263520877, 17.5}, {159.99180327868854`, 
             1022.9418557457236`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {79.99549043173707, 1527.6025494482606`}], 
              Offset[{0., 0.}, {79.99549043173707, 1527.6025494482606`}], 
              Offset[{0., 0.}, {77.50184357652427, 1570.461517246502}], 
              Offset[{0., 0.}, {77.50184357652427, 1570.461517246502}], 
              Offset[{0, 0}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 5}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 10}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 10}, {75.00819672131148, 1613.320485044743}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {79.99549043173707, 1527.6025494482606`}], 
              Offset[{0., 0.}, {79.99549043173707, 1527.6025494482606`}], 
              Offset[{0., 0.}, {77.50184357652427, 1570.461517246502}], 
              Offset[{0., 0.}, {77.50184357652427, 1570.461517246502}], 
              Offset[{0, 0}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 5}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 10}, {75.00819672131148, 1613.320485044743}], 
              Offset[{0, 10}, {75.00819672131148, 1613.320485044743}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{21.87975451492547, 25.000000000000007`}, {
               75.00819672131148, 1613.320485044743}], 
              
              Offset[{21.87975451492547, 10.000000000000005`}, {
               75.00819672131148, 1613.320485044743}], 
              
              Offset[{-26.12024548507453, 9.999999999999995}, {
               75.00819672131148, 1613.320485044743}], 
              
              Offset[{-26.12024548507453, 24.999999999999993`}, {
               75.00819672131148, 1613.320485044743}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.1202454850745305`, 17.5}, {75.00819672131148, 
             1613.320485044743}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 2887.9529782066525`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"{0.5, 60}\"", "\"{0.5, 100}\"", "\"{0.5, 365}\"", "\"{1, 60}\"", 
       "\"{1, 100}\"", "\"{1, 365}\"", "\"{1.5, 60}\"", "\"{1.5, 100}\"", 
       "\"{1.5, 365}\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period & disruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period & disruption start\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795608092818636*^9, 3.79560951662965*^9, 3.795615856151219*^9, 
   3.7956175780690002`*^9, 3.795617736707733*^9, {3.795617861847567*^9, 
   3.795617889671516*^9}, 3.7956189389686317`*^9, 3.795618974204371*^9, 
   3.795619792920772*^9, 3.7956198360683603`*^9, 3.795620078533369*^9, 
   3.79562014952603*^9, {3.795620315883239*^9, 3.7956203486124163`*^9}},
 CellLabel->
  "Out[596]=",ExpressionUUID->"7ceaac81-9ea9-4b3d-aa29-08e06643c5a9"]
}, Open  ]],

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 
  3.79556297488484*^9}},ExpressionUUID->"374610a1-8035-4060-b7ea-\
6dbd236a95e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->
  "In[597]:=",ExpressionUUID->"c6b12fc6-5964-4d36-9944-3930541ff6f9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "286384.2611392882`", "286828.74035297474`", "292150.0808382712`", 
     "219363.2437297415`", "223869.49571495608`", "233785.48487082345`", 
     "171548.90442996402`", "172210.6010264031`", "181034.30583838504`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7956080929013853`*^9, 3.795609516686159*^9, 3.795615856245593*^9, 
   3.795617578151598*^9, 3.7956177367910767`*^9, {3.7956178619229183`*^9, 
   3.795617889752448*^9}, 3.795618939100841*^9, 3.795618974299979*^9, 
   3.795619792997767*^9, 3.7956198361467524`*^9, 3.795620078607316*^9, 
   3.795620149608488*^9, {3.79562031595895*^9, 3.7956203486860228`*^9}},
 CellLabel->
  "Out[598]=",ExpressionUUID->"4e2b8f61-7558-45ce-8679-12f64ca0c5a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
  3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
  3.795563325092783*^9}, {3.79560188292964*^9, 3.7956019032454033`*^9}, {
  3.7956019748543262`*^9, 3.7956019889600487`*^9}, {3.7956023194029617`*^9, 
  3.795602323068637*^9}, {3.795619876234067*^9, 3.795619888021296*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"6923a789-7fa1-4fd7-992b-2c7a6935dd20"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.5171332058403484, 0.7579442803612562, 0.9420240963386496], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             286384.2611392882}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{50.19294117647058, 
            81.2697804043486}, {-96.63220076576903, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 286384.2611392882]& ,
         TagBoxNote->"286384.2611392882"],
        StyleBox["286384.2611392882`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[286384.2611392882, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5105161321632623, 0.7542308217491147, 0.9408718449720882], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             286828.74035297474`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{84.076718625927, 
            115.15355785380503`}, {-96.91849291828149, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 286828.74035297474`]& ,
         TagBoxNote->"286828.74035297474"],
        StyleBox["286828.74035297474`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[286828.74035297474`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             292150.0808382712}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{117.96049607538343`, 
            149.03733530326144`}, {-100.3460053302829, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 292150.0808382712]& ,
         TagBoxNote->"292150.0808382712"],
        StyleBox["292150.0808382712`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[292150.0808382712, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9434144073292229, 0.7925669553291488, 0.5947259128269404], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             219363.2437297415}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{151.84427352483985`, 
            182.92111275271785`}, {-53.4634973777944, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 219363.2437297415]& ,
         TagBoxNote->"219363.2437297415"],
        StyleBox["219363.2437297415`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[219363.2437297415, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9506453766191263, 0.8245265818876836, 0.5898899221110305], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             223869.49571495608`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.72805097429625`, 
            216.80489020217428`}, {-56.36600561864202, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 223869.49571495608`]& ,
         TagBoxNote->"223869.49571495608"],
        StyleBox["223869.49571495608`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[223869.49571495608`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9597574528767476, 0.8904707163004868, 0.5918828237402324], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             233785.48487082345`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{219.61182842375268`, 
            250.6886676516307}, {-62.75296319125323, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 233785.48487082345`]& ,
         TagBoxNote->"233785.48487082345"],
        StyleBox["233785.48487082345`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[233785.48487082345`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
             171548.90442996402`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{253.49560587320912`, 
            284.57244510108717`}, {-22.66594892652222, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 171548.90442996402`]& ,
         TagBoxNote->"171548.90442996402"],
        StyleBox["171548.90442996402`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[171548.90442996402`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7648400186297639, 0.4777596982662158, 0.9413617952923657], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
             172210.6010264031}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{287.37938332266555`, 
            318.45622255054354`}, {-23.092152305828762`, 88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 172210.6010264031]& ,
         TagBoxNote->"172210.6010264031"],
        StyleBox["172210.6010264031`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[172210.6010264031, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8032583180190336, 0.5701403525668842, 0.9515603182071642], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 
             181034.30583838504`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{321.263160772122, 352.34}, {-28.775561936629657`,
             88.3298933943413}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 181034.30583838504`]& ,
         TagBoxNote->"181034.30583838504"],
        StyleBox["181034.30583838504`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[181034.30583838504`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox[
        RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        RotationBox["\"{1, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        RotationBox["\"{1, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        RotationBox["\"{1, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.795608092965425*^9, 3.7956095167532*^9, 3.7956158563225603`*^9, 
   3.795617578233284*^9, 3.7956177368737392`*^9, {3.795617861977748*^9, 
   3.7956178898393507`*^9}, 3.795618939206873*^9, 3.795618974379608*^9, 
   3.795619793051147*^9, 3.795619836245718*^9, 3.795619888461043*^9, 
   3.79562007865809*^9, 3.7956201497077627`*^9, {3.795620316049852*^9, 
   3.795620348783173*^9}},
 CellLabel->
  "Out[599]=",ExpressionUUID->"ce4a57e6-b07c-486d-9623-faf0d9b1d655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "3233", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "DIP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"ToString", "[", "#1", "]"}]}], "]"}], ",", 
        RowBox[{"ToString", "[", "#1", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "160"}], "}"}], "]"}], ",", "Left"}], "}"}]}], 
       "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", 
       RowBox[{"Keys", "[", "aVals", "]"}]}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period & disruption start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, {
   3.795601393822171*^9, 3.7956014136393347`*^9}, {3.7956016866247587`*^9, 
   3.795601839479281*^9}, {3.7956022724436197`*^9, 3.795602304078045*^9}, {
   3.7956177447963963`*^9, 3.795617773875868*^9}, {3.7956198096545057`*^9, 
   3.795619848377397*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6d57b01c-38ed-44df-b933-c75907510941"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Z5cf/h+8ltll
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
237/DxEn0Tk=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/QpMsu6rf+uH/wciqMH2
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
l8J66K0VGwb8X8Si1Zo=
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
xmygfhRMTIUNlXnUj4a6xvRxawH1o9Hg7v1IU0T9aAzb9K0q7wD1o6GrI8oy
K6F+NN4mLX8oO0H9aPxhMzJ1Uxn1o5GT52WadY760bi/RBbMv0j9GJyccKuq
8Qr1Y2Ak+udT4A3qx+CNQUefXTXUj8FyOx1+xT3qx8DF1c+j7CH1YyCdUbEz
t5b6MXjpcXuz83Pqx2CFjl5yzUvqi/B6r2OwUyP1RXCYf2dlbjP1RVjS1N+4
opX6IiSEF5jeeU99EcaNFBVf/Uh9ESqXu50s+kJ9Eew+WHjGfKe+CMlp7v49
flI/FvvTcs5t+20968ciz+NsfK9OzIhF77GXrGVdmIWxmOrw9VmZNrMqFvn9
BB5vdZgLYlFgd2isQXdmdSyCxuh5m+oxa2Jh1et6mJEBMy8O2Qtu6/3oSf04
HO57r8ut3tSPwxL3VY0bjagfBye/B/5uxtSPw7Vs/cbXJtSPQ+kxPZv0ftSP
Q2yc6nQXU+rHoUPDT4PfB1A/Hqa7ZpfWD6R+PPiFsVbTB1E/HuPv3G5aP5j6
8fg0rSj23hDqx6Pp52ljvaHUj0fM+cfRk4dRPx7LGmvLg4dTPx5RyyqXyEZQ
PwEX3jf0VY2kfgL6Rlk8y7CgfgLST7+0SxlF/QRkzxgfn2BJ/QTc3tflgbcV
9RNQ7WVbYzua+gkI3ZS/p+sY6iegReCdf5/MS0TFq/yOBdbUT4Rh4cCBQhvq
J7b/f2oea2JL/US8NChccpWsSkTWvlSP+WOpnwh9Wdz1/nbUT0SxytyxjKxJ
hPIAnviOo34S0lrcHjWQzZLgLLiRvGA89ZOQ5Ki8+tsE6ich2UbXLJOsSsLz
kPXbOk+kfhL0jEKTVGR1EqZXmJz7SNYkoXr73TMie+on42b+oJy7ZLNktPJ1
gjGJ+sn4XmznWkQWJmPp1roF2pOp377fQd8ghlyQjPTAUNsKsjoZxo3Tf5hM
oX4yTozpmJtE5okxZ0eprpqsL8aEbnFZPRzo84jxuHf3kYFkazEMxqzrsJsM
MYwjm60byHwxSiaYVVlOpc8rRnyWU0siWSyG8HvWoQNklRhtCr9BDeQcMUpP
WYcMmUb3iFHm9kgZRD4iRqZhQEYuWS1GbnbTugvkajEyYsxPfyJrxIj4WNdt
BJhbxUgYHL/Fj8yTILDFQ7KErC+BxnF14SGymQSNGWuc7pOtJSj5ahnIc6T7
JTDwPfZlGJkvwZZjTaPdyUIJnHgmWmKyWILUlR3WriOrJIhQ8mqOknMkeH24
+UkNuUCCDTb2Z96Rj0iw8MrLxfpOdL8EOV3XD7YiV0ug3XF+mStZI8HPtnjv
CHKrBK/+edOaQuZJERo5ZPtGsr4UaoP7EQfJZu3fsxatmHWe3P69q/y0MPAB
GVLcDMbWFjJfCr26st6dnOl+KfZvHHq9D1ksxfFXGdctyCopUrfl93cg50gx
JenfM57kgvb392s9HUo+IkWM3xITMVktxceVax6nkaulcBGUdF9L1rS/nh94
OJ/cKsVFwdlLf5J5MrhaNwSdJOvL8D73iPgi2UyGq7vVOjVkaxlaDv8xupYM
GX7czNY0kvkyzMm8Zv6Ru1+GscMCf/Km0/0yDPQzkuuSVTIUR5dlGpJzZNDd
+2LSQHKBDP0KO28YQT4iw/EgxUYbslqGzOVxTpPI1TIsLf+R70TWyNCcZfHn
LHKrDNpLqxMEZJ4c/7odqwsg68vxbqnKOIxsJkfblYtaIrK1HH9u5P2dRIYc
eyxyhirIfDkWy8/5LyYL5TC4fcUrnbtfjnGNVT2Xc/fL8Srgfv5q7n45Lv3+
oi2Xu1+OUf0fmGzm7pdjqNHaHtu4++VQ9K28XcDdL8d2R/ukPdz9cgzbn/lo
H3d/e7+Hy6BD3P0KeHp/dSjh7ldAS2+A3d/c/Qrc6dG38ynufgVia2eVlHP3
K9DmynM4x92vwL6LqUXnufsVaP7yteUSd78CriaFfa9y9yswJDBv+HXufgUq
BW19bnL3K2AUceZ1DXe/AklG34rucvcrcCpt98z/cPcr0G9d8Y2H3P0KCJRv
pj3h7leg+2O/LRrufiVezD7x6Bl3vxI9RU906rj7lbgxfb15PXe/EiX7N1o0
cPcr0RK03bSJu1/Z/vsd+u9r7n4lCgyWVr3h7lci6cxfq1q5+5UYmbLc/h13
vxKjNmy/9567X4mtJVnRH7j7lfi374OXH7n7ldA8MAz4zN2vxLav58q/cPcr
EXkgxPBbu/8LcRi1xQ==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV13lcDPoax/HRIlIqspykRrZWSkkRfdtIivbSOi0zLVPTTLNki8l2OkKh
kO1GRTpK5EiWY+zhIPux3ixxSRRxsl/35ffM63Xnn3m955lnPvP8NzMsMSuY
r8HhcEQ9OJz/Pf98dLhz/v+BjYeCzzd9iGav94K2nu+YaS1CZkMgrBFD+8iZ
jXF+e0xc64IFzIPR/e7Wk4cui5lNcWhAaGhgwXJmLjJMh7afDChgtsDhiaKG
2QFFzCNw5kTwEl3fdcyjoOMYMnxk1XpmS0yfG+y2IW8TszXO/L5UtLVtG7Mt
Fnx5WnOAs4N5DLTjcqeIOyuY7aFp4fr4aFQVswOW6HVyy4L3MI/DwuHfVyrn
1jE7wqA93cbOrp7ZCR8yNRJ8wg8yj0d2THt1a+/DzM4YnDnx+3Pen8wTsKqx
4PbUoyeYXTDucGVJeeNpZlfMTvYUX3FrYp6IiWa5FTtj/2KeBGHkzFnmW5qZ
3TDBXdftmuI682T0tbPxibt2i3kKBG81girO3GV2x/OALY2rhP9mBuwnzh/d
Inn800og9oto7qHdrWzugQ1S0Xlb6Qs290DHi2qLV8/b2dwTO7pskwzWdbK5
J6585jsXV3WxuRdmfk/c6j29m829sHmEZo5k1Rc294ZHX6eKpiYOfs69ETtD
lKc4ovnTHB8MNex10GGcDpv7YF3ji+pyrz5sPhXXfexmDdQ2ZPOpkA9ZnzTh
Wj82n4amwqF73pkMZPNpeF17c9qFd7+wuS9S7eUGITIzNveFR0xHr0v3hrH5
dNQZPeqsfz2CzafD7hTPI36DJZv74VPpbLcTunZs7oeSI3FHYic5sPkMfNWa
/qx6qRObz8Deh1oqx3kubO4PsbM0LnLCZDb3R4rSMa8zw4PNA/DByvD1ZZU3
mwfArnzXuQu7fNl8Jvpb7Px96bgANp+J64s8ni92CWLzWdj+dnB04fhQNp+F
a6vC90iWR7B5INz/5uWON4/+aQTC0srB8I/3cez9P5x/3+6gMuGnVT/e/3Jr
08atSWw/CHU6B77mXOaz/SBsP3fmpdIwle0Hwe9I/cQ6XjrbD0LXzpvzK45m
sP1gZCV/SZFZZLH9YNw9Vhrj1iRm+8EI1+tjuEkjm+0H4+3mQ3Xl7lK2H4Ll
6Z2xfyyUsf0QjKzRe+N0XM72Q7B1/YnyIk4O2w/B2Tl9fKZ4zmH7oSjhvS88
vGQu2w/FtXyHm/mn57H9UOjwbI6O01rA9kORss/azNczl+2HYdo/Vu/iFi5k
+2GovFvg3f/QIrYfhrV53euW5CjZfhiGq47HSIzy2H44Vu5L063ezYxwZDzX
qNTBYrYfjhEmbqNTbjCrwsG95S6rEixh+xEItb/qV/uBGREwsr45Pm7pUrYf
gaIdJvPKDJax/Qh0lm7swdvIzImEduZe7xVmy9l+JIblrXEw2MGsjESAzKLf
I4tf2f6PeUi9uKuMmTMbXo9LPrub5rP92XDM6JV6tJhZORt59XdCk3V/Y/uz
oWXQbuuUy8yJwpr2B72t25kRBbuG7+t9olaw/Si0uf/e9etpZlUURp7Clnc2
BWw/GjV5n7xXFjEjGv3yapvC3zIro/Gn1tR1UUEr2X40MnMzyypqmDkxOPxg
qJWXziq2HwPTzRW/eccxK2OwaM8n14b9zKoYzE8ccnq31mq2H4sptmFHrEOZ
EYvEyk91vtuZlbGoWLet3uQVsyoWcYsvG95wKmT7cahtgk35fGbEYfvVj1eq
VczKODzLfD9XQ6OI7cfB6NjM+Y8tmDnxmBWckfzFkxnxiLfrFRuWyKyMR475
bftOJe3Hg7vEY9+1bbTPQ1dNmNaXI8xcHh5sanwk+ps+jwcXI4sTtl3MPB4K
E4O+OhusYZ/Pw2zhp/bVVsxlPBjvFn0a78Ws4sGmYetOuxjmFh56Dt+5OUfG
zElA/sLnewasZOYm4OFp2d3e5cxIwMb8BUHhjcy8BDQdshJ+vUz9BCx4llPd
4yn1EzC62rmR3039BOSMXZFsq7eW9RNwe4NFaaQ5MycROme949sdmLmJeGx0
+Va7FzMSYZTn4xgbxsxLhF+p/qEpAmZlIgbZnDxQomAuS4RW28U8/nJmVSI6
a2xy95VQPxEJql91ciuon4QP72V5F/dTPwmOfb/5lqmon4TL3ekN3y5RPwlV
Ru7mL+9SPwl5b8QX+M+pnwT/p/e6Ze+on4RztQ8fmnynfhIulI2siNJdx/rJ
KD23O3HCAGZuMrwjro88YM6MZLS+OvTiuhUzLxkX96/YVOrIrEzGL/VDjHtN
Zi5Lhql/7jCLqcyqZDxzbVjwciZzSzLWaG+7nBRBfT60/A7UFsVTn4/37r+U
S1Ooz0ff/cVcgyzq8xFeUr2Cr6A+HxYB+x3n5lKfj8RemrH+S6nPh9d26wmP
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
G31yZ8744f8C+omEvw==
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxVz3lczfnbx/GDohIle0KSFoq0KIR3kUqiEto77XudnUbpSPppVJKksU1D
tsJkCBXjNIm4jRYiMhVR/FJKTbZwux8+13k87u8/5/E817m+r3PNCIxzCxnK
4XBih3A4//f54+lZxvn/D/KuuN2uHvBm3ytBUdVhrn1rFLM6sL4UU0eKmcfh
9m8+fi8TEpgn4UPfw7Zmq2RmLVwZ7+7usiuVWRvRWlO7/nLexayDskWxlz2d
s5h1UVXhtl3FYS+zHkaYrZs561QuswEc492s9287wDwbVUUpsYc7jzAbIWHw
xdmLnKPMc6Hol7iU11vAbIJhOgufX/U6xTwf21V7tfPdzjCbYuvMb+nS+GJm
M6h1Rc4xNr7AbI6BmKEBdhsuMVtA4NNV+FK5jHkBJsUs+tbB/ZPZEhmlux6t
vFrBbAXTsuP7jpXeYF4Iz2BbXo11NfMiLJqWWHDC9y7zYkR5rFk7/VAtszUs
l6lY10vuMy/BaOM5dn71D5mXIvTdUNeCqifMy9DhfKg0I6qFGTBZtEW/lf/8
h6WA72Bs/JXTL9ncBvuFsbeNhK/Z3AY9rwt13nR0sbktjvYbBant7WVzW9R8
DlmQc6qfzZdjzbfAwyscP7D5chzUHbaJnzHI5itgM9q8oLqagx/zFfB1it0m
KR/2wxw7TFVXujTfdASb22Fv6evCY8tHsvlK3LczXjtBUZ3NV0I8JTfIsl6D
ze1RvXvqmT7NCWxuj+5zDfZ3+iazuQPCTcRq60TT2NwBNj49Sn83zWBzRxSP
edZ7oVuXzR1hXMm18d9vwOar8OkXT+sKFWM2X4V95X7lvovns7kTvig4them
mLO5E35vVpCZ/WTF5qvBWyD087BcwuarESY129YbbcPmzhgwVO++J1vB5s4w
Pnby1p2TDmy+BmN1ThSlmDqz+RrcT7LpSLZyZfO1yFp/z2imhTubr0XzWnNO
yfaNbO6CJyLnWTsnev8wXNC3aWEP2v3Y710QtOOJpFAY8MMyF6huNtSoTwti
+644yDmakPNHCNt3RUdP4DufzjC274qq05oH3syPZPuuODKZ026fEs323eCW
KV15qjWW7bvhgV3MkStHeWzfDSq6UqWcRj7bd4OH2dc7C8YI2f46FJUbVA46
idj+OpRM25/htFPM9tdh2abVq/ZUSdj+OlxLP311+bDNbN8d710ti1sQz/bd
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
8sTv/l/0NbEd
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1ntczPkex/EhbXR3q1xq29adiBAJ79xKdJUuyjRdptvUNPdOIeO26xa5
E1shoo3NJlTYKaJiKyGXPYcpkoQttRVSx3n4fubxOPPPPJ7z+X1+r8fnv/kh
JM6L35fD4Qj7cDj/+/72aZnP+f8PDl/xKi/rCGC/94e2vvNkJ7WA2RhYWQBz
PTnzEJQfD+Q2rF3LbIauttoXz2ZtZB6JK0O9vT12/MRsiZiR5u9KXHcwW6HQ
XnjZ3zWFeRRKi7026TrvYx4DHdsVP44+c5B5HJYmeDkc2pDKPAGlv24W/tKc
xjwJa7tfnrvIOcE8GdrcdfNErZnMNtCyml1/ddUZ5qnYpN9qmeGVwzwNST/2
7lQm5DLbwuhd9ERr6zzm6eiI7Ru82OcS8wxIAt9lNwwoZJ4Js1j73kbedWY7
JBfseLTkajHzLEwrPHXgZMFN5tnwD1sgqnIoY7aHvcW6zNOr7zLPgcDPzf37
Y9XMDrCbr+tQo7jPPBeG1hMXc2tqmech/ENfz8zSp8zz0eh6rCBZ8JwZsLFf
M1Ytrv9mJbC6W5hw5WwDmzvikFRYPknaxOaOaGnKtnrb+I7NF+BE+6RQo32t
bL4AVZ/5M/efaWfzhXDrDfll0dIuNl+Io6O04sXJ3Wy+CI6G0zPLyjj4Nl+E
1cuEGxRFWt/MWQxz4/6Xpk7TYfPF2FfQlH1yoR6bL8H9xdbuJtrGbL4E8hEH
Q+1qBrG5E8p2m+e0DTdhcye8P//QqaJtGJs7I9JGbrRCZsHmznAMbOn/518/
sPlS5A6sa817P4rNl8L6Bs8x6NA4NnfBpyP+DsW61mzuggNF3KLVc6ay+TJ8
6bf0Vfbm6Wy+DL8966eyTZzF5sshminl+tnNZfPliFDabmiNcWRzV3SMN35f
qVrE5q6wPpl1uyLLmc3dMNjq9K+bp7myuRvur3ds3DjLk83dkbKyctKPM7zZ
3B3P3Kdz8jf5srkHnspcR281DfhmeKAtfnYLXnHZ8x4I3fJUkS0N/maVB/T/
NX5QzbZQtu+Jo5wTa/f/zmf7nmhsCfkQ2BzB9j1RenZ46tup0WzfE2nDOK+c
NsewfS947VIuOaMWsn0vPFgcm3blhIjte0F3lLL//sditu8FP9ueipkDpWx/
BX4tGneje5mM7a9AvsWh5GVb5Wx/BebHL3fZU6pg+ytwbefZqwu1/sX2vdHp
aZf7HAls3xtj87xSXq9LZPveSJwVOOp1wRq2741pUdP5wva1bH8l7q2/wB9o
ncT2V8JSsMExNnQ921+JE2uKdfcuU7L9lThc49v9/gUzxwemgRcSMhM3sH0f
5BjUJuw02sj2fcB37n626QSzygd//bYpJtp2E9v3hdGetEKrEmb4Iv5w1Zi9
bpvZvi+42z4WZzxmVvkiaryTw2zeFrbvh/UX9aucG5jhh31GvaP+iPiJ7fvh
cucq7GpkVvnBe/XnoOywn9m+P7KvH34x4Dkz/HGxQzTllM9Wtu8Puc7h3Yo7
zCp/fPC7Ojxx7ja2vwp2620OnMthxirMWezibTxsO9tfBd/fllid3MisWoV1
ETetIpuYOQEoai26HOK6g+0HIPm7pIhD55mVAUg6/oda32An2w+A7kSbnVWR
zJxAWCsDvd4VMyMQ3eeSlsrMktl+ILjr2jMlMcyqQNzbsTWn4xozZzV2xlnk
GRrsYvurUVFzVa/cn1m5GjrrQ485ZDKrVuPpzs+Vx94yc7iY2z7V3Mx2N9vn
4lab6cp78cxKLuI81pfVFzKruNg79VAir5uZE4SNPao7Ey1S2H4QllS7VEXO
ZVYGwaS9t+tNALMqCM+9TXsvJjBzePg317m57CCzJQ96DTP9xuXR+3g4NzEi
40ElM48HQ/Mjfaqa6P08/Oe7zktm/fZ8cwYPNR++6OWZM6t4GC3MiUqfyazm
odbMJui5GzMnGKXDTLNk4cyWwWgprxwfvI4ZwQiYOqTn9D5mXjBSl6sjnM8y
K4OxRn96rdN16gfjTtxwdVYN9YNRe3OMo+AV9YNRPfLYw/0fqR8CvYL4g2P1
97J+COIrfA+MsWBGCKrsdnXtn8LMC8G8jvmdcjArQ2D68tLDux7MGSF4d/VV
3TEesyoEjlxrUVMcszoEF/7xeJyfxMwJhfb4axLtZOqHImFk74G/UqkfigsN
SfvnnKF+KG6EyQrH5VM/FMURQ5efLqZ+KIae/rjp8p/UD4WFy4U9QU+oH4qK
jO2Hj7+kfhiuJG06r/yb+mFYkBvyV+9H6ofh5/kdplb99rF+GN7xZa5vDJiV
Yfj7ySfvAFPmjDB8eDi+M96SWRWGpqmPmxeMZ1aH4Z7WsyfXpzJz+HAd0+bz
fjazJR8vdqY33ndkBh9OKQ694qXU5+P0Uy3OHQ/q89FzaMKcOl/q8zEyUaf1
Epf6fBSOWeDpxqc+H5a7dNecFVA/HDuNfddViKkfDt628b558dQPR3Pd407+
OuqHo/Q0d/7LjdQPx+MPWT1TtlI/HIcVTZ0uydQPx5fctmcz91I/HKN37fD/
5yD1IxD4sKT356PUj0D7XY/AlnTqR0DLo/ntlEzqR2DG6Awr5zPU/7p/YHKI
fQ71I5A/OrBf/1zqR2Bv1Qqf3/OoHwGzzy1H7C9TPxLjP1t9d6KQ+pEwbLS5
3XSN+pHQ8hnRO6iY+pGYMra+1OIm9SORNefJeMPb1I9EV1TnlPpy6keimT/i
wdG71I+Eu2fwAIcq6kdh/1xu4Y171I/C5LuSctsH1I9CyAmdgcm11I/CEJMH
odWPqR+Fy0N+SO55Sv0odAj6epr9h/pRuKL6JcbiOfWjkDkp8ODAOupHIzzd
OulDPfWjYTe86M/il9SPxpub6eOUr6gfDdXD9EmTX1M/Gq43a8V3m6gfjYKc
lu0BzdSPxtptXtr/fkv9aJR0u0e5vae+AK8Hedvn/U19ASzXGnbqtlJfgMCS
9GE+H6gvgE7dNdMDbdQXYENHXUhZO/UFGOkbGdnyD/UFSH1TuMegk/pf98Ol
iyy7qB8D+yRF/biP1I/BPb1xFWM/UT8GuXsVPuafqR+Dohnazwd0Uz8G29XO
V96RM2Kw72KmbfkX6sdg78Yt6cd6qB+DY3s3OkX2Uj8WDx4JZJM4+1k/FvP0
Y2OayIiF38ofpel9mHmxCNx/sdytL7MyFst4r853kjNi8bHHNihVi1kVCweD
hiF2/ZjVsdiSNrJ/JZkjRB9puzBIm/pC7G7Yvq6ZDCHcL5uES76jvhA657v8
2slKIbS23t0s1qG+EH6CBJM3ZJUQ7ysdZ3P7U1+I7js1JpVkThwG1Xo9mj2A
+nF42BR3/DgZcchbFJuqrUv9OAxNs3nFJyvjUPLSLauEnBGH+5vNekfoUT8O
YQ6nDCRkdRz6b37eepPMEWHIrt3lQ/SZjUUYpOZfCCZbilCyTbv0V7KNCAlf
DL5vI0OEJcmjntgZMHuIMDnli14imSeCbBq/qoAsEuFLm5N9J1kpQv6jwpBp
hswpIlQt0eIKyBkinM5OwwlyrgiP/lhq8YisEsH0lI6urhFztQiLzowzmUNW
i9B238M7mtwiwsf5SQ8PkTlitIwxyr5BNhbjTcntundkSzGWtT3aYWJM94vx
Z4760lwyxFDO+igKJXuIcd/x4u2fyTwxki+OKssmi8Swja1PuktWirH2mmHX
W3KKGLtv+c3XH0j3iyHI7sObQM4VQ+ugOsyJrBJj56lwv1BytRiLM08sSiKr
xRh8dpHtYXKLGC57jltfIHMkuL3qkkM52ViCo9yJUWqypQTBsb5FHWQbCWIq
F8zRH0T3S3DLKrvFkuwhwQjrPi+mk3kSbF4vH+ZMFkkwybg1dRVZKcHp/JHC
GHKKBJ92hBxZR86QYPLCFqtd5FwJTP0KjNPIKglcZiVEniNXS1DimT/lKlkt
QR+jPwQV5Jav9xTn//CYzJHi7sytPg1kYym2b+80/EC2lGKx8yH3HrKNFFss
q0fqDqb7pXCxr0scSvaQ4lBhXawlmSdFsUPJxwlkkRQl9m5WM8hKKVJl1s3z
yClS9LNt8HUmZ3x9Pu2JwJOcK0X7c7cJq8gqKe5Jow+GkKulcP/HNi+arJYi
7cLBTRJyixQLVoboJpI5MjyavNxlA9lYBqPavxdvJVvKkKis7t1FtpEh/KR/
4gHN/TJENT2/fFRzvwyir/8mjmvul8ExtXxzluZ+GcQFArNzmvtlCO67Pf53
zf0yZJkNzrysuV+G0WtepF/V3C/D9qG3Yoo198vwW71M/5bm/q/OOaKs0Nwv
w7s9lRWVmvtlKNyb9rZGc78cdhY/NdZq7pejN7/t6lPN/XLcdHUWPtPcL8eU
V4+66zT3y7/+/2uKatDcL8e9RwWXXmvul6OvX/zLZs39cjg7ObW/19z/9flt
CxtbNffLId645nq75n459vzentipuV+O0V+yzT9p7pfDoyclq1tzvxyu4SnD
ejX3y2GzbLuszxC6X47OBN8CLTJHgYm3yl5rk40VuLkiS6s/2VKBrhcXdXXJ
Ngr4D8zp0SNDgX2pUBuQPRQQpn+fa0TmKTCs/m/hQLJIgdI+XuaDyUoFKi+o
i4aQUxTI6LJZZkLOUKAtuOaOKTlXgZhp7vOGkVUKDMiddHI4uVqBlIdvPo0g
qxW4LdReYv7V/wUOZLrz
            "]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {1}}]& ], 
         "\"{0.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {2}}]& ], 
         "\"{0.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {3}}]& ], 
         "\"{0.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {4}}]& ], 
         "\"{1, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {5}}]& ], 
         "\"{1, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {6}}]& ], 
         "\"{1, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1, 365}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {7}}]& ], 
         "\"{1.5, 60}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {8}}]& ], 
         "\"{1.5, 100}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[{
           Directive[
            PointSize[
             NCache[
              Rational[1, 180], 0.005555555555555556]], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]]}, 
          Annotation[#, {{Callout}, Charting`Private`Tag$167912, {9}}]& ], 
         "\"{1.5, 365}\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "{1.5, 365}", 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {120.68603095683211`, 938.8659388122082}], 
              Offset[{0., 0.}, {120.68603095683211`, 938.8659388122082}], 
              Offset[{0., 0.}, {118.3471138390718, 958.0744825137294}], 
              Offset[{0., 0.}, {118.3471138390718, 958.0744825137294}], 
              Offset[{0, 0}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 5}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 10}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 10}, {116.00819672131148`, 977.2830262152506}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {120.68603095683211`, 938.8659388122082}], 
              Offset[{0., 0.}, {120.68603095683211`, 938.8659388122082}], 
              Offset[{0., 0.}, {118.3471138390718, 958.0744825137294}], 
              Offset[{0., 0.}, {118.3471138390718, 958.0744825137294}], 
              Offset[{0, 0}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 5}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 10}, {116.00819672131148`, 977.2830262152506}], 
              Offset[{0, 10}, {116.00819672131148`, 977.2830262152506}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{18.843380980481015`, 25.000000000000004`}, {
               116.00819672131148`, 977.2830262152506}], 
              
              Offset[{18.843380980481015`, 10.000000000000004`}, {
               116.00819672131148`, 977.2830262152506}], 
              
              Offset[{-24.156619019518985`, 9.999999999999996}, {
               116.00819672131148`, 977.2830262152506}], 
              
              Offset[{-24.156619019518985`, 24.999999999999996`}, {
               116.00819672131148`, 977.2830262152506}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.6566190195189847`, 17.5}, {116.00819672131148`, 
             977.2830262152506}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {69.64570215398696, 229.3488880724909}], 
              Offset[{0., 0.}, {69.64570215398696, 229.3488880724909}], 
              Offset[{0., 0.}, {66.8269494376492, 248.55743177401206`}], 
              Offset[{0., 0.}, {66.8269494376492, 248.55743177401206`}], 
              Offset[{0, 0}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 5}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 10}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 10}, {64.00819672131146, 267.76597547553325`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {69.64570215398696, 229.3488880724909}], 
              Offset[{0., 0.}, {69.64570215398696, 229.3488880724909}], 
              Offset[{0., 0.}, {66.8269494376492, 248.55743177401206`}], 
              Offset[{0., 0.}, {66.8269494376492, 248.55743177401206`}], 
              Offset[{0, 0}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 5}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 10}, {64.00819672131146, 267.76597547553325`}], 
              Offset[{0, 10}, {64.00819672131146, 267.76597547553325`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{19.99354681588016, 25.000000000000007`}, {
               64.00819672131146, 267.76597547553325`}], 
              
              Offset[{19.99354681588016, 10.000000000000005`}, {
               64.00819672131146, 267.76597547553325`}], 
              
              Offset[{-28.00645318411984, 9.999999999999995}, {
               64.00819672131146, 267.76597547553325`}], 
              
              Offset[{-28.00645318411984, 24.999999999999993`}, {
               64.00819672131146, 267.76597547553325`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-4.00645318411984, 17.5}, {64.00819672131146, 
             267.76597547553325`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {154.32343034023697`, 1112.0151904383893`}], 
              Offset[{0., 0.}, {154.32343034023697`, 1112.0151904383893`}], 
              Offset[{0., 0.}, {152.16581353077424`, 1131.2237341399104`}], 
              Offset[{0., 0.}, {152.16581353077424`, 1131.2237341399104`}], 
              Offset[{0, 0}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 5}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 10}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 10}, {150.0081967213115, 1150.4322778414316`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {154.32343034023697`, 1112.0151904383893`}], 
              Offset[{0., 0.}, {154.32343034023697`, 1112.0151904383893`}], 
              Offset[{0., 0.}, {152.16581353077424`, 1131.2237341399104`}], 
              Offset[{0., 0.}, {152.16581353077424`, 1131.2237341399104`}], 
              Offset[{0, 0}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 5}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 10}, {150.0081967213115, 1150.4322778414316`}], 
              Offset[{0, 10}, {150.0081967213115, 1150.4322778414316`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{22.20920271989496, 25.000000000000007`}, {
               150.0081967213115, 1150.4322778414316`}], 
              
              Offset[{22.20920271989496, 10.000000000000005`}, {
               150.0081967213115, 1150.4322778414316`}], 
              
              Offset[{-25.79079728010504, 9.999999999999995}, {
               150.0081967213115, 1150.4322778414316`}], 
              
              Offset[{-25.79079728010504, 24.999999999999993`}, {
               150.0081967213115, 1150.4322778414316`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{-1.7907972801050374`, 17.5}, {150.0081967213115, 
             1150.4322778414316`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {142.30799413019625`, 1143.8320323775265`}], 
              Offset[{0., 0.}, {142.30799413019625`, 1143.8320323775265`}], 
              Offset[{0., 0.}, {140.15809542575386`, 1163.0405760790477`}], 
              Offset[{0., 0.}, {140.15809542575386`, 1163.0405760790477`}], 
              Offset[{0, 0}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 5}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 10}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 10}, {138.0081967213115, 1182.249119780569}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {142.30799413019625`, 1143.8320323775265`}], 
              Offset[{0., 0.}, {142.30799413019625`, 1143.8320323775265`}], 
              Offset[{0., 0.}, {140.15809542575386`, 1163.0405760790477`}], 
              Offset[{0., 0.}, {140.15809542575386`, 1163.0405760790477`}], 
              Offset[{0, 0}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 5}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 10}, {138.0081967213115, 1182.249119780569}], 
              Offset[{0, 10}, {138.0081967213115, 1182.249119780569}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{15.872812678086134`, 25.000000000000004`}, {
               138.0081967213115, 1182.249119780569}], 
              
              Offset[{15.872812678086134`, 10.000000000000004`}, {
               138.0081967213115, 1182.249119780569}], 
              
              Offset[{-18.127187321913866`, 9.999999999999996}, {
               138.0081967213115, 1182.249119780569}], 
              
              Offset[{-18.127187321913866`, 24.999999999999996`}, {
               138.0081967213115, 1182.249119780569}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.1271873219138664`, 17.5}, {138.0081967213115, 
             1182.249119780569}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {81.90032642806264, 483.5559377932757}], 
              Offset[{0., 0.}, {81.90032642806264, 483.5559377932757}], 
              Offset[{0., 0.}, {79.95426157468705, 502.7644814947969}], 
              Offset[{0., 0.}, {79.95426157468705, 502.7644814947969}], 
              Offset[{0, 0}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 5}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 10}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 10}, {78.00819672131148, 521.9730251963181}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {81.90032642806264, 483.5559377932757}], 
              Offset[{0., 0.}, {81.90032642806264, 483.5559377932757}], 
              Offset[{0., 0.}, {79.95426157468705, 502.7644814947969}], 
              Offset[{0., 0.}, {79.95426157468705, 502.7644814947969}], 
              Offset[{0, 0}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 5}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 10}, {78.00819672131148, 521.9730251963181}], 
              Offset[{0, 10}, {78.00819672131148, 521.9730251963181}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{15.572365584263919`, 25.000000000000004`}, {
               78.00819672131148, 521.9730251963181}], 
              
              Offset[{15.572365584263919`, 10.000000000000004`}, {
               78.00819672131148, 521.9730251963181}], 
              
              Offset[{-24.42763441573608, 9.999999999999996}, {
               78.00819672131148, 521.9730251963181}], 
              
              Offset[{-24.42763441573608, 24.999999999999996`}, {
               78.00819672131148, 521.9730251963181}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-4.427634415736081, 17.5}, {78.00819672131148, 
             521.9730251963181}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {67.5197033881129, 216.2854982188635}], 
              Offset[{0., 0.}, {67.5197033881129, 216.2854982188635}], 
              Offset[{0., 0.}, {65.26395005471218, 235.4940419203847}], 
              Offset[{0., 0.}, {65.26395005471218, 235.4940419203847}], 
              Offset[{0, 0}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 5}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 10}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 10}, {63.00819672131148, 254.70258562190585`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {67.5197033881129, 216.2854982188635}], 
              Offset[{0., 0.}, {67.5197033881129, 216.2854982188635}], 
              Offset[{0., 0.}, {65.26395005471218, 235.4940419203847}], 
              Offset[{0., 0.}, {65.26395005471218, 235.4940419203847}], 
              Offset[{0, 0}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 5}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 10}, {63.00819672131148, 254.70258562190585`}], 
              Offset[{0, 10}, {63.00819672131148, 254.70258562190585`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.00574261213534, 25.000000000000004`}, {
               63.00819672131148, 254.70258562190585`}], 
              
              Offset[{17.00574261213534, 10.000000000000004`}, {
               63.00819672131148, 254.70258562190585`}], 
              
              Offset[{-22.99425738786466, 9.999999999999996}, {
               63.00819672131148, 254.70258562190585`}], 
              
              Offset[{-22.99425738786466, 24.999999999999996`}, {
               63.00819672131148, 254.70258562190585`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.9942573878646606`, 17.5}, {63.00819672131148, 
             254.70258562190585`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {76.48184265329039, 403.60917686357413`}], 
              Offset[{0., 0.}, {76.48184265329039, 403.60917686357413`}], 
              Offset[{0., 0.}, {74.24501968730092, 422.8177205650953}], 
              Offset[{0., 0.}, {74.24501968730092, 422.8177205650953}], 
              Offset[{0, 0}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 5}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 10}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 10}, {72.00819672131146, 442.0262642666165}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {76.48184265329039, 403.60917686357413`}], 
              Offset[{0., 0.}, {76.48184265329039, 403.60917686357413`}], 
              Offset[{0., 0.}, {74.24501968730092, 422.8177205650953}], 
              Offset[{0., 0.}, {74.24501968730092, 422.8177205650953}], 
              Offset[{0, 0}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 5}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 10}, {72.00819672131146, 442.0262642666165}], 
              Offset[{0, 10}, {72.00819672131146, 442.0262642666165}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.37892889002254, 25.000000000000004`}, {
               72.00819672131146, 442.0262642666165}], 
              
              Offset[{16.37892889002254, 10.000000000000004`}, {
               72.00819672131146, 442.0262642666165}], 
              
              Offset[{-26.62107110997746, 9.999999999999996}, {
               72.00819672131146, 442.0262642666165}], 
              
              Offset[{-26.62107110997746, 24.999999999999996`}, {
               72.00819672131146, 442.0262642666165}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-5.121071109977461, 17.5}, {72.00819672131146, 
             442.0262642666165}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {157.83938652368894`, 1245.211387524455}], 
              Offset[{0., 0.}, {157.83938652368894`, 1245.211387524455}], 
              Offset[{0., 0.}, {155.92379162250023`, 1264.4199312259761`}], 
              Offset[{0., 0.}, {155.92379162250023`, 1264.4199312259761`}], 
              Offset[{0, 0}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 5}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 10}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 10}, {154.0081967213115, 1283.6284749274973`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {157.83938652368894`, 1245.211387524455}], 
              Offset[{0., 0.}, {157.83938652368894`, 1245.211387524455}], 
              Offset[{0., 0.}, {155.92379162250023`, 1264.4199312259761`}], 
              Offset[{0., 0.}, {155.92379162250023`, 1264.4199312259761`}], 
              Offset[{0, 0}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 5}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 10}, {154.0081967213115, 1283.6284749274973`}], 
              Offset[{0, 10}, {154.0081967213115, 1283.6284749274973`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{22.3270292891701, 25.000000000000007`}, {
               154.0081967213115, 1283.6284749274973`}], 
              
              Offset[{22.3270292891701, 10.000000000000005`}, {
               154.0081967213115, 1283.6284749274973`}], 
              
              Offset[{-25.6729707108299, 9.999999999999995}, {
               154.0081967213115, 1283.6284749274973`}], 
              
              Offset[{-25.6729707108299, 24.999999999999993`}, {
               154.0081967213115, 1283.6284749274973`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.672970710829901, 17.5}, {154.0081967213115, 
             1283.6284749274973`}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {79.92826896777817, 467.90306654841254`}], 
              Offset[{0., 0.}, {79.92826896777817, 467.90306654841254`}], 
              Offset[{0., 0.}, {77.46823284454481, 487.11161024993373`}], 
              Offset[{0., 0.}, {77.46823284454481, 487.11161024993373`}], 
              Offset[{0, 0}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 5}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 10}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 10}, {75.00819672131148, 506.3201539514549}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              Offset[{0., 0.}, {79.92826896777817, 467.90306654841254`}], 
              Offset[{0., 0.}, {79.92826896777817, 467.90306654841254`}], 
              Offset[{0., 0.}, {77.46823284454481, 487.11161024993373`}], 
              Offset[{0., 0.}, {77.46823284454481, 487.11161024993373`}], 
              Offset[{0, 0}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 5}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 10}, {75.00819672131148, 506.3201539514549}], 
              Offset[{0, 10}, {75.00819672131148, 506.3201539514549}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.564321798284308`, 25.000000000000007`}, {
               75.00819672131148, 506.3201539514549}], 
              
              Offset[{17.564321798284308`, 10.000000000000005`}, {
               75.00819672131148, 506.3201539514549}], 
              
              Offset[{-30.435678201715692`, 9.999999999999995}, {
               75.00819672131148, 506.3201539514549}], 
              
              Offset[{-30.435678201715692`, 24.999999999999993`}, {
               75.00819672131148, 506.3201539514549}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-6.435678201715692, 17.5}, {75.00819672131148, 
             506.3201539514549}], 
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Deceased Infected Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 1294.3235415972204`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"{0.5, 60}\"", "\"{0.5, 100}\"", "\"{0.5, 365}\"", "\"{1, 60}\"", 
       "\"{1, 100}\"", "\"{1, 365}\"", "\"{1.5, 60}\"", "\"{1.5, 100}\"", 
       "\"{1.5, 365}\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period & disruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period & disruption start\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795617774844441*^9, {3.7956178625207653`*^9, 3.79561789038336*^9}, 
   3.795618939732092*^9, 3.795618974942878*^9, 3.795619794071085*^9, {
   3.795619824877006*^9, 3.795619849423876*^9}, 3.7956200791281023`*^9, 
   3.795620150218339*^9, {3.79562031655511*^9, 3.795620349274393*^9}},
 CellLabel->
  "Out[603]=",ExpressionUUID->"0ec5551d-0aec-4cee-83eb-a54b0ecdce4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"Last", "/@", "aVals"}], "]"}]], "Input",
 CellChangeTimes->{{3.7956177901665697`*^9, 3.795617799750969*^9}},
 CellLabel->
  "In[604]:=",ExpressionUUID->"8d59539d-c753-46f9-91e6-cf140d4ed7d2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "1181.8251691526198`", "1181.4868429173675`", "1176.2071686717782`",
      "1247.3813164386231`", "1243.0803519412939`", "1233.245198691985`", 
     "1294.3235415972204`", "1293.7729591992727`", "1285.0285874222625`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7956178002496033`*^9, {3.79561786260028*^9, 3.795617890475337*^9}, 
   3.7956189398122673`*^9, 3.795618975011203*^9, 3.7956197941721573`*^9, 
   3.795619836405246*^9, 3.795620079212866*^9, 3.795620150334683*^9, {
   3.795620316661367*^9, 3.795620349370811*^9}},
 CellLabel->
  "Out[604]=",ExpressionUUID->"8684be07-4c06-4762-859f-1fcf24ed010b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Last", "/@", "aVals"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Deceased Population at day 365\>\""}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.795617812675411*^9, {3.79561792648871*^9, 3.795617942742126*^9}, {
   3.795618452224924*^9, 3.7956184638887053`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"067171f7-8b83-43ca-bd46-e26cd111b872"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.7869342807965929, 0.5308875677375086, 0.9472269387936657], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             1181.8251691526198`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{37.697647058823534`, 
            70.01473249563264}, {-86.92523801256453, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1181.8251691526198`]& ,
         TagBoxNote->"1181.8251691526198"],
        StyleBox["1181.8251691526198`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1181.8251691526198`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7854302238362747, 0.5272709119170147, 0.9468276717876084], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             1181.4868429173675`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.95580549686947, 
            105.27289093367858`}, {-86.87405514321762, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1181.4868429173675`]& ,
         TagBoxNote->"1181.4868429173675"],
        StyleBox["1181.4868429173675`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1181.4868429173675`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             1176.2071686717782`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{108.2139639349154, 
            140.53104937172452`}, {-86.07533234566458, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1176.2071686717782`]& ,
         TagBoxNote->"1176.2071686717782"],
        StyleBox["1176.2071686717782`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1176.2071686717782`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9533889125386996, 0.93851627270461, 0.6192324275870765], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             1247.3813164386231`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{143.47212237296134`, 
            175.78920780977046`}, {-96.84274180568568, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1247.3813164386231`]& ,
         TagBoxNote->"1247.3813164386231"],
        StyleBox["1247.3813164386231`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1247.3813164386231`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9590037151874213, 0.9225847007718873, 0.6032223493539435], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
             1243.0803519412939`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{178.73028081100728`, 
            211.0473662478164}, {-96.19208075432385, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1243.0803519412939`]& ,
         TagBoxNote->"1243.0803519412939"],
        StyleBox["1243.0803519412939`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1243.0803519412939`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9570064042696347, 0.8644737993291208, 0.5893633694411555], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
             1233.245198691985}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{213.98843924905322`, 
            246.3055246858623}, {-94.70419329152944, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1233.245198691985]& ,
         TagBoxNote->"1233.245198691985"],
        StyleBox["1233.245198691985`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1233.245198691985, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
             1294.3235415972204`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.24659768709913`, 
            281.5636831239083}, {-103.9442832375955, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1294.3235415972204`]& ,
         TagBoxNote->"1294.3235415972204"],
        StyleBox["1294.3235415972204`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1294.3235415972204`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4396650907910561, 0.7144696791954366, 0.9285343354886865], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
             1293.7729591992727`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{284.5047561251451, 
            316.82184156195416`}, {-103.86098970607893`, 92.36433524808993}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1293.7729591992727`]& ,
         TagBoxNote->"1293.7729591992727"],
        StyleBox["1293.7729591992727`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1293.7729591992727`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5725833271628233, 0.789062526978681, 0.9516797963032825], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 
             1285.0285874222625`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{319.762914563191, 
            352.0800000000001}, {-102.5381184902246, 92.36433524808993}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1285.0285874222625`]& ,
         TagBoxNote->"1285.0285874222625"],
        StyleBox["1285.0285874222625`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1285.0285874222625`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox[
        RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        RotationBox["\"{1, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        RotationBox["\"{1, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        RotationBox["\"{1, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.5235987755982988], 
        TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  PlotLabel->FormBox["\"Deceased Population at day 365\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.7956178133754883`*^9, {3.7956178626939697`*^9, 3.795617890534913*^9}, 
   3.795617990580868*^9, 3.7956184651771517`*^9, 3.795618939895239*^9, 
   3.795618975103043*^9, 3.7956197942300034`*^9, 3.795619836462335*^9, 
   3.795620079300885*^9, 3.795620150431018*^9, {3.795620316770227*^9, 
   3.795620349461712*^9}},
 CellLabel->
  "Out[605]=",ExpressionUUID->"4b08d0ec-3805-4eb9-a7d5-14d649d404c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.793819068515966*^9, 
  3.793819069978736*^9}},ExpressionUUID->"f256e4e5-faed-46cc-986e-\
34a17a8705dd"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.7938192941283903`*^9, 
  3.793819299584835*^9}},ExpressionUUID->"81113e5d-f92d-4597-851d-\
24002e4383f5"],

Cell[TextData[{
 "[Wk1] Wikipedia entry, ",
 ButtonBox["\"Compartmental models in epidemiology\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925809029512987`*^9, 3.792580956058198*^9}, {
  3.7951690818496*^9, 
  3.7951690840996933`*^9}},ExpressionUUID->"d3fe549f-62e0-4d22-bf25-\
b776df2c6311"],

Cell[TextData[{
 "[Wl2] Wikipedia entry, ",
 ButtonBox["\"Coronavirus disease 2019\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Coronavirus_disease_2019"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Coronavirus_disease_2019"],
 "."
}], "Text",
 CellChangeTimes->{{3.79516908583174*^9, 
  3.795169130465127*^9}},ExpressionUUID->"eb1ec0a5-146d-46ad-ab28-\
c2d15c021575"],

Cell[TextData[{
 "[HH1] Herbert W. Hethcote (2000). ",
 ButtonBox["\"The Mathematics of Infectious Diseases\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.\
pdf"], None},
  ButtonNote->
   "http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.pdf"],
 ". SIAM Review. 42 (4): 599\[Dash]653. Bibcode:2000SIAMR..42..599H. \
doi:10.1137/s0036144500371907."
}], "Text",
 CellChangeTimes->{{3.792336502490754*^9, 3.792336535278623*^9}, {
  3.792409361602792*^9, 
  3.792409368869828*^9}},ExpressionUUID->"48002b9c-2643-48af-a70e-\
9cb267e88d4d"],

Cell[TextData[{
 "[BC1] Lucia Breierova,  Mark Choudhari,  ",
 ButtonBox["An Introduction to Sensitivity Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"], 
    None},
  ButtonNote->
   "https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"],
 ", (1996), Massachusetts Institute of Technology."
}], "Text",
 CellChangeTimes->{{3.7951006575283747`*^9, 3.795100709469963*^9}, {
  3.795100763074478*^9, 
  3.795100763076239*^9}},ExpressionUUID->"3f222569-f6d3-45e7-8b54-\
7e7be4c5b33c"],

Cell[TextData[{
 "[AA1] Anton Antonov, ",
 ButtonBox["\"Coronavirus propagation modeling considerations\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792580630613844*^9, 3.79258066346693*^9}, {
  3.792580699618342*^9, 
  3.792580699619379*^9}},ExpressionUUID->"f7f7b9bf-c48f-45b9-8bc6-\
f61997f78dfa"],

Cell[TextData[{
 "[AA2] Anton Antonov, ",
 ButtonBox["\"Basic experiments workflow for simple epidemiological models\"",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792836760631132*^9, 3.792836844502586*^9}, {
  3.792942846010427*^9, 
  3.792942880222164*^9}},ExpressionUUID->"4401a97c-9ad9-4eb4-8f74-\
23d7acaafd76"],

Cell[TextData[{
 "[AA3] Anton Antonov, ",
 ButtonBox["\"Scaling of Epidemiology Models with Multi-site Compartments\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
  3.793819286943555*^9, 
  3.793819291565818*^9}},ExpressionUUID->"bf50a26f-30b7-4aa2-8395-\
3c12b1e296be"],

Cell[TextData[{
 "[AA4] Anton Antonov, ",
 ButtonBox["\"SEI2HR model with quarantine scenarios\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.795256617873764*^9, 
  3.795256664757248*^9}},ExpressionUUID->"5bb91dd7-eb35-441d-8aaf-\
1875b8dda550"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repositories, packages", "Subsection",
 CellChangeTimes->{{3.792792973327919*^9, 3.7927929880315247`*^9}, {
  3.7930262856498327`*^9, 
  3.7930262863136473`*^9}},ExpressionUUID->"f8334a2c-1b13-4969-8ab6-\
7eef411907cf"],

Cell[TextData[{
 "[WRI1] Wolfram Research, Inc., ",
 ButtonBox["\"Epidemic Data for Novel Coronavirus COVID-19\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/resourcesystem/published/DataRepository/\
resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"],
 ", ",
 ButtonBox["WolframCloud",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com"], None},
  ButtonNote->"https://www.wolframcloud.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.79284700154799*^9, 3.792847018423129*^9}, {
  3.792848397923408*^9, 
  3.792848432986006*^9}},ExpressionUUID->"a48af076-fbbb-4a67-8f12-\
82cdcc2820f5"],

Cell[TextData[{
 "[AAr1] Anton Antonov, ",
 ButtonBox["Coronavirus propagation dynamics project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 
  3.792518811281426*^9}},ExpressionUUID->"6f462c3d-adc3-4392-8700-\
9583c80f68cc"],

Cell[TextData[{
 "[AAr2] Anton Antonov, ",
 ButtonBox["\"Epidemiology Compartmental Modeling Monad in R\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 ", (2020), ",
 ButtonBox["ECMon-R at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 3.792518811281426*^9}, {3.795601050112214*^9, 
  3.795601119254492*^9}},ExpressionUUID->"90b2dc49-6210-4d34-bdfa-\
59b8094c981c"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["\"Epidemiology models Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792793007922522*^9, 3.7927930082592697`*^9}, {
   3.792850913255866*^9, 3.792850913660157*^9}, 
   3.795595421054535*^9},ExpressionUUID->"bfd66add-0b05-4e86-bd12-\
3f40f4149130"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["\"Epidemiology models modifications Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"], None},
  
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792782191837761*^9, 3.792782197033924*^9}, {
   3.792782233165003*^9, 3.7927822331669693`*^9}, {3.792793010217144*^9, 
   3.792793010914422*^9}, {3.7928509155729322`*^9, 3.7928509156292143`*^9}, 
   3.795595416691061*^9},ExpressionUUID->"60ebdf74-7aee-43ad-836a-\
1e02c79dd23e"],

Cell[TextData[{
 "[AAp3] Anton Antonov, ",
 ButtonBox["\"Epidemiology modeling visualization functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
   3.792850918205223*^9}, {3.7930250981159153`*^9, 3.793025108307509*^9}, {
   3.793025139244979*^9, 3.793025139245862*^9}, 
   3.795595412739843*^9},ExpressionUUID->"a654c9b4-349b-4b4a-9d2c-\
fee2faa80cd5"],

Cell[TextData[{
 "[AAp4] Anton Antonov, ",
 ButtonBox["\"Epidemiology modeling simulation functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelingSimulationFunctions.\
m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelingSimulationFunctions.\
m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250837820044`*^9, 3.793025084411715*^9}, {
  3.7955954090394087`*^9, 3.795595435792547*^9}, {3.795595553654883*^9, 
  3.7955955704051523`*^9}},ExpressionUUID->"35f17ec1-8a3c-4bf0-aa02-\
045f3b4b36fb"],

Cell[TextData[{
 "[AAp5] Anton Antonov, ",
 ButtonBox["\"System dynamics interactive interfaces functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250837820044`*^9, 3.793025084411715*^9}, {
  3.7955953996237307`*^9, 
  3.795595399949171*^9}},ExpressionUUID->"9e6c5e59-2128-468e-8487-\
0190301d5f27"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project management files", "Subsection",
 CellChangeTimes->{{3.793834890921639*^9, 
  3.793834908752763*^9}},ExpressionUUID->"ff6247a6-4799-4eb7-898c-\
3190af5da113"],

Cell[TextData[{
 "[AAo1] Anton Antonov, ",
 ButtonBox["WirVsVirus-Hackathon-work-plan.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-Hackathon-work-plan.org"], 
    None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-Hackathon-work-plan.org"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793835448988027*^9, 
  3.7938355324749117`*^9}},ExpressionUUID->"e7e7c6e4-9190-405b-89c2-\
4763424ac919"],

Cell[TextData[{
 "[AAo2] Anton Antonov, ",
 ButtonBox["WirVsVirus-hackathon-Geo-spatial-temporal-model-mind-map",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-hackathon-Geo-spatial-\
temporal-model-mind-map.pdf"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-hackathon-Geo-spatial-\
temporal-model-mind-map.pdf"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793835448988027*^9, 3.7938355324749117`*^9}, {
  3.793835598176846*^9, 3.793835616649465*^9}, {3.793895781827621*^9, 
  3.793895781830353*^9}},ExpressionUUID->"f30bfe25-d931-4d07-ac1c-\
016f327ec36e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2032, 1395},
WindowMargins->{{Automatic, 531}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 13, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"559418e6-2a63-4084-85cf-7dd96b30fa68"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 586, 8, 98, "Title",ExpressionUUID->"2bd8657f-501a-44a7-94dc-8941a5a92819"],
Cell[1169, 32, 447, 6, 53, "Subtitle",ExpressionUUID->"47676929-840e-41ae-a627-b2f184faf4f1"],
Cell[1619, 40, 1061, 25, 104, "Text",ExpressionUUID->"f6053c3c-480e-490f-9a22-3e19ead9ce24"],
Cell[CellGroupData[{
Cell[2705, 69, 159, 3, 67, "Section",ExpressionUUID->"04c76682-7ae6-48c1-8dc3-8ee07083bf48"],
Cell[2867, 74, 879, 19, 35, "Text",ExpressionUUID->"e21dada7-c755-4b2f-97a7-be5e6daec8c0"],
Cell[CellGroupData[{
Cell[3771, 97, 572, 12, 30, "Input",ExpressionUUID->"2c1f215d-af39-4b73-a6f0-42d4b4cc43a6"],
Cell[4346, 111, 218677, 3589, 600, "Output",ExpressionUUID->"2e8e48d9-1ef6-4f51-8e97-56f6d328f0bc"]
}, Open  ]],
Cell[223038, 3703, 560, 10, 35, "Text",ExpressionUUID->"6b17ec89-f0c0-436f-80e3-22efcee7f81b"],
Cell[223601, 3715, 577, 10, 35, "Text",ExpressionUUID->"962c0488-c0f0-4c2b-8144-8a29eeed7948"],
Cell[224181, 3727, 977, 20, 35, "Text",ExpressionUUID->"d9706f8e-8733-4b70-a7e0-0e7df046ef09"],
Cell[CellGroupData[{
Cell[225183, 3751, 158, 3, 54, "Subsection",ExpressionUUID->"fe44ebbf-3242-4acc-92ad-75d4e550863a"],
Cell[CellGroupData[{
Cell[225366, 3758, 158, 3, 45, "Subsubsection",ExpressionUUID->"4aed5812-31ea-46a6-a8b6-20945b0a34e2"],
Cell[225527, 3763, 894, 19, 35, "Text",ExpressionUUID->"70d62aef-97c2-4ab7-87f7-a7bb338b5482"],
Cell[226424, 3784, 356, 7, 35, "Text",ExpressionUUID->"76adf2ab-56f8-4428-8870-294f70a655a3"],
Cell[226783, 3793, 364, 8, 35, "Text",ExpressionUUID->"8df2fbf4-7e2d-4385-8512-714c43a2df4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227184, 3806, 157, 3, 45, "Subsubsection",ExpressionUUID->"fa732dfc-ce1d-443a-985c-5ff10796254d"],
Cell[227344, 3811, 538, 10, 35, "Text",ExpressionUUID->"4ca53798-e314-4f33-857a-be694a2915fe"],
Cell[227885, 3823, 183, 3, 35, "Text",ExpressionUUID->"d00e31bb-51df-4a15-8d81-e0ca958dcd96"],
Cell[CellGroupData[{
Cell[228093, 3830, 252, 4, 32, "Item",ExpressionUUID->"86f08e0b-6624-423f-bb66-d0f1ca3f2734"],
Cell[CellGroupData[{
Cell[228370, 3838, 392, 8, 26, "Subitem",ExpressionUUID->"02e75549-d2e1-474f-b78a-1ad298114435"],
Cell[228765, 3848, 233, 4, 26, "Subitem",ExpressionUUID->"e94f4c59-521f-4f08-b828-9991384328f4"],
Cell[229001, 3854, 239, 4, 26, "Subitem",ExpressionUUID->"524e1d2c-bb1f-46ee-b320-672b17e12298"]
}, Open  ]],
Cell[229255, 3861, 207, 4, 32, "Item",ExpressionUUID->"f0de935d-c656-4c6c-acfd-0b06ff4e2993"],
Cell[CellGroupData[{
Cell[229487, 3869, 317, 7, 26, "Subitem",ExpressionUUID->"29a530ef-1f7b-4e39-ac59-b68e7386ca27"],
Cell[229807, 3878, 369, 8, 26, "Subitem",ExpressionUUID->"4133c3a1-4e0f-426b-a95c-5b1445834f8b"],
Cell[230179, 3888, 326, 6, 26, "Subitem",ExpressionUUID->"cd2b53e3-0671-4073-958d-08cc6c22d9af"]
}, Open  ]],
Cell[230520, 3897, 153, 3, 32, "Item",ExpressionUUID->"732ef85c-d021-4f20-8c47-557b11a2bb0b"],
Cell[CellGroupData[{
Cell[230698, 3904, 264, 4, 26, "Subitem",ExpressionUUID->"fad9dc72-ac1d-44ba-adfc-e7f3e66cae95"],
Cell[230965, 3910, 263, 4, 26, "Subitem",ExpressionUUID->"2861d18f-1c93-43b6-8351-32738db65b60"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231289, 3921, 164, 3, 44, "Subsubsection",ExpressionUUID->"f9eb428e-d3c8-4fc5-93ec-93dd4fb6d209"],
Cell[231456, 3926, 192, 3, 35, "Text",ExpressionUUID->"30d97ef6-685b-4603-b226-387ec0b96f10"],
Cell[CellGroupData[{
Cell[231673, 3933, 163, 3, 32, "Item",ExpressionUUID->"24b2ea0c-9d5f-489c-8485-d6d720ea567d"],
Cell[CellGroupData[{
Cell[231861, 3940, 245, 4, 26, "Subitem",ExpressionUUID->"41f7009e-3029-48a3-bebe-d2cb37406f0d"],
Cell[232109, 3946, 242, 4, 26, "Subitem",ExpressionUUID->"5e085ae7-d2ee-4c2c-8a68-09e21114bf85"],
Cell[232354, 3952, 346, 7, 26, "Subitem",ExpressionUUID->"aeed4c28-15c0-43d9-a2d1-3b70833d180b"],
Cell[232703, 3961, 203, 3, 26, "Subitem",ExpressionUUID->"f60438e6-6e75-4835-8492-e8f93bd7beef"]
}, Open  ]],
Cell[232921, 3967, 159, 3, 32, "Item",ExpressionUUID->"960eeb22-a0cb-41c3-935d-8406bc30b298"],
Cell[233083, 3972, 368, 7, 26, "Subitem",ExpressionUUID->"1201e047-f1bd-4141-a88a-97e2de12012e"],
Cell[233454, 3981, 209, 4, 32, "Item",ExpressionUUID->"7faeeb39-3bb9-4595-bbaa-d3f8c06a42ad"],
Cell[233666, 3987, 271, 4, 26, "Subitem",ExpressionUUID->"ae126cad-82ee-4423-9114-db49ee84a90d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233986, 3997, 305, 5, 44, "Subsubsection",ExpressionUUID->"3c3edbd1-9a06-454f-b973-3dc625f5aa99"],
Cell[234294, 4004, 488, 9, 35, "Text",ExpressionUUID->"e3a9e0f1-c89b-4591-9ae1-208d0e8cf195"],
Cell[234785, 4015, 13938, 293, 834, "Output",ExpressionUUID->"99d6e655-d1db-4035-9cab-92c27e8fd0ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248772, 4314, 170, 3, 54, "Subsection",ExpressionUUID->"b6ef7380-6d53-43a7-a5ee-56470f7dde30"],
Cell[248945, 4319, 202, 3, 35, "Text",ExpressionUUID->"bd9ba6f5-d3d0-43b8-98dc-cb45e8c2fbb4"],
Cell[CellGroupData[{
Cell[249172, 4326, 214, 4, 32, "Item",ExpressionUUID->"93b63510-0fc1-4ebc-ad07-750ea7ad18a6"],
Cell[249389, 4332, 290, 4, 32, "Item",ExpressionUUID->"e7002967-a828-415b-88eb-2c68231de602"],
Cell[249682, 4338, 334, 5, 32, "Item",ExpressionUUID->"82fa4414-52d4-47ae-9cb7-691b5c4354f1"],
Cell[250019, 4345, 426, 6, 32, "Item",ExpressionUUID->"1b9fbd34-398a-4de4-bbae-13fb31aed7ee"],
Cell[250448, 4353, 417, 8, 32, "Item",ExpressionUUID->"bdc5394b-a274-4114-a970-97bdb08c80d3"],
Cell[250868, 4363, 234, 4, 32, "Item",ExpressionUUID->"e23379bc-f832-49e3-acea-931887395905"],
Cell[251105, 4369, 380, 7, 27, "Subitem",ExpressionUUID->"8f34cdb6-fba6-4e73-910c-96a15635cc9b"],
Cell[251488, 4378, 309, 5, 32, "Item",ExpressionUUID->"37304399-95c5-4733-9d9f-d8e61e78ac32"],
Cell[251800, 4385, 218, 4, 32, "Item",ExpressionUUID->"5a5d06b4-529d-49ca-857e-2e063090fa38"],
Cell[252021, 4391, 214, 4, 32, "Item",ExpressionUUID->"0e912a1d-1ca8-4b99-8c25-c4022c1efa56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252296, 4402, 158, 3, 67, "Section",ExpressionUUID->"8aeeeab8-1818-46da-89b7-1bac19c8d5fa"],
Cell[252457, 4407, 495, 10, 35, "Text",ExpressionUUID->"5bd1f7ed-13b2-4018-a1bd-eb3aadd643e7"],
Cell[252955, 4419, 1680, 38, 131, "Input",ExpressionUUID->"3633d78f-638c-4bc4-82a7-96efbf1cb21f",
 InitializationCell->True],
Cell[254638, 4459, 337, 7, 30, "Input",ExpressionUUID->"4e80ca99-ea06-4091-b942-2d71d2644ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255012, 4471, 368, 6, 67, "Section",ExpressionUUID->"21916156-298d-467d-97d0-a7056ad95f19"],
Cell[255383, 4479, 454, 8, 35, "Text",ExpressionUUID->"5a8412ce-d47e-4ba6-8fa1-713f8e582bf3"],
Cell[255840, 4489, 179, 3, 35, "Text",ExpressionUUID->"17a01eb6-8a15-468d-b141-b1e3aae743c9"],
Cell[CellGroupData[{
Cell[256044, 4496, 1421, 32, 94, "Input",ExpressionUUID->"8dd5eabd-8d6e-4939-9fe5-29ec82eacb42"],
Cell[257468, 4530, 96591, 2469, 635, "Output",ExpressionUUID->"4de95579-1d6b-442a-985a-c60ca735b9e4"]
}, Open  ]],
Cell[354074, 7002, 211, 4, 35, "Text",ExpressionUUID->"fcef4ad4-0675-40f4-94e1-ec3a9502f9b5"],
Cell[CellGroupData[{
Cell[354310, 7010, 935, 18, 52, "Input",ExpressionUUID->"204facf0-05e5-4817-b13b-6239e5308acf"],
Cell[355248, 7030, 153535, 3935, 1521, "Output",ExpressionUUID->"be99e2de-6a5f-49e7-9153-c6289b23b741"]
}, Open  ]],
Cell[508798, 10968, 286, 5, 35, "Text",ExpressionUUID->"afbc757b-e4af-468c-8ebe-9994292dc48c"],
Cell[CellGroupData[{
Cell[509109, 10977, 723, 18, 30, "Input",ExpressionUUID->"1c7c7d65-85c3-49fc-8d46-d5d6ef58eca8"],
Cell[509835, 10997, 44035, 1171, 757, "Output",ExpressionUUID->"8c3c2b78-4cbc-4e06-8d4b-3338efb9a1b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553919, 12174, 169, 3, 67, "Section",ExpressionUUID->"59c38173-bf11-4e2b-b6b6-22e76203d162"],
Cell[554091, 12179, 569, 10, 35, "Text",ExpressionUUID->"0af4145f-72ae-4407-8866-b715d6989280"],
Cell[554663, 12191, 841, 14, 58, "Text",ExpressionUUID->"6fd6ab15-1bc3-4f72-98bd-b239a26b83a8"],
Cell[555507, 12207, 374, 7, 35, "Text",ExpressionUUID->"a73c934f-b22e-4e9e-b3ab-9a973c3ff689"],
Cell[555884, 12216, 357, 9, 35, "Text",ExpressionUUID->"cc7e07f0-7a7b-4639-b189-88ce2b3289c4"],
Cell[CellGroupData[{
Cell[556266, 12229, 243, 4, 54, "Subsection",ExpressionUUID->"7b0be8c9-5703-4a1d-886f-306ea56032c0"],
Cell[556512, 12235, 1322, 20, 81, "Text",ExpressionUUID->"cd147123-671a-4e20-855e-6dada7cc6478"],
Cell[557837, 12257, 1207, 19, 58, "Text",ExpressionUUID->"70e0d152-d8ca-4833-aa85-888c6e1eb1ff"],
Cell[559047, 12278, 694, 12, 58, "Text",ExpressionUUID->"d1e99740-743b-40bb-b66c-a486f9d62d4d"],
Cell[559744, 12292, 817, 13, 35, "Text",ExpressionUUID->"97b7e3ce-eb0a-445b-aab2-a7eb112bb343"],
Cell[560564, 12307, 238, 6, 35, "Text",ExpressionUUID->"4e055e2f-5302-4349-8080-a99914819c51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560839, 12318, 172, 3, 54, "Subsection",ExpressionUUID->"f9336d09-0acf-4fbc-82ba-149b46c53540"],
Cell[561014, 12323, 261, 6, 35, "Text",ExpressionUUID->"aa02f6a8-c419-4bf1-842b-be7e05b310c6"],
Cell[561278, 12331, 591, 16, 30, "Input",ExpressionUUID->"476d8f1c-3010-473e-ad49-8b9ccf55bf3f",
 Evaluatable->False],
Cell[561872, 12349, 454, 9, 35, "Text",ExpressionUUID->"60f66cdb-6f17-4046-8540-e8565b9b6157"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562363, 12363, 189, 3, 54, "Subsection",ExpressionUUID->"f7d4b0fc-1cf2-4f7b-b7d5-80995a1c5e4d"],
Cell[562555, 12368, 522, 9, 35, "Text",ExpressionUUID->"64d528cb-517d-4c90-b233-fad94bc8fc63"],
Cell[563080, 12379, 256, 6, 35, "Text",ExpressionUUID->"ab177d96-650c-415e-b9c1-26b7a447b07e"],
Cell[563339, 12387, 251, 4, 35, "Text",ExpressionUUID->"9579a44b-f0ee-4618-a7a7-dfd30921e03a"],
Cell[CellGroupData[{
Cell[563615, 12395, 536, 13, 30, "Input",ExpressionUUID->"dbadacfb-d76f-4760-8d6e-858eaee2c69f"],
Cell[564154, 12410, 1173, 28, 71, "Output",ExpressionUUID->"93fc67ef-de59-40d9-b226-a03a46111265"]
}, Open  ]],
Cell[565342, 12441, 253, 4, 35, "Text",ExpressionUUID->"809eb81e-c6e6-43a6-8abb-5b06d097f755"],
Cell[CellGroupData[{
Cell[565620, 12449, 534, 13, 30, "Input",ExpressionUUID->"5fbf641a-9b20-4428-80e5-432e3952a737"],
Cell[566157, 12464, 1321, 34, 89, "Output",ExpressionUUID->"dc4591e5-5678-417a-8135-05aaba17a1f9"]
}, Open  ]],
Cell[567493, 12501, 455, 10, 35, "Text",ExpressionUUID->"892a5009-5dce-47a7-bb23-7f2d41686fe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567985, 12516, 164, 3, 54, "Subsection",ExpressionUUID->"8d5d45d1-12a2-4f9a-927b-09d75b72b978"],
Cell[568152, 12521, 412, 8, 35, "Text",ExpressionUUID->"56e12740-ebac-42c7-bf25-9f54345388d7"],
Cell[568567, 12531, 3859, 103, 27, "DisplayFormula",ExpressionUUID->"4df11932-01b1-4b29-a788-55532d081d45"],
Cell[572429, 12636, 430, 12, 35, "Text",ExpressionUUID->"6b3ada03-b48a-4483-a4f3-88b57b8f0f57"],
Cell[572862, 12650, 428, 9, 35, "Text",ExpressionUUID->"f390e241-7da1-4f7b-a957-3426ff40eef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573327, 12664, 221, 4, 54, "Subsection",ExpressionUUID->"58a75a4f-af3c-4001-b9a3-8aac36a47fb1"],
Cell[573551, 12670, 558, 10, 35, "Text",ExpressionUUID->"ab520e84-281a-49f2-8df6-6bb7ed75e5ab"],
Cell[574112, 12682, 9903, 265, 45, "DisplayFormula",ExpressionUUID->"10471187-570f-4930-97a9-02a0f0b374be"],
Cell[584018, 12949, 226, 5, 35, "Text",ExpressionUUID->"a532758d-5d97-4867-94be-c8eec1ddf8aa"],
Cell[584247, 12956, 383, 10, 45, "DisplayFormula",ExpressionUUID->"da26b84c-15d1-472d-95a1-fca1b915ce78"],
Cell[584633, 12968, 160, 3, 35, "Text",ExpressionUUID->"8f88d5c3-a041-436a-b6d4-9c1964b3d64e"],
Cell[584796, 12973, 5861, 160, 45, "DisplayFormula",ExpressionUUID->"5557feeb-8a01-4673-81b7-e6c8b5e3e5d0"],
Cell[590660, 13135, 445, 11, 35, "Text",ExpressionUUID->"4ff17277-254d-46eb-b449-6d3a410be427"],
Cell[CellGroupData[{
Cell[591130, 13150, 164, 3, 45, "Subsubsection",ExpressionUUID->"e24562b2-25fa-4215-857f-9cfa0f4ea9eb"],
Cell[591297, 13155, 280, 6, 35, "Text",ExpressionUUID->"efd18262-1cc4-4a34-b773-e5a291d1ec5b"],
Cell[CellGroupData[{
Cell[591602, 13165, 816, 21, 73, "Input",ExpressionUUID->"8ccec829-91d5-445a-b862-1968b6252161"],
Cell[592421, 13188, 6474, 180, 52, "Output",ExpressionUUID->"5de4c786-d282-4fba-bc20-2f5f25cb53ac"]
}, Open  ]],
Cell[598910, 13371, 299, 7, 35, "Text",ExpressionUUID->"f77d0a35-409d-434b-b957-65d4dd3dc596"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[599258, 13384, 168, 3, 54, "Subsection",ExpressionUUID->"f4b0f0d7-cc04-4bb0-9583-75f44afad27d"],
Cell[599429, 13389, 1015, 16, 58, "Text",ExpressionUUID->"23eda04c-c024-40f2-8fed-1eb31cf445bd"],
Cell[600447, 13407, 10468, 280, 46, "DisplayFormula",ExpressionUUID->"7d8aa2a1-ff5d-4259-bcd7-6bee7ffc741f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610952, 13692, 188, 3, 54, "Subsection",ExpressionUUID->"87767080-69e3-43cb-879c-1396889a376f"],
Cell[611143, 13697, 531, 10, 58, "Text",ExpressionUUID->"6f2f2cd1-f842-499e-8e37-9775ac0b804a"],
Cell[611677, 13709, 4884, 127, 46, "DisplayFormula",ExpressionUUID->"b0a097d7-6301-43b5-a290-36260ac60157"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616598, 13841, 188, 3, 54, "Subsection",ExpressionUUID->"0cedad9c-0ebb-4fc4-b52f-ab2dc38ea842"],
Cell[616789, 13846, 673, 11, 58, "Text",ExpressionUUID->"2869ec69-72bd-4fda-8f78-6953b0fb40d4"],
Cell[617465, 13859, 6710, 175, 46, "DisplayFormula",ExpressionUUID->"0eba0b13-add5-413f-929d-c10f04675193"],
Cell[624178, 14036, 296, 6, 35, "Text",ExpressionUUID->"fa06293f-06a4-41ea-bf31-be16ef4befc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624511, 14047, 222, 4, 54, "Subsection",ExpressionUUID->"beb0f77d-f9c5-471c-b3a8-a2fb4dfed69a"],
Cell[624736, 14053, 441, 8, 35, "Text",ExpressionUUID->"bb3c4600-2b15-4077-b5c1-5a7a3667cdbc"],
Cell[625180, 14063, 255, 6, 35, "Text",ExpressionUUID->"b0e1eb60-03d0-4307-a09a-19ff3f396d44"],
Cell[CellGroupData[{
Cell[625460, 14073, 413, 8, 32, "Item",ExpressionUUID->"3e39e6d1-b589-46a6-ad7f-2e1859a9bfc2"],
Cell[625876, 14083, 481, 9, 32, "Item",ExpressionUUID->"bdf84497-41cf-4dca-9924-a49819fba429"],
Cell[626360, 14094, 469, 8, 32, "Item",ExpressionUUID->"a8ba903b-c3ec-45f0-b253-ec41427c93e3"],
Cell[626832, 14104, 314, 6, 32, "Item",ExpressionUUID->"2dcbaa3e-cf2b-45d5-b149-1b03c357c797"],
Cell[627149, 14112, 420, 8, 32, "Item",ExpressionUUID->"fb115abd-8c70-45f2-a972-1b5b6a584b6b"]
}, Open  ]],
Cell[627584, 14123, 166, 3, 35, "Text",ExpressionUUID->"02ea873d-d5e8-402b-87c8-54035629b749"],
Cell[627753, 14128, 11057, 282, 57, "DisplayFormula",ExpressionUUID->"c273eacd-34cc-4830-8c7e-ef27b94d70a1"],
Cell[638813, 14412, 500, 9, 35, "Text",ExpressionUUID->"68318750-4a4a-4a35-87d8-76e6cc222c46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639350, 14426, 168, 3, 54, "Subsection",ExpressionUUID->"5e05ba14-efcd-40df-8921-8ec0d7268588"],
Cell[639521, 14431, 382, 8, 35, "Text",ExpressionUUID->"1a765286-5ab8-4506-9572-da693f85f06d"],
Cell[639906, 14441, 3421, 91, 46, "DisplayFormula",ExpressionUUID->"0dcd528b-8b42-4741-a03c-273d1986a675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643364, 14537, 227, 4, 54, "Subsection",ExpressionUUID->"54142616-530a-4b27-ae9b-309ec86001e2"],
Cell[643594, 14543, 370, 8, 35, "Text",ExpressionUUID->"8d8c241b-f126-4606-af6a-1ec9dcca6e03"],
Cell[643967, 14553, 5018, 129, 27, "DisplayFormula",ExpressionUUID->"2125a313-0e7a-4195-aca9-d367f58fee40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649022, 14687, 212, 4, 54, "Subsection",ExpressionUUID->"d8367f9e-b854-4fbe-9074-2cf985f0d195"],
Cell[649237, 14693, 569, 10, 58, "Text",ExpressionUUID->"ba2892c0-0c98-4c25-9c36-6b8350e0cb2b"],
Cell[649809, 14705, 1484, 40, 27, "DisplayFormula",ExpressionUUID->"861b06bc-4415-4990-9f06-29c3e6822f65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651330, 14750, 222, 4, 54, "Subsection",ExpressionUUID->"960a9aac-56af-43b1-a674-555d2ed1f442"],
Cell[651555, 14756, 496, 9, 35, "Text",ExpressionUUID->"67ac4510-3217-411f-946f-70e741cb5384"],
Cell[652054, 14767, 327, 6, 35, "Text",ExpressionUUID->"ef99e4a2-917d-4095-a6a9-5d65ed94da84"],
Cell[CellGroupData[{
Cell[652406, 14777, 338, 7, 32, "Item",ExpressionUUID->"6a33c5a2-3fcd-4e14-b7ff-98b3817a1dd1"],
Cell[652747, 14786, 491, 12, 32, "Item",ExpressionUUID->"d3166257-1b59-436c-a187-b30132c6ed48"],
Cell[653241, 14800, 450, 12, 32, "Item",ExpressionUUID->"c5fd803c-419e-4413-8e14-f13b0d20adf0"],
Cell[653694, 14814, 303, 7, 32, "Item",ExpressionUUID->"4e03a843-05d4-4bb9-8f3c-6891bc40af56"],
Cell[654000, 14823, 508, 10, 32, "Item",ExpressionUUID->"ccf222ea-5d2a-461c-b609-4cfccf6fd3eb"],
Cell[654511, 14835, 399, 8, 32, "Item",ExpressionUUID->"e0b3a09a-8db4-4257-a301-da68a6f8c8ac"]
}, Open  ]],
Cell[654925, 14846, 171, 3, 35, "Text",ExpressionUUID->"b7201446-8eaa-4cd8-a514-cd19f33381b4"],
Cell[655099, 14851, 693, 17, 46, "DisplayFormula",ExpressionUUID->"4914d895-0d2d-43cb-bb62-0acc718959fe"],
Cell[655795, 14870, 181, 3, 35, "Text",ExpressionUUID->"470dd864-358a-4380-acf9-ef27bbd01b0b"],
Cell[655979, 14875, 7654, 201, 46, "DisplayFormula",ExpressionUUID->"f784b65e-72ac-49f1-b4c5-504703c4a592"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663670, 15081, 164, 3, 54, "Subsection",ExpressionUUID->"50b46568-5517-416e-a275-2a9009aeeb6f"],
Cell[663837, 15086, 251, 6, 35, "Text",ExpressionUUID->"bedc2762-3813-4f97-bcee-25e6d31950aa"],
Cell[CellGroupData[{
Cell[664113, 15096, 310, 7, 32, "Item",ExpressionUUID->"386b2336-a5c4-41ed-94cf-0284104a0aa4"],
Cell[664426, 15105, 452, 11, 32, "Item",ExpressionUUID->"4a513888-a559-49cf-baf6-6d9cc73237a6"],
Cell[664881, 15118, 261, 6, 32, "Item",ExpressionUUID->"7b0123dc-9a84-4d72-bf60-55bf6d391725"],
Cell[665145, 15126, 385, 7, 32, "Item",ExpressionUUID->"eee3a747-ff6e-46b9-b199-6fad2d280a94"],
Cell[665533, 15135, 399, 8, 32, "Item",ExpressionUUID->"6c73da70-46e4-45fd-920c-bbeef846cc57"]
}, Open  ]],
Cell[665947, 15146, 214, 5, 35, "Text",ExpressionUUID->"dcb67bc7-63bb-4a8a-abd2-5d57691bd23f"],
Cell[666164, 15153, 774, 19, 51, "Input",ExpressionUUID->"a9cfc2a5-52e4-4bd9-a0c8-2f3aacc1621f"],
Cell[666941, 15174, 339, 7, 35, "Text",ExpressionUUID->"d0d8222f-aefe-45c4-8b4f-5eeb6c0152cb"],
Cell[CellGroupData[{
Cell[667305, 15185, 690, 17, 30, "Input",ExpressionUUID->"80760d0e-7b99-44b8-ad81-9a1ce00fb3b2"],
Cell[667998, 15204, 1371, 40, 34, "Output",ExpressionUUID->"57dc9d6b-c62b-44ce-ba46-0db9a17f595a"]
}, Open  ]],
Cell[669384, 15247, 657, 14, 35, "Text",ExpressionUUID->"a8592ec6-a018-4426-b6cc-7ef9f6f74174"],
Cell[670044, 15263, 380, 10, 27, "DisplayFormula",ExpressionUUID->"26bbf1ec-ae82-45d3-a978-1824eab0379a"],
Cell[670427, 15275, 473, 9, 35, "Text",ExpressionUUID->"8d875460-d172-4d6f-8aef-1e57b70493cf"],
Cell[670903, 15286, 321, 9, 27, "DisplayFormula",ExpressionUUID->"79a87acd-9920-43ab-af24-cca7dd1e32be"],
Cell[671227, 15297, 173, 3, 35, "Text",ExpressionUUID->"7604a772-dcd0-47a2-8265-65887e7fe48d"],
Cell[671403, 15302, 2194, 63, 69, "DisplayFormula",ExpressionUUID->"342641be-e6b7-43bc-92fc-95f5ec9da13b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673634, 15370, 222, 4, 54, "Subsection",ExpressionUUID->"a81033eb-857d-4e60-862a-2c80eba1a311"],
Cell[673859, 15376, 334, 7, 35, "Text",ExpressionUUID->"f9e16a42-191b-4d0c-8456-7138c0669b5b"],
Cell[674196, 15385, 5839, 153, 27, "DisplayFormula",ExpressionUUID->"54a11313-106d-49bf-b982-18e44fdbaeb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680072, 15543, 200, 3, 54, "Subsection",ExpressionUUID->"c81794eb-0416-4d38-8e12-c07f285c9f9c"],
Cell[680275, 15548, 542, 10, 35, "Text",ExpressionUUID->"d63353c4-31ce-4ce1-93b8-05f80203d429"],
Cell[680820, 15560, 1528, 40, 27, "DisplayFormula",ExpressionUUID->"6c65b0ee-787e-4436-b5b5-01e4e9947125"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682385, 15605, 176, 3, 54, "Subsection",ExpressionUUID->"ca84c898-87f7-4cbf-8ae8-30cb9067d9a8"],
Cell[682564, 15610, 585, 10, 35, "Text",ExpressionUUID->"4d474ab2-b991-495b-804e-5aa3bcb93fda"],
Cell[683152, 15622, 7580, 195, 27, "DisplayFormula",ExpressionUUID->"c18b9e51-1dd1-4d05-aedc-a76105ae001e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[690781, 15823, 166, 3, 67, "Section",ExpressionUUID->"87bbf2ac-d680-4eee-8976-de7969f75b71"],
Cell[690950, 15828, 662, 17, 35, "Text",ExpressionUUID->"24aee402-f317-4209-98e8-7f15f4c117ec"],
Cell[691615, 15847, 289, 8, 35, "Text",ExpressionUUID->"36190036-e9e8-4509-89b1-91b423375f9a"],
Cell[691907, 15857, 220, 4, 35, "Text",ExpressionUUID->"f295e90e-5910-4cf2-b8b7-08c16b56fda3"],
Cell[CellGroupData[{
Cell[692152, 15865, 1715, 43, 115, "Input",ExpressionUUID->"e2b76880-fef9-4340-af13-2338f033b595"],
Cell[693870, 15910, 4874, 109, 248, "Output",ExpressionUUID->"5d34e421-75f0-4d00-951c-dfc2f8a5da55"]
}, Open  ]],
Cell[698759, 16022, 336, 7, 35, "Text",ExpressionUUID->"7808723b-83f7-4987-b493-244eb2942903"],
Cell[CellGroupData[{
Cell[699120, 16033, 330, 10, 32, "Item",ExpressionUUID->"f24f735b-b127-4a7e-b034-6e0a6656eb21"],
Cell[699453, 16045, 322, 9, 32, "Item",ExpressionUUID->"4d0f7f6d-c24f-4145-851f-9052018adbae"],
Cell[699778, 16056, 353, 9, 32, "Item",ExpressionUUID->"34597ec5-8ad2-4e84-bf01-f9e19c2ab16c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[700180, 16071, 224, 4, 67, "Section",ExpressionUUID->"6761b43f-3cca-4ba8-8794-2168c75c00f9"],
Cell[700407, 16077, 199, 3, 35, "Text",ExpressionUUID->"5e33d5a4-eeae-4b1c-b6c2-7f6408e700cd"],
Cell[CellGroupData[{
Cell[700631, 16084, 286, 6, 32, "ItemNumbered",ExpressionUUID->"c4247863-54ed-4615-9691-3121a51000fe"],
Cell[700920, 16092, 199, 3, 32, "ItemNumbered",ExpressionUUID->"a3fd1577-d57e-4cdd-8a54-3e4f5fd02f44"],
Cell[701122, 16097, 195, 3, 32, "ItemNumbered",ExpressionUUID->"a59aaf89-963a-435a-9f76-030d126939bb"]
}, Open  ]],
Cell[701332, 16103, 299, 6, 35, "Text",ExpressionUUID->"bd50c635-bdf0-4b64-9dd3-4b3c6e1025e9"],
Cell[701634, 16111, 416, 8, 35, "Text",ExpressionUUID->"b24ac394-bd81-488f-9e1e-dcb51d634218"],
Cell[CellGroupData[{
Cell[702075, 16123, 1866, 44, 115, "Input",ExpressionUUID->"e6006424-d5d6-4066-bf56-b27a37511513"],
Cell[703944, 16169, 4903, 110, 248, "Output",ExpressionUUID->"14f5b4fa-4023-4324-bc45-557a028f378c"]
}, Open  ]],
Cell[708862, 16282, 397, 8, 35, "Text",ExpressionUUID->"d0589c19-2030-47cf-a869-6f087ad5731f"],
Cell[CellGroupData[{
Cell[709284, 16294, 443, 10, 32, "Item",ExpressionUUID->"a46f3554-65d6-4ef0-bd10-f1dea3ce4581"],
Cell[709730, 16306, 392, 9, 32, "Item",ExpressionUUID->"ad0c69ec-f4a6-4181-b7df-354ceb216425"],
Cell[710125, 16317, 396, 9, 32, "Item",ExpressionUUID->"76efa49f-f241-4e68-ae22-340a97295883"],
Cell[710524, 16328, 470, 10, 32, "Item",ExpressionUUID->"f357e507-c193-4129-bf93-c5b36ebf4684"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[711043, 16344, 390, 6, 67, "Section",ExpressionUUID->"e33c79a2-f2db-4d25-bcfb-49c86f8b410f"],
Cell[711436, 16352, 226, 5, 35, "Text",ExpressionUUID->"ff598692-1739-4159-9b03-dd1584e82fa3"],
Cell[711665, 16359, 3215, 50, 30, "Input",ExpressionUUID->"91e07f33-1868-4ff0-8ee5-39bea2045341"],
Cell[714883, 16411, 192, 3, 35, "Text",ExpressionUUID->"1a85b9bb-c48c-4e2e-8aa5-003efe6c0ffb"],
Cell[715078, 16416, 5816, 117, 514, "Input",ExpressionUUID->"96479ecb-2c7c-4145-8e51-9274bc357b2f"],
Cell[720897, 16535, 822, 24, 35, "Text",ExpressionUUID->"7109d30d-1787-4fee-8662-350b8b758da9"],
Cell[721722, 16561, 433, 10, 35, "Text",ExpressionUUID->"a4e3183f-cbbf-442f-b6b2-f578478a6448"],
Cell[CellGroupData[{
Cell[722180, 16575, 1175, 22, 52, "Input",ExpressionUUID->"e969e9ae-c3e4-403c-9903-e7869b560460"],
Cell[723358, 16599, 27000, 754, 817, "Output",ExpressionUUID->"8375cea5-6219-4838-8d1a-abff2c6ca38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750395, 17358, 1140, 20, 52, "Input",ExpressionUUID->"eb232346-b22a-4b91-811d-56b1e553f21f"],
Cell[751538, 17380, 25341, 703, 775, "Output",ExpressionUUID->"fb3b0d3b-e5fc-4fa7-aa57-0249afe91cf2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[776928, 18089, 304, 5, 67, "Section",ExpressionUUID->"873bae9d-8e66-43f7-9592-8b71fd157a47"],
Cell[777235, 18096, 423, 12, 35, "Text",ExpressionUUID->"5ebceb93-5ec5-418b-8b7b-9a21acd71a82"],
Cell[CellGroupData[{
Cell[777683, 18112, 175, 3, 54, "Subsection",ExpressionUUID->"4e8818d9-ef8e-49a3-a4a9-44d275892e9b"],
Cell[777861, 18117, 217, 5, 35, "Text",ExpressionUUID->"230a2215-aadc-4adf-805b-f7afd6d0f2ec"],
Cell[CellGroupData[{
Cell[778103, 18126, 1440, 32, 220, "Input",ExpressionUUID->"37c782f3-89b8-4af8-b147-1fcd734f4966"],
Cell[779546, 18160, 299, 6, 34, "Output",ExpressionUUID->"b01e41a8-f826-4ccd-9da2-45a747cb8494"]
}, Open  ]],
Cell[779860, 18169, 183, 3, 35, "Text",ExpressionUUID->"32d3eb02-4974-438e-a9e4-69cc1e8ee14c"],
Cell[CellGroupData[{
Cell[780068, 18176, 2558, 59, 94, "Input",ExpressionUUID->"31ca5910-b7df-4a94-808d-fa3c595d16b9"],
Cell[782629, 18237, 69565, 1377, 388, "Output",ExpressionUUID->"b8080d2e-ebf9-4b69-a7df-fbed33ec8ad8"]
}, Open  ]],
Cell[852209, 19617, 344, 8, 35, "Text",ExpressionUUID->"62a153e7-8424-49ee-9349-d12d099e7c1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[852602, 19631, 189, 3, 67, "Section",ExpressionUUID->"53aab4de-a14e-4af4-8384-c63d4e12fca4"],
Cell[852794, 19636, 645, 13, 35, "Text",ExpressionUUID->"f7bdb6e6-167d-4485-9d06-c58c3e5a2fb0"],
Cell[CellGroupData[{
Cell[853464, 19653, 26393, 548, 1459, "Input",ExpressionUUID->"32bcb6cf-9a01-451c-afdb-656d24fc9e64"],
Cell[879860, 20203, 14664, 268, 1107, "Output",ExpressionUUID->"0cea5675-d8e9-48f6-8ebc-5a0404395476"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[894573, 20477, 165, 3, 67, "Section",ExpressionUUID->"fa75a3a5-7d43-487d-b364-148946170b8a"],
Cell[894741, 20482, 584, 10, 35, "Text",ExpressionUUID->"3fa476e6-c25f-4b81-938a-61386d613ebc"],
Cell[895328, 20494, 660, 11, 58, "Text",ExpressionUUID->"5c31c1e8-b741-498d-adf2-9fcfb5f6f36a"],
Cell[895991, 20507, 498, 10, 35, "Text",ExpressionUUID->"53ee8663-147f-4a6e-928b-74e299e74656"],
Cell[896492, 20519, 779, 14, 35, "Text",ExpressionUUID->"fab3ac24-b771-4dfa-9138-90b9af05879c"],
Cell[CellGroupData[{
Cell[897296, 20537, 233, 4, 54, "Subsection",ExpressionUUID->"322a6708-59ab-4178-8b01-00901d59fc14"],
Cell[897532, 20543, 457, 8, 35, "Text",ExpressionUUID->"8130e3e2-1ae3-45c1-b163-adc041e14c05"],
Cell[897992, 20553, 334, 7, 35, "Text",ExpressionUUID->"d8bbd719-d06d-475f-889c-fbd19a7f4177"],
Cell[CellGroupData[{
Cell[898351, 20564, 391, 8, 32, "ItemNumbered",ExpressionUUID->"4150483a-6437-485e-bf7a-214aacf16011"],
Cell[898745, 20574, 460, 9, 27, "Subitem",ExpressionUUID->"3e75b252-db72-4ddf-b802-f38b3c4373ad"]
}, Open  ]],
Cell[899220, 20586, 270, 7, 27, "DisplayFormula",ExpressionUUID->"03fcbbec-3530-48ea-b79e-8c07e983a3ed"],
Cell[899493, 20595, 429, 6, 27, "Subitem",ExpressionUUID->"736555d2-4ae5-46af-af7b-831082cd63ca"],
Cell[CellGroupData[{
Cell[899947, 20605, 389, 9, 32, "ItemNumbered",ExpressionUUID->"d54313c6-bf96-4e5c-ae69-c7fa382e2d46"],
Cell[900339, 20616, 584, 13, 32, "ItemNumbered",ExpressionUUID->"2f74d354-8d9f-473d-9254-7970ac23dab8"]
}, Open  ]],
Cell[900938, 20632, 308, 5, 35, "Text",ExpressionUUID->"92e39b1d-f363-4c33-8cb7-9c0839f34633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901283, 20642, 243, 4, 54, "Subsection",ExpressionUUID->"ef0962fe-96cd-42fc-8573-979b7c102348"],
Cell[901529, 20648, 235, 6, 35, "Text",ExpressionUUID->"654c6fb6-1cb0-4253-83b2-30866c708057"],
Cell[CellGroupData[{
Cell[901789, 20658, 2244, 53, 262, "Input",ExpressionUUID->"20327822-68ea-465e-8404-9f2545053f7d"],
Cell[904036, 20713, 329, 7, 34, "Output",ExpressionUUID->"9423be21-e1ae-4b5c-9d0c-35896da1c53f"]
}, Open  ]],
Cell[904380, 20723, 251, 6, 35, "Text",ExpressionUUID->"4aaaca8e-f7f9-40c5-8b51-589a178f3b4a"],
Cell[CellGroupData[{
Cell[904656, 20733, 2568, 60, 115, "Input",ExpressionUUID->"4d587de6-93d7-4a2e-938e-e7927e3c21e7"],
Cell[907227, 20795, 118926, 2388, 395, "Output",ExpressionUUID->"ea9b3498-2172-44b2-823e-40c6f52df727"]
}, Open  ]],
Cell[1026168, 23186, 181, 3, 35, "Text",ExpressionUUID->"1c230c85-72d6-4a0e-9665-9a9e1a233853"],
Cell[CellGroupData[{
Cell[1026374, 23193, 625, 18, 52, "Input",ExpressionUUID->"92c7b259-c069-42b8-bc29-109ec7857109"],
Cell[1027002, 23213, 3890, 105, 59, "Output",ExpressionUUID->"1f00986d-7d9c-4726-93db-f8f7d318e7e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030929, 23323, 833, 19, 30, "Input",ExpressionUUID->"936f810b-7ba3-4de8-a4e7-21096e06bdff"],
Cell[1031765, 23344, 12419, 316, 258, "Output",ExpressionUUID->"93c7a04a-e073-4572-906d-44dff271a8f8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044233, 23666, 244, 4, 54, "Subsection",ExpressionUUID->"13083ba8-00ed-43ec-894d-333461b3c6e1"],
Cell[1044480, 23672, 495, 9, 35, "Text",ExpressionUUID->"a1a60b1c-1ee9-4312-8270-9e977d883a96"],
Cell[1044978, 23683, 235, 6, 35, "Text",ExpressionUUID->"2206fc0a-fd5c-4130-9c07-2f936aed7ab6"],
Cell[CellGroupData[{
Cell[1045238, 23693, 4515, 85, 262, "Input",ExpressionUUID->"2822791a-8cf6-4ca7-b5c6-af7fbc6ffe72"],
Cell[1049756, 23780, 401, 8, 34, "Output",ExpressionUUID->"0731e218-2da0-4fd6-a84c-61f44026c386"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050194, 23793, 174, 3, 45, "Subsubsection",ExpressionUUID->"cf8e4b4a-82ba-4121-94fc-9ec82cb08646"],
Cell[1050371, 23798, 267, 6, 35, "Text",ExpressionUUID->"d0bc4244-6bb1-4565-a478-5a061d84b687"],
Cell[CellGroupData[{
Cell[1050663, 23808, 2029, 50, 115, "Input",ExpressionUUID->"64ccaa2c-21e7-4cbe-8253-e5a573cbc8d0"],
Cell[1052695, 23860, 97143, 1938, 392, "Output",ExpressionUUID->"bd1e51c1-56c8-408e-8d21-dc709d13381a"]
}, Open  ]],
Cell[1149853, 25801, 181, 3, 35, "Text",ExpressionUUID->"05d126e0-c41c-4110-8e44-47fc1a646a5f"],
Cell[CellGroupData[{
Cell[1150059, 25808, 625, 18, 52, "Input",ExpressionUUID->"c4339540-57b2-40d9-adff-08fe15a7ca4e"],
Cell[1150687, 25828, 3305, 89, 59, "Output",ExpressionUUID->"f093437d-2eb3-4797-96fe-69fac2d807d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154029, 25922, 833, 19, 30, "Input",ExpressionUUID->"d913eed1-93ae-47fa-99e6-6ee69eae773a"],
Cell[1154865, 25943, 10048, 255, 252, "Output",ExpressionUUID->"9a321f1f-d7ff-4ee9-8bf6-699040f5eb1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164962, 26204, 167, 3, 45, "Subsubsection",ExpressionUUID->"00ab6c0e-318c-4493-bf1d-6a6383c55eaf"],
Cell[1165132, 26209, 228, 5, 35, "Text",ExpressionUUID->"189e0ec6-6f14-460e-a164-df9814dfaa0e"],
Cell[CellGroupData[{
Cell[1165385, 26218, 2075, 51, 115, "Input",ExpressionUUID->"773424bf-b27b-4847-8bd7-ace1a49c764d"],
Cell[1167463, 26271, 90003, 1822, 384, "Output",ExpressionUUID->"36a2d60a-3c20-4220-a216-ad77f20bc81a"]
}, Open  ]],
Cell[1257481, 28096, 226, 3, 35, "Text",ExpressionUUID->"15193a5e-99fa-4000-ad0e-3bbec7a86519"],
Cell[CellGroupData[{
Cell[1257732, 28103, 626, 18, 52, "Input",ExpressionUUID->"345560ae-c320-46dd-bd0b-ddfd2a8f5fee"],
Cell[1258361, 28123, 3341, 90, 61, "Output",ExpressionUUID->"63b14462-ec71-49e7-9636-d6313064a990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1261739, 28218, 1209, 28, 30, "Input",ExpressionUUID->"221c75fe-2fe5-4f44-8974-d77d8ebe39cc"],
Cell[1262951, 28248, 10616, 269, 260, "Output",ExpressionUUID->"832d912d-f7d7-4b68-8bb9-3594d7e639b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273628, 28524, 288, 4, 54, "Subsection",ExpressionUUID->"9c479f68-8a47-4689-b1e8-08a0c32675d1"],
Cell[1273919, 28530, 446, 8, 35, "Text",ExpressionUUID->"0a3bfcbd-49d2-44c2-b9e8-17ede9b1cb22"],
Cell[CellGroupData[{
Cell[1274390, 28542, 2758, 57, 220, "Input",ExpressionUUID->"358a25c5-c2b8-473e-a23e-911a3d4ccb86"],
Cell[1277151, 28601, 597, 11, 34, "Output",ExpressionUUID->"2949d791-6b7e-46cd-b7bc-ee02b3ebecf8"]
}, Open  ]],
Cell[1277763, 28615, 314, 7, 35, "Text",ExpressionUUID->"d062c2dc-74b4-4382-8c28-e76b124fbba8"],
Cell[1278080, 28624, 232, 4, 35, "Text",ExpressionUUID->"b0173610-efa7-461a-a412-80a2b24d29d7"],
Cell[CellGroupData[{
Cell[1278337, 28632, 2944, 63, 115, "Input",ExpressionUUID->"facf79dd-1a42-48cf-81d0-d2c0b4425eca"],
Cell[1281284, 28697, 82578, 1635, 395, "Output",ExpressionUUID->"f06445a1-faa8-409d-80ef-50ba6d2dc67c"]
}, Open  ]],
Cell[1363877, 30335, 181, 3, 35, "Text",ExpressionUUID->"48a23ff0-a082-4888-aa27-64124db54e0a"],
Cell[CellGroupData[{
Cell[1364083, 30342, 625, 18, 52, "Input",ExpressionUUID->"4173ad93-3cb5-4f7e-9049-5666557adde0"],
Cell[1364711, 30362, 3187, 83, 59, "Output",ExpressionUUID->"7ae06329-b2c1-46de-bb71-12c99aa3198b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367935, 30450, 1111, 27, 30, "Input",ExpressionUUID->"432bfbeb-f95c-48ae-b187-21742d946bc6"],
Cell[1369049, 30479, 9520, 240, 257, "Output",ExpressionUUID->"e4db5f80-ed01-4516-9115-f6f010eb04dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378618, 30725, 250, 4, 54, "Subsection",ExpressionUUID->"55ae5789-5078-4570-9233-811ddd958e21"],
Cell[1378871, 30731, 313, 7, 35, "Text",ExpressionUUID->"888f5df2-2c09-412f-b33e-4e0f024f7c66"],
Cell[CellGroupData[{
Cell[1379209, 30742, 3208, 70, 262, "Input",ExpressionUUID->"a97919b9-8a63-46fa-9db1-bdee219416ac"],
Cell[1382420, 30814, 546, 10, 34, "Output",ExpressionUUID->"d71e8bb2-5e37-46fe-adb8-adb16246c9a4"]
}, Open  ]],
Cell[1382981, 30827, 312, 7, 35, "Text",ExpressionUUID->"e9518c55-4887-4fe9-829a-1ce6bec7db13"],
Cell[CellGroupData[{
Cell[1383318, 30838, 2593, 60, 115, "Input",ExpressionUUID->"65efd27d-3ea3-42aa-8827-8c4ec8e44329"],
Cell[1385914, 30900, 125586, 2497, 392, "Output",ExpressionUUID->"7ceaac81-9ea9-4b3d-aa29-08e06643c5a9"]
}, Open  ]],
Cell[1511515, 33400, 181, 3, 35, "Text",ExpressionUUID->"374610a1-8035-4060-b7ea-6dbd236a95e1"],
Cell[CellGroupData[{
Cell[1511721, 33407, 625, 18, 52, "Input",ExpressionUUID->"c6b12fc6-5964-4d36-9944-3930541ff6f9"],
Cell[1512349, 33427, 4600, 126, 59, "Output",ExpressionUUID->"4e2b8f61-7558-45ce-8679-12f64ca0c5a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516986, 33558, 1284, 29, 30, "Input",ExpressionUUID->"6923a789-7fa1-4fd7-992b-2c7a6935dd20"],
Cell[1518273, 33589, 13284, 336, 273, "Output",ExpressionUUID->"ce4a57e6-b07c-486d-9623-faf0d9b1d655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531594, 33930, 2648, 61, 115, "Input",ExpressionUUID->"6d57b01c-38ed-44df-b933-c75907510941"],
Cell[1534245, 33993, 122183, 2447, 396, "Output",ExpressionUUID->"0ec5551d-0aec-4cee-83eb-a54b0ecdce4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1656465, 36445, 299, 6, 30, "Input",ExpressionUUID->"8d59539d-c753-46f9-91e6-cf140d4ed7d2"],
Cell[1656767, 36453, 4507, 125, 59, "Output",ExpressionUUID->"8684be07-4c06-4762-859f-1fcf24ed010b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661311, 36583, 850, 21, 30, "Input",ExpressionUUID->"067171f7-8b83-43ca-bd46-e26cd111b872"],
Cell[1662164, 36606, 13191, 334, 281, "Output",ExpressionUUID->"4b08d0ec-3805-4eb9-a7d5-14d649d404c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1675416, 36947, 155, 3, 67, "Section",ExpressionUUID->"f256e4e5-faed-46cc-986e-34a17a8705dd"],
Cell[CellGroupData[{
Cell[1675596, 36954, 158, 3, 54, "Subsection",ExpressionUUID->"81113e5d-f92d-4597-851d-24002e4383f5"],
Cell[1675757, 36959, 514, 14, 35, "Text",ExpressionUUID->"d3fe549f-62e0-4d22-bf25-b776df2c6311"],
Cell[1676274, 36975, 417, 11, 35, "Text",ExpressionUUID->"eb1ec0a5-146d-46ad-ab28-c2d15c021575"],
Cell[1676694, 36988, 628, 15, 35, "Text",ExpressionUUID->"48002b9c-2643-48af-a70e-9cb267e88d4d"],
Cell[1677325, 37005, 736, 16, 35, "Text",ExpressionUUID->"3f222569-f6d3-45e7-8b54-7e7be4c5b33c"],
Cell[1678064, 37023, 936, 23, 35, "Text",ExpressionUUID->"f7f7b9bf-c48f-45b9-8bc6-f61997f78dfa"],
Cell[1679003, 37048, 979, 24, 35, "Text",ExpressionUUID->"4401a97c-9ad9-4eb4-8f74-23d7acaafd76"],
Cell[1679985, 37074, 973, 23, 35, "Text",ExpressionUUID->"bf50a26f-30b7-4aa2-8395-3c12b1e296be"],
Cell[1680961, 37099, 861, 22, 35, "Text",ExpressionUUID->"5bb91dd7-eb35-441d-8aaf-1875b8dda550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1681859, 37126, 225, 4, 54, "Subsection",ExpressionUUID->"f8334a2c-1b13-4969-8ab6-7eef411907cf"],
Cell[1682087, 37132, 819, 21, 35, "Text",ExpressionUUID->"a48af076-fbbb-4a67-8f12-82cdcc2820f5"],
Cell[1682909, 37155, 951, 23, 35, "Text",ExpressionUUID->"6f462c3d-adc3-4392-8700-9583c80f68cc"],
Cell[1683863, 37180, 860, 20, 35, "Text",ExpressionUUID->"90b2dc49-6210-4d34-bdfa-59b8094c981c"],
Cell[1684726, 37202, 1030, 23, 35, "Text",ExpressionUUID->"bfd66add-0b05-4e86-bd12-3f40f4149130"],
Cell[1685759, 37227, 1171, 25, 35, "Text",ExpressionUUID->"60ebdf74-7aee-43ad-836a-1e02c79dd23e"],
Cell[1686933, 37254, 1112, 26, 35, "Text",ExpressionUUID->"a654c9b4-349b-4b4a-9d2c-fee2faa80cd5"],
Cell[1688048, 37282, 1127, 26, 35, "Text",ExpressionUUID->"35f17ec1-8a3c-4bf0-aa02-045f3b4b36fb"],
Cell[1689178, 37310, 1008, 24, 35, "Text",ExpressionUUID->"9e6c5e59-2128-468e-8487-0190301d5f27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690223, 37339, 172, 3, 53, "Subsection",ExpressionUUID->"ff6247a6-4799-4eb7-898c-3190af5da113"],
Cell[1690398, 37344, 832, 21, 35, "Text",ExpressionUUID->"e7e7c6e4-9190-405b-89c2-4763424ac919"],
Cell[1691233, 37367, 1000, 23, 35, "Text",ExpressionUUID->"f30bfe25-d931-4d07-ac1c-016f327ec36e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

