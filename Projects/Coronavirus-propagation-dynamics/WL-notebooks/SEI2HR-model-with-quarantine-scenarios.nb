(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    804772,      16781]
NotebookOptionsPosition[    787175,      16499]
NotebookOutlinePosition[    787602,      16516]
CellTagsIndexPosition[    787559,      16513]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SEI2HR model with quarantine scenarios", "Title",
 CellChangeTimes->{{3.793231637005781*^9, 3.793231649850358*^9}, {
  3.793313889637662*^9, 3.793313890469223*^9}, {3.793444944223502*^9, 
  3.793444944496438*^9}, {3.795024630992848*^9, 3.7950246399596367`*^9}, {
  3.795024680123042*^9, 3.795024693915018*^9}, {3.795024842384151*^9, 
  3.795024845498603*^9}, {3.795024917006781*^9, 
  3.795024921483469*^9}},ExpressionUUID->"2bd8657f-501a-44a7-94dc-\
8941a5a92819"],

Cell["Version 0.4", "Subtitle",
 CellChangeTimes->{{3.7950123770513983`*^9, 
  3.795012381169182*^9}},ExpressionUUID->"47676929-840e-41ae-a627-\
b2f184faf4f1"],

Cell[TextData[{
 "Anton Antonov\n",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "\n",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "\nMarch, April 2020"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvflC9cSe4teOqfWaU0G0nfrkm8uBNP/Kp3dB9Gz5
/YKzK187Gi1wEAbRwv/ercqoe+2o0rBsNYhuMr+6A0QvaVy5G0TPUmqf2zn3
teO6ib3zQLS3gvo6ED2t0wNM+z5fuK8XSD/48RBMvz+5/3M/kP6Z8QJMb+9Z
0x6y77Wj1xXHDhBtc6teZO+J144sbn9EQfSm7S9Xh5167Wjhp7EGRAvPZf0Y
f/G1o9DmvWD63nrOC9GXXzvGLCgA0z6dj+8X3X7t2GzE8QBET3PWTv5277Wj
xAqGFBD91sLRSvDBa8dTW2+A6SKVqZfalN44PhPWvQyiz7ManjkPpBeWLgbT
Z3a58h60eOO4YMdGMK2/yUZByvKNo5FCvhqIDq3cpnvR4Y3jOcmLYPryD/bk
fLc3jovcpFJANAByIMZs
  
  "],ExpressionUUID->"f6053c3c-480e-490f-9a22-3e19ead9ce24"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.793463899655674*^9, 
  3.7934639020296097`*^9}},ExpressionUUID->"04c76682-7ae6-48c1-8dc3-\
8ee07083bf48"],

Cell["\<\
The model presented in this notebook -- SEI2HR --  deals with the left-most \
and middle rectangles in this diagram:\
\>", "Text",
 CellChangeTimes->{{3.793463933373004*^9, 3.7934639875984297`*^9}, {
  3.795024707955104*^9, 
  3.795024715177804*^9}},ExpressionUUID->"e21dada7-c755-4b2f-97a7-\
be5e6daec8c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://github.com/antononcube/SystemModeling/raw/master/Projects/\
Coronavirus-propagation-dynamics/Diagrams/Coronavirus-propagation-simple-\
dynamics.jpeg\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.793897740252342*^9, 3.7938977449565268`*^9}, 
   3.7938977791148243`*^9},
 CellLabel->
  "In[469]:=",ExpressionUUID->"2c1f215d-af39-4b73-a6f0-42d4b4cc43a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvddzG2eX/+nZ3dray/0TZi5mpkaq2ipezNTe7uVKF1L9tnZHAEFSgRRJ
W8FZkmU5va8tB9mybL22CYCiIpWTlZMVLFmZlAgCIAmQAJhzRuiIfUL3gwYD
KAYJEvX9TE+72Ww0Dhp9+uX56oR/Wbn+f6z+n9544433/jey+h8rNvxf7767
YtP/87+TH/7fde+VFq8rKvy/171fVFz07v+58n8mO9/4X9544//4X994g24n
AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGaBx+NZsGDBf//3f4/f/o//+A/sx37sx37sx/7XZ39NTY3Y
BgAAAAAAAMwt4XCY/B3+L//yL2+88cZ//ud/kj0PHjz4p3/6p//6r//i29iP
/diP/diP/a/V/vv37/Ntn89XXV2dSCSSAAAAAAAAgDmivr6e/L39z//8z16v
NxQKkT3xeJxsNzU1kW3y57fYxn7sx37sx37sf332NzY2/vu//zv5n0jyP5RJ
AAAAAAAAwKzRdZ2sFUUhf28Hg0H+o9g/2fHYj/3Yj/3Yj/2vyf4lS5bk5ORE
IpEJDwMAAAAAAADMjPF/ivM91jX2Yz/2Yz/2Y//rsx8AAAAAAADwnAiFQgsW
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
3EuuyfYrzT9cjvAPThZyfX683Er2kP3sV6Efr7STH8mRFX92XPX1dQ1LcTWp
jqvVA2BK0krqTDGE3EuKqj8MD2271LKqgg2bY3MteU3rxAurnmNd1/z5bu/W
883xhLx+7cbpKlHEI77//h+tfTFaneeauJPbbJUot+dsTe/Va9d5Z3Ky5Dsm
fp5YlhLa1Sp3Fdlubek6cK+Tzvc0krXY9EBnrTCSy9183p+QqclhpXvrf7rW
UdsWkxVLKpQ14UzMEIQbPzdEn6hsGwIAAAAAAMB8gIcwsix7vd5gMJhtc8bH
Uposq/dCAx8eqWexWy2bW2dOZp8850HMjLM5az4709ze1b88j2ccTZVuROWg
ErPxS2n+ijf7h6ObjgfJO/LaH9p85hlazTz74mnt37nTTd7RlsuVqJJ8x6SS
FMu1KGQW0iSufXsPPQr0E3vI52Vz/Tzk8zpcT835Xx7LBlk/ZcFvjaOsjv9q
w9Hg/aYRSTaD2fTqqjEbAFgwxwGwTto6GzH5MDzy1v763LJa7p425izLyjx8
QORkyzK25mP1Tj/quHDh+oRZi8+iR9UFwt/RtCh6t9vmtIrW5vIXVtRH47GS
kveJMbxreobnCc+xpNK3nfejK9y6dXtT+5C9nFycWsMl6SXyM2XbfI7RYZc+
8ZzJd9PZl8tY93Vy/AdHgoGuGPdWTbN4aNp/wHNh6dKlOTk5kUgk24YAAAAA
AAAwH+DhjD7dri7PF3P+u57sj2qbTzYx9cnPGwjzVAcSppF1HhOFJsu1sJlz
r276evYfOJKbn5KYrNGiyF5wGGV6q8xjCvnG8ePnzj7pTPWJskaOs17erKwb
GI4XFJRajckQd+ey/Aq2UZzvKF6+cl0sLhXtrqPhrdOfxyuSnHWGkSTULTN7
5ri8ec4A2elw1/MUFPormrVS89Gp8EBM19KL816yWwK8pPAMRkXVf73VRhOc
iKu6+ZQ6OnuO6rcsJ2qyheu6XHIhPzZ3DX388d+tCs+YTuAZlB+yVOw+cNPX
lUcfDp658lC+kKfNjiuRqqcNufmpWZaT5VimHDmXTvojH8fmKCLbwyPxNQca
+AOK50RxfVtYy65JqhB4mdPHnnI+a37X7YYhduHNojxkNAIAAAAAAABeTUKh
0IIFCxYvXpxtQ1IteROS1j0kFe+rJ4GYrczHS1d4Sg+LcGlVi4MVyk24iOQl
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
K6+8snTp0pYO9cEHHwwePJgdthON9hCDJNwxFdrk9u3brGRUVBRrE5+4Uh8i
LCwsODi4uLhYaUMIgiAIgiAIwk9oc2LLg/Lll1/+zZGXX34ZVNLMmTNB/7bb
yAeNMuoaLcYHRE2ZMgUus5Viradz6bjBzmdBVevOKVDVsow6oPTj4+NbOkWb
1lKaLG+mpqYmJCTkn//85969e7Ozsy9dupSWlvbGG2/07t1bo9HwJTuSgMid
AetcpqXM/8nJyc8//3x9fT12rdmzZyclJeFXMk+U7AjuDwEvwX3X2bp166BN
YOTiR75NWsJlOjsarQRBEARBEARBdCUoQEB+BgUFgTj1yNHQEzV9+vQNGzas
lwAVOWvWLJC6r776alZWlnOVNo/pTsnWqz/QSdtXvhVPVCtHdl+wt6MAr2pb
rw6qFu4aKn2LTdV2/O6QwvU24I6kpqbCvb548SK/Hz7CzhUrVris0uYejxjW
yrfodYH+6fwVPFU+/vjjdgyBjvfeB/Uku3NAmeusFdiYbffpCDdRq9WZmZl6
vV5pQwiCIAiCIAjCf/BIniimetATlZ6eLvv26tWrsD8hIcHN47Tj2zYrdpIP
CmmHJ6qzYaq2zctHVcviK3hIz/oZs2fPfv7554uKividcJdXrFixe/du/Dh/
/vw1a9bwBebNm7d+/XrcBkmekpISERHRp0+fuLg4GPJ8yby8vPHjx8NXffv2
nTNnDj+DrK6uLikpKTY2Njo6eunSpZWVlbxVBw4cuHLlyvTp08PDw0ePHn3t
2jX8avny5e+++y70z1GjRuG5li1bBgbgt6+88gp8PHXq1LBhw956663hw4d/
++237LAyT1R9ff2SJUuYAfyMP4tjV5fZM2bMGGYPAg344YcfhoaGhoWFffTR
R+Xl5bK68MTDumA2XxfadvXq1bK2TU1NxbPDgOVjojIyMsDOfv36wc5PPvmE
efLhkmVtArcvOTmZN2/ixIkuzUtMTNyyZUtZWdnMmTPfeecd5ztIyGB5opQ2
hCAIgiAIgiD8AdQ+BoNBpVIVFhZ65IAgav7617+mp6fLPBgmkwn0LwhMtgdU
IcrSqKgoUFt37tzhy4OeHTdu3N///nfQs6DsQM+yr8BU0ID/+Mc/ZCJr5cqV
IL6am5vZpel0OiiZlpaGBZgQhjN+/PHH/BlB2YEYBHW2ePFiqNJmeSAnJwek
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
mj39K82p63VV9aI/Suq9JjMX9VdYqeWDpqTebdDpBfXtpjWny+LS8iOl/g/v
cMyoVHXUutyYlNyPj95SV9qDqewjj4ZGF8L75JOSkgICAnwiTxQzm1z6HmT6
9OmgcOfNm6e0Id4L63h379791a9+Bc01YsQIpY3yYfj2/PnPf866Hw3tViBP
FEEQBKEssr/RYWFh/p4nyjewOqCkdAdwi27V6QesV4P6ZkocNPgnJypIaxNe
RYPRfCC7JipVjb0U3qNS8qOT88TIJbHTWjvwlN1FB3Nqb9/TOyQ5E8xF1Vqz
NSWUCaf4ZZVqlx8r/2CjWjxIqhqjoSJTcnAIjN6Rf0JV29QkSOnfxChBgR8S
8nX6iC4iLS2tR48ePpEnCtFoNIGBgaGhoUob4ifMnDkTfkjMmTNHaUO8Gvbr
6+LFi48++ii02J49e8ht0hGg9UJCQqAlX3jhBfjtxHYqa5XXQp4owk3UanVG
RoZOp2u7KEEQxAPC/1t2N8gTZcW25nvHj9NZP3LgwJeL6kduz09NLx++JV9U
8eJEJ4wzUcVuVN2tN9iKdpIJBPFgNOlNR9U1H+68gV6jqJTrkSk50F0jUnMi
pIg+2BYdqsl5sDHmsxuffXv7ZpVO9BhJXiOt3tqV67Wmy8UNi78uHpimikD/
VYqYEkoKrBKjoQamqT89dVtT3ex4foc5fTQuuh4fFX2UJ8qzzJ49G9pz1qxZ
Ptofup41a9ZAi/34xz+mKaIPCt/HEhISoBmfeOKJ0tJSBU3yFcgTRbgJyxNF
j3SCIAgPgpHbJhO8HgxxGTvHbaPRyP4NziMYTeaxOwrEaU2gxCVdHy1Nd8JJ
T7suV3EZvjx4WoLoGGZTRb1h77Wa0dsLbN01xzZTL88aKLUuO1IKlIJX3Db1
pnMVTeyf2sxiz5+xrzAmNZsPoxIPJb0iUlSTPy+6WFTXrDM16exL9Vk96pSo
XGngRvhcnii9Xq9SqQoKCvidRLuZN28eyJbp06crbYhvgL9D3n77bWi04ODg
5ubmtusQTly+fBlDy/bt26e0Lb4BeaIINwkLC4NHU3FxsdKGEAThn7Af3iAf
0tPTq6urlbWnK7lx/ea8uYlzH/w1Z85i2UZCwvK7d+96yrAvr1aJwSRSGAlm
Zo6RpjiBro/fmt+kl7xeeN9INhFeAtcVS+7qt1+qgL4aZe23olcqIjmbfYSO
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
odNabzkaVHN1Sw9ynPEwXiknKqpb+81cdQhfVFbUxsUt5vMjU9Z+ZTKZPDHS
ZLZE7ygOZbnqWA5653lartzenbB/Vq1a9QtHkpOT3WxdsmQJc6t8+umnQUFB
7K1Lly5l9l25cmW/NbN3d3/coWxFNg9iX2wbeyv6vm72Xb169U0UY8eOveWW
W8aNG/fxxx8zWz///PO77777nnvu+S3F7373O1Se2bp58+YHH3zw4Ycf/vOf
//zII4/85S9/YXdr2rp16+OPP/6///u/TzzxxJNPPvn3v/99y5YtzNadO3e+
8MILL7744ssvv/zKK6+89tprGRkZeBO6UshNQO8Pb7755ttvv/3OO++8++67
e/bsYfY9fPjwDIpZs2aFh4dHRERER0dHRUXFxMTMnTs3NjY2Pj7+jTfeQN90
1KhR27Zt88jRsDjk9mUrW8NE8tD+IksDzolKJbumhqfLa/pvcc54NxIlSs2Q
ZOwcSDCKKC1Rz09KLiyQD9RyP2Lt2rXotvELnSirx/lswIC499570VPUL6KR
QF8olUo8BuLGjRt7b1Wr1b/61a/QVWb/JAH+AnrWTZkyBV3cI0eOcG0LAAAA
AJBMnTr1F36lE0UqBlMLsqJioRA5mBEHvhuZX1V7TOmapn1hZhlyn2dsVe64
VK3rMdv7A7rFaDSvXLGGz49MSlpeV8dSicdd+Cy9ol8W6wVVO+OPs1NNFLU6
djHbnv05Vfn5+WlpaakU//3vfzdv3nzp0iVm6+XLl9etW5dCsWbNms8+++yn
n35itp47d+7DDz9cvnz5+++/v3Tp0iVLljAZU4hTp07FU8TGxs6bN2/u3Lns
m+rQoUMzZ86cMWNGWFiYQCDg8/mZmZmMD7h///633nrrzTffDAkJ+RfFtm3b
mH137dr10ksvvfjiiy+88MJzzz337LPPMlpGiPT09P+hCKZ49NFHv/rqK2Yr
+oIPP/zwgxR//OMf//CHP6Cvxmz94osv7rnnnrvvvvuuu+66g2LFihW2M2qx
rF69esyYMTfccMONN96I5qNGjUJfnNmXibwx4TX3cTnPo3Zoq1PEz+VxPazZ
/VZ0cn7RB7fcckt9fX2vO8gZwvHW6+i2XihrXXFIhaX+mZ6kZEYT1b0Ox5TQ
glBcdLGsA+215mgFlfInp25vKVpAc9u+IoVARIZeIyTyzacrZLVdJpx+NZDg
gXcjUWKRRCiMlmTsYQej3JiDnlelpaUREfEJCYsL8mXsXVx0qPWfoIhTAEci
kUyaNMkvdKKw5cinnjBhwuTJk7k2x+9h7oTf/e536LlRXV3NrT3AENmzZ88v
qKynq1fJhyRzfY1G45NPPok2vf3225waCAwSiEQBniOXy/Py8gwGA9eGAAAQ
sPitTpSNs2cuIJcQeYs5l/P6Lz1kSKFyWnuKsFjNZsvhguZwSTFyq6N3KLLk
zdT5pMWpWF6ak6qPZNtuZHN4eFx5WYU9eOUikGWraum3KnowMikTj1qYWerF
P+X3Kxg1CD2oQZs3UElzrlIazGYz+o3W6/XdFJ2dnfgnGysv9fT01NfXNzQ0
1NbW1lC0t7czBre0tJSWlpaUlBQXF8sp2DEftMu1a9dyKC5fvnzx4kX2QLoa
jeb06dM//PBDVlYWmp84cQLVw2xFywcOHPjuu+/279+/b9++zMzMgoICZita
lkgkGRkZ6enpYoqNGzfigOSmTZvQ8pdffvnWW2+hN9Wbb775+PHjnpwH6uzb
+rFa8G1sIbuyXirvXH1cG5Zhj6DaxKNEitA0m4rUJZUOFV59VG0XQCO3khLl
aB5KjREZvUue/nNdaX233uwydtM/3o1EpYoyBIIIVMO2jJ3trR229X13u0Pr
S0vUERGxaK/E+GRpocKpwj4/AsMJ6ER5nfvvvx+dUhj1OwBISEhAl/JPf/pT
a2sr82SbP38+WomuMvr94tY8YHBAJArwHEYnimtDAAAINAKkY4LFevJUNnYJ
i2QKhy3D9aVs7jaB85eoD+3d5v+erQ4VSwUiWfK3KllVDx2O6bOWA98dQR5u
WNic0tIyltHsQ1AdniiuqTtdauYcyBuwFof7SJGb8FFfoSEPdZNcCh8NTmPc
K1eW/U3df99hupGGqK9udWu8y/WeB/ckEskNN9wwduzYU6dOeXpR7AuE09ou
oyWvovOLrMrZGeSwd7xUstfedHEhE1O9VE6mFX12TIPDUJQSmj2NKn5vyZ6c
urKGTsKmx88ag4C7nChRagbexOdHSrbtbm/rojcTLrMi0U5UJCqe3Cs0MiFu
SaFUyY5V497EfvwopvA7nSij0SiTyVQqFdfmBA4PPPAA8lxAVyQAMBgM//M/
/4Ou5tSpU/HfVo4fPx4UFHTjjTdeuHCBa+uAwQORKMBDpk2bFhwcDH9ZAABg
+MAv5AUFBdnZ2Q0NDf2W9xEYl+3nc5ew+ve1K/kjcVz7IpX7wRJnKm/UfXio
LJQcZV765Q+V9R0Gx5woM6sa684dmcjVjYpKLCtTs6t0OBDV285kti7KLLdJ
7ti6KUmRhz4zXdHaabY5sOxdB+LLeh5v8XxMtwEcfiA7uo8d9TuEXF8hOJdV
DTQM5cY2z4N7FhpPjuiJeX0F/Vxay3xcsmQJekcdO3bsDz/8MJj4GDkj7ENP
0ssGwiqv1W8+UxW1k7yHyQS/1CKc+5SjInOKPj2qRh9xMIocIy+taMG+8qP5
jVUtemwYrpkdAeYwEpUqygilCgiFkYLQyO0ZuzvbdfSZZJVlfaB658WGCskK
wwTRifHvSwuV7LCVn0ah2DdSSkoKclT9QieKMdvfo3++xoMPPogeIBDcCwBQ
01Cr1XfccQe6oKtWraqtrb377rvRMrtvO+B3QE4UAAAAwDlOr98hISH+pRNl
pXsAISeR0omKOnDw6AgketmqZadkWGwhI8yF0rb4PSrka0fvUJhMztkRFnrA
plWr1pM6UYlLamsaHdI87EVtwaiDeY1CsXw65aGTznsamVLCFyu3ncMJUbZD
eKhXbmHR/9d0u4ZdoUfHdlWbJzGfkc+V6r2G+ZoD+r7u05a8YlhfOWkDur6M
nai2sLCwcePG/fjjjwMzj/0Pu0XQY+rhQ5gJq7KuK/3n+phdxaFiKT9NLkgt
vKghYzifHdOg+5xSjpIn7y8+JW9paDE41Mnq9zcIvJ4ThdovlRMVzRfG8MOi
JRm76Mwo9hVh8hutpaVlERHxocIIQWg0rjYh4f2CQpuAOXmWLP4ajGKQSCQT
J070C50oDHK0x48fj/wyrg0JHB566CH0LsEMRwj4KcxvxOHDh0eNGjV69Gic
H/Xqq69C8NavgUgU4DlyuTw3N1evH/AYMQAAAP3CdpP9VieKqK6sio9djNy6
jz5Y09riMJTVcLwv2VI+2N6xw2ZSR73bSOzPbThaVO+o+2T3T1Wlmjlz5iOb
P12VYjTSuVKOxlJricrmnpkZZCoUT2wbVoxH9cubsVXerDM67zSotCjbHgMJ
4g3uxHrSm4wdmHKfBOXjONnfVxn3BdjFvE5fGVwImUw28OOyG4KtgdCnwPmG
RJvLGrv35NTF71VO3yq/qGq3UIrlM9Jknxwuv1DW2qgj2N3c7I3OYiYsLir0
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
4YcfuLUHGChqtfq2225D127z5s3MSk9eDnEa1SOPPNLe3j6cBgJeAyJRgIdM
mzYtODhYq9VybQgwLLgPfcCyry0HKvg7FhQUZGdnNzQ0cG2O70A6tpfL26nB
7EgPGk3T+554ZKyJmpAHzSyLFXSQqkiwpYi/lRTA4VEueV8xKH6anEcnjeA5
WoOmvo77bqqUPHoamTFyqawDYlDAMIP7u5nZkR+dwZwlb/3ge030DoUt8Ym8
w6VCViSKuZPJiYroopUJe5R7LzdVNfXkqDvytZ3rjldFbFNQTcA256VS8zTy
Jkd1ThcXCqkwFNoqFJMZU/zUork7lPVtRiapCf+r1VTPm7eAzw8PFcSE8SP4
/OgwQUyoYA6eePxotJ7SYprDihSRGUphwkhUQBiGdpzDF8aECqPIBR4Zv2IH
mrDcE85oouSnyMJCof0QzpPQtgtbpYrM0eq7PKqQtF9IxqZWrEjx2R8j9ptM
SkpKUFCQX+hEMWb77In1U15//XXk5B4/fpxrQwBPQU3AbDY/+eSTqPG++eab
A923q6vr0UcfRRd9+vTpw2Qh4F0gEgUAAJveOVEw9815IOH0jUJCQkAnqjc5
6rZQMhNDTk9K1rKLSUAmLynCROQy5XTjJCgpmQ2SJuVTHZQoAagiNwlROIo1
ndKJ4pEuPBnOcnNQ7JWHpimvlHXaLmqg3a2Az2HB/1tsy2cULbMzcASpCIeh
bHJPrIQofmoRlcgnjdquXHNSe7a0ta6d7JqnMxCKWh2qx0BYS+t1hwsaPzyg
nplBZfqlSfHNTyunKbF+Gs6tQguREuWlsg5sDL7r8ZNNq62cN28xzj6KS3g/
IWFxQkJyUnxyQvyihPiFifHJiQnvJcaj9clz4xYJ+GQQiZqiybHt+FFz5y5K
TFiMysfHL0GF4xLJKTFxaXzSUjRHExOGYjKjImbHJcSRhV1PCe9Fhieikkyn
PxyMYpdJSlhqX4gjDYidu4RMtRLGrFiRwtmVHggSiWTixIl+oROFUavV48eP
nzJlCteGBA5vvPEGepc4duwY14YAA2DBggXoqt1///0tLS1uivX1JlxaWorz
qb744ovhMRDwJhCJAjxELpfn5ubq9XquDQGGhUANcQQqgXel2Hcg6ES55HJ5
J043YuJC7vWdsIPMY5YpZ9zehy6tmCxM5YT010HPVgnpetM1uDnudKpv4EVV
O8SggJGAvM0I9ieT1ZqlbInYppzOdFPFYdVUOY5BkYpnGbIPvlcdlbZqGwwm
s/1O7TZYTitacEVYabxTbymq7pZcaFiYWYpvfn6aTcCfEY9C1YalyQ4XNJsJ
UuXJ/nym4mNkJCpmoUAQtWJFSl1NfXV1bU1VfWVVDZqqqmvRVFFJzisraiu1
VfGxiynN8HA8Ft6cOfPLy8srq+rIAuQuddWVNaiGqsq6qqoatFxX0/j5V/9l
FMsFoWRk6czZi7U1jfgQvSdU1aXL12w98ui0qNWrv6ipraePYi9JL9Sr1eqY
2PeE/CgqJ8qnI8x++vsIOlFeB5xcv+PkyZPoko0ePfrChQvMSvct2mkr+rhv
3z5UyY033piTkzNchgJeAhop4CGMTpSf/sQDHrJz587169djaQW0vG7dOlj2
zWUsyQhcJ6AH7+Xydpx6weR1uI8g4ZQnJ2VmJtMJ++OhbiNLtsI23XJ7OKvf
mBWaLpd3Unb7tMcK+Dt9vZCYLcRpeUe4ROEYsEXNp2jB3pLtF+qKqrt1epM9
k4qOhPeYrdmK9l6VEmhq6DTnqDu+yqqYt7MY50RRHfTkuBGJz1TrDKRWOlUV
HRmzmHEkau7chaGCOes3bKRrY76AQxuprWtYsGA5JfcUjSXNE+KWVFRUORVz
IjV1G61AHoHFnS5fuGbfpfdkteZeKxQKIkIpBSockvp6YyrWS+89WahxCevr
mpOSkoXCmE8+WUt+R99u18hCv9OJMhgMMpmstLSUvRIYCjAOr39RU1Nzzz33
oEu2Zs0aD3fpHYbCC/Pnz0f1PPDAA83NzV62EvAqEIkCPCQkJCQ4OFij0XBt
CDAsKJXKdevWoUfBE088gZ4J+O8IsOyby3/729+CgoJeeumlYb4pRhrmFQK5
D9nZ2Y2Njdza40NQJ4aMRNEK5LYED88kx53DSmm4PxEVg0rrvxJ2LIsJNPVZ
P6VGFYp1ogBgWLGwFnotm82W04rmiAxbv7x5O0u//LEKNaLGDjzqHC3m1Mvd
P6tsY63HUlT2wAthsWqbDT8qWlYe1URl2ITQVxxRN3YYbZGcXtZVVFTNm/de
qDDKFolyCCsRTEl0lDoqEkV3tQvnCSLjY5MrK6vdn4bU1G30sHcRYYIYIX8O
OQyfmzCGxZqbmx8mxLvMwSPubfxqi5vyiNra+sTEpagklRNl7rOwz7B27Vr0
o+kXOlFWR4caYlBDhDmB06ZNQ/fAgQMHuLUH6Bd0yQiCePHFF9H1euWVV4be
BEwm09///ndU25QpU6BB+TIQLgYAAJGZmYkeBf/5z3++/PLLBQsWVFRUoJVf
fPEFLPvm8rp164b5juCSgPlhYhRonbwMtVpdV1fnVEyj0fT953sy16Kkrivl
hBZN645XrDuuXXtciz8y07qTFXiOF3ovrz2uYT4y5dkTKoCm3gXwAntTH5N6
zUlkHlleUat3GkEMAEYYM2Etru9Gt2WWvFXbbDBaHJOR6LmTn3JO1WZXeXLs
+scK7xDdRlJRat/VxnUnNZXNBjdmqDUVc+cu5PPD16372nGMPxbUx7rapgVJ
yxjdp1DBnLi49yqratx/zc2p6TgMhXXIwwTRly5edROJQt8rNzefloeypUVt
/GpL3/4a+fypra1PmJ8s5EdROVHuLeIGJ/slEsmkSZP8QicKW45+FyZMmDB5
8mSuzQkc3n77bfQusX//fq4NARxwmcj08ccfo4v129/+lv12NJRDaLXaO++8
E9W5cuVKl8cFfAH8wg85UUC/yOXyvLw8g8Hd6xbgdzCP5fz8/AULFmzfvt1p
fV/lYT0n6zEEQbS3t3d0dPRb0u+4HnSiurq6nnnmmTfeeMNstucVXLt27emn
n05MTHS5C1t2xp6eYXHY6smdMLj7zXNwlgm2kBV680rdADBQCHbeETsEZHFK
iCIs9HryQ466zaEapqR9F8JCdbtj7cUc0+Jw51MfKMXyBQLcO8/CHI+9k22B
zIkiI1H06HiCiPj4pVVVVfbImKvWujlVgqNJePQ9tExGotySm1dAHkUYTYuc
z/l6o7jP5wOORNU1JMx/n9KJWm8/LYD3AJ0or/Pvf/8bndJvvvmGa0MAEjdv
GufOnRs9enRQUNCpU6eGfgjmQMePH0d1jho16syZM0OpFhg+AuZPz8Bww+hE
cW0IMLz01efafTFYP5LrCwoKUGP861//6n5fP+K66pjQ1dX19NNPT548mS3I
uWbNmn/+859JSUlOhT08G4M7acNwqiEJCvAtjCZrQUWnolZvMFocusI5F7Tf
unkVnewN7KwoeziKbDyEtqX7+/ymTdnVl8o76ztMtsIWeiw/uloNGYl6TyCI
2rBhM5acsjoWYOZtrTqsE8UokMfNW1RdXUuFgoi+prS0ncwuuLddYYGcrtb1
pFQqmSHz8MLXG8Vuylss5vq65vlJi/nCmJUrPJVw4Ra/04kyGo0ymUylUnFt
TuDw7rvvopelvXv3cm0I4IDTuwdqqvfddx+6UsuWLfPuURAffvghqvnee+/1
i0fBdQhEogAPmTZtWnBwsFar5doQYFjAOlGHDx/GH3vHo1z+NRbWc7Ievaze
dtttTz/9tDXgwF+woKAgOzu7oaGBa3OGhe7ubnTt1q5du2rVKvx9CYKYMmUK
WoNzoqqqqpYvR96oYOnSpWq1Gq3p7OwsLS1ua+tQKGRSqQy9tmHXVa/XFxcX
l5WVXbx4Ed0VXV1daGVPT49CoUDnEM3xGoPBUFJS0tHRgcrodDq0jPdFO7a3
t6NiUqmUqpNSbO7pQXWiBwI6/xUVFaiY5wEri3OyBwGJEwAXEPje6zFav8+r
n7FVPitdtuFkZV5FZ6fe3Lu3nYWdpWSxSit1tkXHrCdbMpTFjBpseUP37ot1
8XtL+KnkoABoSt5XdqCgQdvY0/uWRy9O8+a9x+dHzhDOWblyw8qV61atWo/m
ePpkFTnhNcnLVuA8JVaYaE5y8sdUsQ3MLk41CGbMYSJROLI0N24Ru7DTtGLl
mnlxyVjknI5EzZkhnMuuFi0wy9jCpe9/xA+LFgoiKJ0oH1UsZ/9QpqSkBAUF
+YVOFGN2wP8hZoTh8/nIyd21axfXhgDuwLEI9F5kMpm83grMZvMLL7yA6n/+
+edR/V6sGfAKEIkCAMBK60S9++67bsr4VF7Qdb4+wN5Xnb5OSEhIAP8wdXV1
PfXUUzk5Oa+99hp+77py5YpQKNyzZ8/8+fN1Ot2UKVNWrVpVUlKye/fu119/
vaWlpays7P+e+0diYmJBXv7XX3/97LPPoWKoKrQevWIplcp//OMfR44c0VHg
3YuLi5ndq6qqULGwsLAdO3agwi+++CI6aHl5OXoxS0hIKCwsRHX+3//9H9q3
s7PzjTfeEIlE58+fj4uLQ9Xm5+cPIBJlMdMuFVvQGBKlgJEG3YXtBvPuy9XU
2HZSPNbkjHTpiiPq8+UdLV02f4Sw0urlzI4Wi6K221lOnLBt0pPCU/q0n2tj
drHGDhAVCUQKNI/ZXpyj7iAQTO4UBc6JEvKjeILIGYJoLOWEJjoKFEFNc2wd
5fgxfH44jhGRY9uFopUxaBlNeBe8wF7GXfNonfNIvC9ToPeE5dDJrnzCaKwT
RU78cPYu5HFZlQgok9Ac50T5xQ+QRCKZOHGiX+hEYdRq9fjx49EDnGtD/B7m
/hQIBOhdAv3wcWsP4AT7AYJaaFBQ0B133OHdVAd2RKu2tvbee+9FR1m0aJEX
DwF4BYhEAR4il8tzc3P1ej3XhgDDQl5eHlsnCvBlsE5UZ2dn/0X9B/bfsgNG
J6p3bpuVzomqq6ubNWvWuXPn0JrVq1ejV+Xdu3cnJSV98803oaGhzC4RERGZ
mZkqleqZZ55pa2vDLvHrr78ulUrRAlr/j3/8Ay28/PLLZWVlaGHfvn3s3cPD
w9HuFRUV6IgymQwZgINXViqKhVa2trZiw3CdaPeYmBi8b0NDw1NPPTXASBT2
2v3BTQUCGaKty5R+vobKVirCI04KxUpy5MctUrRm+belWfLmulZK99Ip6ISa
VZ0OR5Ko+5nA0k/dRkJao/v6dFW0RDadHkESDxNJLmwlc66U9Z2OaYG2AJeW
7p0nFEQkJi5JSFicmLiUmpYkJi1CC/FJS8jlxCXz5i3G3etwnhIqz+NHz5u3
wF7ecUJVoYkSerLHoNA8IiI+KcFFeXqv5MjIBHsalTCGDI6FzaUMc64fzeOT
llK2LeCjkqGRK1eu89mcKIxfBMp6AzpRXicsLAyd0m3btnFtCOAa5FfedNNN
6Bp99913w3qgM2fOjBo1Ch3o6NGjw3ogYKBAJArwEEYnyk9/4oGB4guZP7De
5frCwkK2ThTgFzAXVKfTPf3007W1tbt27froo48Ignj99derqqr27t2blJSU
kpKyZo095WDFihWbNm0qKyt78cUXmarefvvNK1euoIXy8nIcVnrllVewusi6
devQ7kzJlStXot0rKyufe+45bAOOROGcqJdeeokp+dZbb6E6169fv3btWmbl
O++8k5+f3/sr9P0lWSUt/uoPAv5Ol8F8uKBZQAWgeKlyHhU4EojI5CUelRwV
KpairfP3lRzNb65upfWdaNSNPVarXROqU2++qu1Yf6JidoYcB7WoPKhCJhiV
sEd1WtlK9fuzaZ6z5uQqjbaazIkSRq9YkdLS1FpdXYummipyXlVVQ36sqic/
VtVXVFTFxi5ieufx+NEx0fPLyitQmdrqOtuONXW2vaipqanliy8323SlbFGs
iHNnL9bXNzJlnCZUw6VLOVQaVbiQH4Vzsdas/qKurgFtsltVbbMQm6rVVs6d
Ox/Vv3JFitXplPke6OHjdzpRBoNBJpOVlpayVwJDYdasWehlKT09nWtDABd0
dnY+/PDD6ALFxcWNwOHQyxU61p133qnRaEbgcICHQCQK8JCQkJDg4GBov4EH
fttx0okCfBN8sYqKim677bannnqKa3O8DPPijdyH7OzsxsZGbu0ZJrBieS3F
K6+8cvbsWfS2jNbjSNSmTZsYYRN0QiIiIs6dO1euKnv55ZepdQT67+23387J
yUGeYFlZGc6JQvXgnKjNmzezdVHCw8PR7hUVFc8//zxew86JQnsx5xzVeeXK
ldTU1Pfee485+ksvvcSORPWPXauZsM2dRwkDgGGnR09kyZsXZpbyUuU4bUkg
UvDFSnrZ1lmPlyblp8nj95bszakpq++ik6CsXUZbLlNnN3G5vH31Ee2MrfJQ
kZKfaotoob14VBhqZoZsy09V2maDXWXK1qAI1rK1QltDjZ0X9fmGzazOfvby
TIpRfX39/PnLWPLjUXFxiysrK5nyzFHYYYotWyQ4k4oniMRRrP7GziOuXbuG
M6mYQfc2frWlz+JkVNlaW1ufMD+ZHDtvpX/0zlu7di1ycPxCJ8oa0L3vRx6m
gaBfwKCgoK1bt3JtEeACrOL12GOPDXd3G+Yx+69//Qsd8W9/+xsMBO874EjU
wYMHuTYEAAAOYF54sE7UO++8w609AGANxD+RsD0L3DuvtrYWrYyMjHzzzTex
nuqePXuSkpKuXr368ssvY1HxiooKtIxemVQq1SuvvMLUY4tEsXrnvfbaa7i/
HnIwmd2RA4v2Qrujhb4iUYxVuE4EWon/KP/NN9/g3nlo+ccff6yqqhqJMwUA
QwaHQWvajN/nN8XuLcFxJ5wKRSUySXFsilkvEEljdsjSz9foeijZKKqxmszW
Zd+XhYmLSKUpkUIoLsLl+WIlj4pHLfqm+LKmQ28guo3ssfBcoNFoYmMX2cbO
cy7GGpbPaq2ta5o/fxmfbwsokWPnxS2uqKx2/31TU7dRAaVIVB7vePnSNfe7
5Obm4+wpSieKjGJt/ErUd3GCsq0hKSkZlVyBc6J8D6cAjkQimTRpkl/oRGHL
1Wr1hAkTJk+ezLU5fg9zJ6BfWPQuIRaLubUHYGAuzdatW9Gl+f/snQlgE8X+
x8uNoAge6PPAp8/3fA+ovup7728plJsiRYogSOnBTQFBoZUbFbmlHAqI0oIG
BPEC5JJDoIJcFWiTtkl6p/fdpumVO/v/JZMO2yRN02bTzW7nYw2b3dnZ3052
Z2d++5vvdO/ePTk52WKT645bUVHx3HPPwXGxCgGBXeB3QcKwxBNFaBKJRBIf
H0/cyDwD1/zQ3wwPD0c6UeR9nJuj1+srKyuRThTPfiye6UQh6BJYFM0TRZni
oGC5oKCAqo+JgoUvv/zSx8dn+vTpfn5+SDyB7jWCfJDXCBbS09ORW2nDhg2Q
OCkpCVbu3bvXYne6JwrtgkbnWeSJRvydOHEiKCgI2gaffPLJhAkToOanTDFX
p06d4tnFRuA15iFy+eWa72OL3j2cYgxkikqCv5Bo83g94yA782A98RxBsjjf
5IhCoUp6qrpOezNLse50Zuh+JAaViFWhZgmk3/5ZXFypya9SHb1dfFFSZtqn
UVOys/KRTlSTnqiiohIcE4UGzb23cHku8kQ1nv9XXwlQgNPUELMEehOeKMN9
T1Tw1DAklt60J6qweEm4UcZqgxvPncdpiE4U44SFhUGRwiOVbUMIDUhOTu7e
vTuS8DLU0wrHhcbz3bt3O3XqBIf+4YcfWuGIhCYhniiCg2CdKLYNIRDaOkKh
EG7Gl19+mW1DGIP3AxOaK/otl8vT0tKUSqXNrTZzq6qqwmlg99TUVOvdmzxu
dXU1covpdMZZ8Pz8/Orq6uDrpUuX7t1rIsqCQHAfsHg+/KfTUzllKsH1gtkC
iWm2u0Q0ts4kYy4JjpK+/0NKnEwBidOK6woqja/bTgnL4rNqVGp9VR11M61y
/RnZNOSPipJ+clKWkFtTpdHFZlWuPJYZGC09n1hhOmSjxiDF8qnB83Zs/wJL
SNUn1yOFf2RwUXHpB+EfYp2okKC57723Ii+vwGAvezQ6777IeUhI2K2mYqLu
GT1Rs7HLyxQT1ejoPCTDnl9Y8H746tBgo9oVJzxRnNOJ0mg0YrEYKf4RnAE/
IufPnw+Npb1797JrD4GiDZmERoWnp2f79u2RLoF1MosFBg1An1999RVcFQ89
9BCKHnfFsQiOQzxRBAcZP368l5cXs5NsElgHV79EJ4pDIJ2oAQMGsG0I86AL
UiQSxcTElJSUsG2OszTXAeXkgawzaVIP32LH8vLysWPHXrp0KTMzc+fOnYsW
LUKbDhw4oNVqnbGQQGhl8LX/w5/FsZmKGqVBUlTzRUz+zG8kQfsSkOLTlKik
TWezM0pVkPZPWc2ioym3M4we3U9/zZp2QLLjokxSUKs3UFW1Bsjh0wvZJ+PK
Kqs1WRXKr/4ogHymRBl1qM4mlpuO16glZsXyoLk7d+6jDHqDQWeWQ0e7mJd1
FKWXV1SHh68JCTF7oqaGzH1v4cqy0sr76W39ff3NYTTCDs2CFxISlpggpeVs
408qSQs2+azQ6LygoDlf7NnfaHpjTJS+rFyxZPEyMMkcE+WW0Cu0yMjIdu3a
cUInCpvttgXLUeARBp3cXbt2sW0I4T4oUO3vf/97608Aje+vwMBAqBw8PT2b
9cKO4AqIJ4pAaOOgmhnpRE2ePJltcwgOwbP2qsXpoAcTD3Simny7Z3O9ncAn
+7k5A+4E3b59e926dQsWLNizZ09tba1LD0oguAIUd2QM5aGMuk/rTmdOi5Zu
PZedmFdbXadNzK/eejEndL80aL9EcL2opFpTq9acSyydeyg5OCrxdqaxc7Tp
XNbUaKMy+WxB0tc3CjJLq1GmdRr97+LK975LM47UM4pHGZ1R55PK7NuTnZ39
7rsRQSHzg4Nmrdvw2YYN29Zt3AF/69dHrl+/Hb5+siFyw4YdsLBmzYbQ4DDj
uLwgc0xUUGjYqpWfwCZTAtt/M2cuRA6okJD5aMcFCz7Y2PgucNBFi5bTddGD
g+eFhs5rLD2YB9auWr02MCgsNGg2V2KiBAJB//79OaEThZDJZH379vX392fb
EM6Dn1bvvfdeu3btiCfKTYDf5eeff4bWXZcuXeLj4+0kc50Ner1xrHF1dfU/
//lPsGTatGmuPiLBPsQTRXAQiUQSFxfn6gkOCK0PqoGFQmFERMTBgwfZNofQ
NGj4Veu/TnIpdPcLz3SimgW9HBqLXHI+/8a+WqwkzTMCJ0FaT/V3zfozsqlf
GVXKZ34j+eL3XGlhTbVKJ8qpu5VZWauiFLWGg7eLQ742DtML3Ce5ZYqJ2nou
2zi5nklOKiRasvBI+o93i66lKXZcyAvdb9SVCoo2TaVnVDuXGmOi7N4oaHQe
chaFBs3GI++Cp86hLZjWT0XRULORaPnUkLmmmCXj+mnBYZCysT+atJQxLCo0
ZI5xmF5j6Y3yUHMaKpbPC57aeP6QzGQefE4160S1xs/YYjhacRGdKMYJDw+H
It2+fTvbhrRRLIQXMjMze/bsicZLsh4BmJSU9MADD4Ax+/btY9EMAvFEERwE
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
ypQpwQ6Hol3ooc+rrcHncMLDw6lP1DkPzGAwbie6NBwuZ3ZOXtvf+7CCNYmz
JvCWBNFMp0BPlkTRVdzyaYem3JNLy8sqKqpgid5YYLPLFfQCqojoNaBMVFcg
LS0tJCSkR/hEAUwm0/DhwydOnBjsQDoGSQnJCtoi22u78qcnSdbHeASXhBq6
mRt1yYdK7C6cQ9dFwzeWE+akkT123K4cRqOGYodI+LQzCVCVWcdDVA6G33C0
fNYGaUfTk7XKeP/VL/J/NzeA8kRKZJTeSC2kKM4QPM+LM9ZrpyaD+sgQqaJ6
WusCkTInA1O1PYBUFC/JFwV8mduc4nvfWaclYw+oiCQodimxPShU0ju0CQfM
jU4e+zI1E2B3CPJvZdL/e7Kq2mec5Zuahx3Ukw2JBy0uN2WMgwa9Xn/q1CmX
K5CFFCm6A2DokJGRsWLFik2bNgU7HIq2gT6yuro68InqNVD/lk19os5xCDjD
y6U35MIzekVldXFJhY9CuxUylhfKUkSzRrTEiZZ43KBTIKc4kSltPlBqbgBl
szmMeWZYUF5eWVxe4flo6fNbM1AmKrDoob/U9CifKF724pYGeW/sLiSmNFk4
uyeJmL2QCllKctCsDbp9WdVOJsCaKIjEyYnL/meE0fT0TpBRyYaSukC64MI3
10/G2jkbpCQgGGg/nWogpcEMOEiiynhtV2GTg+VVKY0UFGcOjheJmAdbf0f6
Tc1rRkZJU1FNAHuEWkSEuVZ0H7DUsO9/XwQEsiLKmr1R/9531sJKF2Zo5ZvL
mTlMyo8rZFNbfymNVArzEfqL1A0k/JtfLSXkEq7dV+hwyqUNaG8961B8onro
VzwFRa9BZmZmL/OJoqDwgcQ+kaeI3ILCxkZb2++Bn7OL/stb4mQNTxydAjmh
U+rRRLXxw702O5flsdt8U5PdkFeofEb0+a05KBMVcKAn1R7nE+V2u3U6XV5e
nnphd4Xk+4SGd25GeOF/eUr6D7Z5UUySSekrOQEHz7edKA80E4XhYPiEA2a0
O/Bb7igThd7CsLJso9nGOxyOgNVfu09XKaNd9b68/iRk1MKtRptbln90ar8U
FF4g5QOmp+REELcl8C33JxdMNoBVlCSgIslrFY1s2zvqMFSyQZJCiC77ejtb
XOsqqXGhBvoTLfS4zKkp705Bfh/0a37XqUp8a0rNiZA7o5Ih6O/8yH02fn+J
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
0qpfmkb6i8/lh9PNsN+aTr2Fdd+aj2SX19Y0CgLHu11uWwOaXI2N7qYmNAm2
JpwK57ThCTVUbcbtLC6r/uZU+aovCtGmVu8iDKogFlTZJIZK4mZ9S/U1J8SU
mGF91Dt4wjc5OfF4fkO+ucphw7tzNuGoPMHghp1zONxNdjShmPFkw2HzHINW
Pp1X8cmh0pkbvfdFchj991OpRkOqfvl2/EvBD4baSHUWbYqOcsUUFJ2D8sAD
PlGTJ0/uir2kpqYCoRQSEsLzvt+nR48ebc5EQWAsyype4lu2bDnDML7++uuw
sDCox2e329Gfn3zyyc6dOysqKoCzevbZZ2fMmHGGe6E4c1CfqHMc2B6KMBzV
1bVFxaWi2C7Ns1RwvDQFaBOJLOpuk9m38ekH0yZNGCHRWWYpbCKO0gRqp7x6
78BEEbZq+4fT/jVhlBfRZPFbOw9NhIkSiGLNM1xWN1TtJpsjt0D69cpaVFZb
Wx+Y66PXgTJRAYEPgZOWljZy5Mge4RMFkZtMphEjRnQPm0p4TuNRWBWNbhW3
o/UZKnZuikjO+uz3crc1g4u7Qk7Q6ysSQ3JI1pPnkhpKyc7jNz9sb7It2ppL
NB54BF3c4EZxzt1oUAilTmXD4RFlcS2DhvAfHSpasCXXYXPynz2t2FgB9aTk
D/LriHF6tEKXSdE689P3/l4KiXXtCcOLGSBEgVf8RPiBzvnibcYgXw4U3RI2
N//6FwXK1QKNgipsZkKYEw8ThRlRSJ1T6fQUdiVC6tHaxIOWyqp6e3EBvzOe
e2MyNgCfj+vlcfPDxAXj+XljSUE6bFoOpfTAwNzTfv6vfPQz7q832Oqq86zV
m06U2d04PQ91UmmnEBXxT/PTL6ZKgsAsJdrZ63Wob/Kci2fs7IlvxY+WiSvu
h72TwnkQSahqjov6cQtCpQJ/MF85kd/whiP7F4e9aecvJbM35qB7iMIAt6lg
BBuuN3abGVbMsDqikvRy2iMmjcuwNzt1LO9a6PX606dP+yhJKHo6lCe3jIyM
5cuXb968WeyC3+OefPJJSLJ7//33m+8dmKhFixYpCw0Gw+uvvw4CvOjoaGCi
pk6d6hNze+CzMngrJSUlDRgwQDGGuuiii55//nmXy4VWBhP1bvWLZHPwPF9f
Xw/H0s1D7SgUn6j7779fbSZGcU5BazCS7xq+yeYoyLcI7TaBxNdPcbLCtASf
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
jRmud1dupdhYp14dRtXkY9tqap2se6I6HEnub8BGRmtyS9wd+QN/j81gMJw5
cwY1ko52JGoX01rUibroD8HWcucBEtUaThUG7EyePBmO1qmQKHDpEnOi0IjO
6XSCTlQXG7Ewnahhw4ZlZWV1tDtRizDDWs2S6DGMBDEoSo462sOZ1QP4UWQB
Qyue/H83NtXl6Atqa+gL6C7TkcLuCUxeu/kFNrk8eqPBmdWLyZVT4C5bk40C
KXj8md3dfWqg4neEHLxdr+RSWQsUr1ABKNUAwJEkRS5tEHbrql/bWDw2LT8u
Td+G6NMlKTr1DTgNInh1vWVnvtNRDwM2NLuWtAbQEqTWrBai1gEWETpRqJl4
AuLH+8qAChWXFh5n+tZmq7eqAKNG8ZpiufTR//q8VBLZUFwlrB+pQjecgFLr
SJTISYjjw6bfrfgp08knyN7CA+o2qrLTupH64nLgHVkqtWkj2thWXimvHSHM
66HEQ7hcjJjYK3B6eUa2I3axwS8KUkPJBUfnkRDCXh7Tro/2lgIFpa6uTkq/
BxOlQLk9oac0t4e/tviNDZYxUIGs9tSFVccrRTHaG6N2jhZOEff4pdnbKRI1
Kj2fJWnFHTZNPzLVUFztx+BP9mY5eZKy9J1AXd2qrBJ4fKDPsrJaad7ThGuk
oT3iJI34JKvS3xQsmnCnTCSnWGgbJiZ9/rLsdYFO1Gvri9/bYkGOiV8my4lP
y8s/QI17aaYN+YN6AVX/Vt+J+AWlsQkzjqRPp4kLnvcf2tDkdD23jF7Cwn2l
clE+hOwxrEnzc8JgwtEaTNPqYa9aRqLc5SWvb7CAAOPT6Xq/3y+V25WPpojJ
E2VLDnJ7/ekqYDLHaiKNWsmyRFmLHWPo4YgekS3q9kQtam1b2zpRd9xxR9uA
DyA8MTExcLTOg0R1lE5UTk7OZV1LJyqCAhOi1glN5vADQo8K+g2xDHeCpG8M
mHId6eXWPaZIeDAWCAiWInuB2eLz+UIO2OUaoVo/QViSRKWstFJnNDfV5aBq
aci6CifFO6oGMB7pXp99dVN2d5B/Z/CdE608PUgKVmkgTZeoKKgS/gt3PwpB
aNCytca3+tvKqWtNJKYmT9Vr0o8+F92n9iupRpYjifErpq4xrTtZU1IvyqE8
KKBFSRof6iIlpe5kFnE6UcFgUK/XWyyWjnbnLOb2iYlf20ZzEAqf5XzB7lKf
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
xKbmqPcNHXq25pV61AvQnG/yCeyWAjQtdp/ZfLpa2vwZwb4GMnBMHj8wBJgq
I3LWzw9uA4wSt6dtOFnFvz86ZWvkfUDVQp7pBvZOh0YvkoDBpF12fFeJ9stL
bo8++uhdd91ls9k62pGotYuBTtT27dvb4+Bn5URFrnUIJ6oL60RBfaLpw4ED
B6I6UVE7L5ObLSg0Z1gwWJaiKMGWd5HksvKKfH1BbW09P7Soq2/KNxUUWmzO
Rk/zHTuvqe86FaxcGrSXOPL15orKaj7k0OX2FpiLTRar1yeoat0tDark0E+O
H9UFiTSUVacUV/vXnKicvtYcx2m9QrAAQ37YHDyWi33owALugSfsDXJz32Ag
DSvxCH+J/v0t1iOFzjp3C12jC1hiYiJ6EEeETpQSIWk7gAwZlJVnlhpDOFGp
GvhpL6uSVj1IOEW9GKPJbc5csKcMqBeyKLUa3aYqnMNe8rwYxk0CtApUxLEq
VEMRuCSISmlFtZDxf2wvOG+T+WDK7tLEr22eAIm3Bf8VSazMYUcTSayflP7n
aqymjn0rrvbKx1JU4CsEiVK/dlfJV90h8JBjbcXQw65/ymSloYhJO+0u+6nw
K116b1V1LZsFj8L4MIaLSf/VPb/cJGAVLBVAkxj9tIsg/1FrF2Pvj0Sl1XcW
afp3txahHqG9a5KVTGOjyonSTVhuFHxeQJ+o9BPGee7EMXpqsJu8+HWcL+D4
9hBJc8KMIluSRHtod/J6r8knjFYzGqisXfXpudhQVusL9V2BF2E4fI/wkeBR
y4CyvXll0pdJqnuDWdigenYMTynOGnRq6ZW/8rn/wpGo9Um7civZExy5V1wb
8tpREOVJKwtgDID7ZiplQwHY/t7mYp+/K3RGuYWlqHUdYwOJTjuiAGPugU7U
k08+2R5naQ2Jevfdd5OTk5OIJRNLihxLVg0tDx069FJyorq8RXWiotbeFnZn
9vl8xcXFpoKipiaS8psKO8uNjS5zoTXfVFhb1yCKIg/IEONiKNrhTi+HokFs
bYun4t+eN7k8xdZSvcFcXVWP3GbXGggIGJsyFTY43V147BHy47YAUDY3ySfI
+gpP6uHyyUxho3PokLdriSXzgjc3Fu03OmuaxBZqKaIaSVinzsjI6N+/f0To
RIHnVqv1jjvuGD58eEe706oBZI2cVZV+uXklnjzihUP6OuX4AnkeFXSS47tL
yX3QBU5dg9HdZ5Ya5WCgDUIRRZPmYkBJwAyo3nyUnDQXEKSeiiOHeCKjnntQ
XymdXkG4Ut0BIBISfyb43C+uKVhy0OHVwvMIqCMGxPm/CMZfDcgSVjg3bc8y
VYHzZodbOvhuMyQqRqZp75qJqyf2Yi4BwIXBqC8etDuqcc2kGqesKggGfOiM
anQhlsZSsuOPFlSHdkadGrukfzpdHxGwZNQ63MKaBjQVb0Bu/Yaft3BfKdpA
5lDN/DJPnBol+tLqAr+zXpwwEKuCU+hpAB+dhyXB16agTiSbvtVAJyIhxZAf
4FPJbqwfUuMW+CQafJJZtB5rpzczUVLGZ7D3PjpIVzdqMb7hHDNWShlvt5jX
jzmJowJ9bunD2Dai85SMD7L1jjiVyRmHBeJCkCVPQHx1vSWOvujRHIZamrXO
Eugqb2/Cx0fhQ9xOYeweaDAYzpw5EwgEOtafiDFJm8t0zl8WjP2+OTk5M2bM
WLFihdIOD77WkCgwRiVqni8voq09kCj4aSRJcjqdbetERejohelEDRs2LCsr
q6PdiVrXtNbG+Q0ur6mgyFxobXKHdC63x2ezl+fmF5SUVmghe3Krvax5tNdZ
ngLwL4mwjaQWtpfDfWaggZorkHwEAkJFZbXOUGi02OqpHhT8Rw4GxZLSyjy9
ubKqpmvlBDw/k/kaIyN5r088bW9K3l0yLqNgdKoO6PcdjhFdmgKDfBhsv7K2
cEtObWmdNySDm0yRTz4uXuabXtQunnV+nSjoPoIo09hPriHRydri/JnrLIrg
E4/MoRyn5OsCZWe+sdRi5Cpd95+VZsHnboMThQPr5nZvCaHqrqJSBEGyZ8Ed
rNEbnLrGhIdFG0ZS3hQ6Y/mpY+bKsWn5X31bHXIjlUVM55AVMeV6JYFIRa0f
g74C/wEjUaW18t5ZgFDxCFgwvgcfPMhzt4hKOf4MYvX17pgclf772tra2MUG
yGuwX1fpr9CJiX1gS3H3TOTRvG22kM6YqnHM0IKmh/y9vEtH7btYo1ds456/
9IgjTG27oiHI/jtrncVbWQ4sIyVUJ4oFuyl7V2NEuqosTK6cFZxQb8JApR53
PUeDt4249SDfvNWRUsAvvbKukG0zShWYQn3kTGGFtHgWo2CpZxzA/FQm34PG
UZKnSfrvlDai8+TPX9YVVgIMNYpILPoDIcRwt0/EQu6EjhXGiEZlyhdmTPjq
Cn1TFa+HJ74rR67egIpUvbFzlsz107ZljHfZVqFluWZTh/vT2UvNBlzIgoxq
jKxUatsl9q3zW9tIVFe1dkKikOXm5nbr1q1///4X/fgdZdE3gFHrEGuxsWGd
qAKLpcjubHSpZCcJRM6rqmsLTMU6Q2G5o8brgbdiIciGetjwN30au6nN1s1B
RJrsFSNchRyWwwIEQaquqSsosuXpzWXlVeSFkaSotwuI0UP/clRURUKW+Itm
pM5VzauWkMAat3Cs0DV7q+3pJQY8WuYkNUYxaYuuWKjeRZoultM2h9H+1LWF
X5yqKq710dprVqXcn85uEacTFQwG9Xq9xWLpaHdaNfjlXX6Bzc4YchubTrJc
peY9t8QowKZBn1KVJwd9x0zVY9LyY9OwnvmLqwt9dTVtSy1ByBvNcAcsI/JV
SKBSUZgTZdoMJ6l2BVHTnbyqoNbpclcXu60n/T5PZn4FcmxEqvGQoTHsEgKS
eFCPdSGa7Gc8Nfa6Ruf7W6wj4VoWG4rLa5TtL4iUAdVTSOhOfaCnJhyq+F5q
cB9lTHEOE07X57c3NjaSS9bDZBb5IwS9iuOM3GhXRI/PL76zsZj0OB1AT5Dp
knbPNJPbL0RIJ4tap7PqRqH1m79u85nasOGKyyvFptGnwNubizw2KwgxAZIj
avnpKCdKPpOJ71feRkKaAk7UABYiB+FyGIkqt6DNimr8EJQHDoxMNagyhvrn
lplY8mLeJW9AmbPTGkv7hZ7XuTIXV0gfTaa6VeDbhMFaXB4671uPKH6v4vOK
yz9kPreARKU8X2Svhkc8cm9sulEdYtFu5xPkRQfL2HnjmDNk++eWGcSu8iIm
hHVfl6nYkxV7CvnsTMWWhAsssM9oOXtJwgVqzzYfL5ckK2WfdWB7a9FYvwOd
qG3btrXHWc6FE9UtYu3yyy+/rCVCV/txoprrRDWfXkb0hFOn02VmZkZ1oqJ2
iY3DabCYubmwyGgorKtvIqvVrHyy4gv4K6oqjSaLzmgqK69yNjXKjMikhMTU
ke1FjhkrceMuiSFLMrysl6muFXcQQTusJCv8WRTF4/FVVFabC605elNJaXmT
y0dEsTQirtvttVnL8vUFjuqaIGiy84pQEXyHOKuxN32ha1RkpbzBv1tX//q6
YpAkxZl9lpBoI0rF15H1XZYZxZRXRy3Gk2U0AafiUYt1ZKZgmLTSuDS70lLp
lySoRjGssXTatsNzt5KSktBzOSJ0opjbEfHgrvdoETdMowzSSsYRSWS/mugA
tZyqJh/eMt0EcXxvrC/21JScRfQ75dfS3ukM/FF5UDFE1olGxsln0sCZkgYf
TA+fWWJA8+h5O204hT1RmBmblp9bipEo/r7q80tvbCqcuMI0d0fpmxuLxqYX
jFqkKYeXlFaC3DpRqeLJWr3g1DhycNeL4sKbhATM0SJQFUT5xWhJAFOuF4Je
1JV4fCmvlMR9kxuRJygn7bRp0HcqTtunJbtM1aMaViswAtpD1DrYQunZjvpA
a3d+1LSOFjWE7U3Uuaki05ztxd4CHRCi1Oi8uyAKT8OabPlkLCOHKC+RgD5K
ncLo0ECl8IyMQ/8aoZ1TKap0E/ME3ygCkjayUs0fED45UKYiV/mgKw6xrvay
KjlxHIvLY9wtAKbw1/gxisclSYK05XPe/3CdqDljKqvqAZpDnrz4hZmG8Kp+
iJLy5TeVwFQEDTcmhUfF7jpxrNN5mdpyyB2yYZ9kn48KRTA6TZFtiS0uR0vb
RbQlyrZ4xYZ+U2596ecd3OZaMmiHoBM1YsSI9jhFcySqOW4T6XZpkCjewtII
sgW/3280Gtv11BfdwoZbUZ2oqF0aazbOp+MixgXBcXnWMl1+QWlZpc8XCJP2
DvgxGcliLcvT6Y0WW7mjsrHRJfKzdjqFl1rnRIWmomsJKGI4mChLHpe/prqh
uKgkX19QYC4uq6xyub2au2REKopiZW2d0WQxFRTW1NZTXArGjjz58NyrKUJN
VsE/tfbRYLOoxrvmeNVLX5rx+JYQn0YTQGYUCaUhk8Hc0WTc24WRKDbvJjXA
XviiyYIxlpPOmLDc+NlBh97hCwTlcAwzElpPRkZGv379IkInCsxqtfbt2/fh
hx/uaEfOYlXOYGxqHmBQLMsVCG7HYUlkq0dVUZExgUqEIFAMtqTp39tc7Ck3
tIZByfNwHJy843m8L6E/KfEhOlHCvKvhq5I1TyH3xoJqN3RkOL5GZcSiLsay
en+YaJw7ICbtssPUmLR5jKGNTKX8pdLKGmHNo4yaJSR0h5A6DEwRBSrMiUI3
0v1vsxg9Akn1AvFzdhVoJvt0GqUaQmGSyMgf1KHSDzvGpJmg0kAGmWQWo/Nu
h7OryNBErX2tGTVHVgorPG3c+Y0V3rC7Nxo+oFs9/Ddlj92d9w2QoBSgPJFl
IDvRCLj6CoyYBzzizL+CmDn+nDBYmTQYC5sDP2rSIDnnIDr4CWtTa55g7XQ/
C5PX+N5oafU3FWHxv9Avqirr5NmxxKUBIsfUwpwoEEv/bJri8eBH/5GtLUYO
Uk7Um4866xto10vXvbmp2NeMhLjfWB+ncobhcUnuLdgrNDzwByLhEXh2C20/
tZmYM1OicpA6VWHkqJL5IV+jpa1KIyWsGss7HSdKUediOTk5M2fOXL58eXuc
og1OVDeVEHVZRNGiWnT+kiFRrelEofXLli274YYbbr755mAwIkcyTCfqgQce
yM7O7mh3otY1LQzFDVsfmkqOQEBBobK6Smc0F1pslVU1gkAe37L23h/NO1wu
T2VVXbG1VJdv0hsKi4pLHI7KmoYmd5OLShDI2gHDGOmMMCWzlTI6qeR2uxuc
TeiMVluZ0VSUpzMVFNnKHdXOpsagIIUnvJNwXKG1uDQ3v8BeUubxwhSstVzD
XYVc3pJpcqwS/aH9omQscy8+VPbCChwipBI58LtampeHvBtlQQqj+eTXXbKo
l8kkZGGoD1NjLrO8YdxSw/w9pbklbrePtSSh5XrvNBahTJLOrxMFZqv1M/EW
EsdqJLkacc9CvWnBXhufWAr9FHGq3ApaSNxhc9uOt6oTFR8jJPSUDryJdpQS
r4FEdZxUVAwRayIcpL2zFBGHIeeUuvB0crEBOFc0rpb0X7TQwCSRZQrUB4Jy
2iEH8oeJz7A5JuoLNVXV4sq/w4lUZKk7OIZBJ5IsD/v2zQIulrA3A6DILhiw
Cvhd45fxdxIdZKgEeiG6LW06XdfaHQY5Zqr2dsDvGrWINC0SH77nlnhbu+2j
flrRGAyT+fMFlVnrLIDEfnqw1HtiP4Z6Jg5iaekgAo7F6Ck+kk3Y55Y+iCXQ
02DtXxw0JB/Br5IPGev5dzqxqXms3320v8wblNRrCMGL9xnqwJ/YUP8bGhqV
Nx/TdNE1lIxStqRVc5Ug7mKy6du2dKJmPODz+BnYlbTLTsFzzou8Ujfrj6je
RqYaGPCOSpOny6QPBio95UQR7CKlw8k8LZZwZlRJcjudqKuVkmSt6mzzlbJP
O7rJdYx1eZ2o5jDUZe2JROXm5qLjh+lEbdiw4bbbboNT33///Xa7vZ3OHrWo
dRk75xkrBY7cTZ6y8qo8vdlcaK2uafD7/Rp4BQcEfZSg2NjkrqquLSkpMReV
GIyWM3nGPEOB0YTlp2wldnuJo6S0vLSsqqy8otxRiZZL7A5bWTn6r9FszdcX
nMk3obOYLFabvbSysrqu0en3a9iyxoREcxoRA1D2kgq0vdVWVlffJEmSpMFk
GgIWmbPzCzIuvaDLKxBB8tJxGdx4mGAscTyDQg0fgCgANkXtugUPwmPTdURO
VhenvfBl67l6SDU+vcQwb6ftm2KX0yexSu7MhvpIxOlEBQIBvV5fWFjIr+xc
RjwqqHBD0AqdygESRWL00JqM7EqRS7sgiPILX2A9cNCKWbiv1GPe3wYShflO
J8lQ+bM7gI/ERclpSeukbf9RBMwyOlbUFAsqVYtVVWHQrSILIpvpqibJyvpT
tWxiHkdQsljoEanGuoZ6ackfqGL5XNCn6qGF3SEPk3+Or8uwnmmVi4m9OHmr
GNCz8tXV4FyBgPGm4chEX+i7wUPmRobOxXEqNLCcY3fxv31nbAlR6yzGvVQi
Dz7UI9q481MaEveI9PkUdG+Hx9/SIw5/1jYItVNI+FsI9WjiXfLzQ+m7Mq9L
/ngKkKYoNDRxEL+lsnM56mvb82rVEHh92IN1aXalIDaLRyYoWU6pOzZN02Vi
e3ndHmnmX6QJg1kuP0CiKOiEHN6WRjO/VNnbyJ0nPn+3JAnsFKkHKygnivOl
rN5PkSh4O0OyD8SqaT4qG/2d/Al4ASbX76eEqA4HT9rEVTreh0gqCbTGSlQW
WSdGokAnavv2dtFU73pIVHPoiedKgbUfEhWmE5WZmXn33XejM1555ZXPPfdc
bm5uO533Ehg8ldD04cCBA1GdqKh1RiPDsCYXhqTyTYX5Jhy419DoDAbVfHah
wSCa8oAo+vxBl9vrbPTUOxvq6ptq6mprautrap21deir0+lsQv/1ev3oUG1P
PSQJO1BZVWcwF6kAlFPkiCrc7s0AqC43fGrNatwCmu7N3m59eomBHwDHqTLL
sapMsfqiUwe56buwVjkrwGlhufNYodeuSdYY4zjS1Nh0LGmbbW6ojYQ3womJ
ieixGBE6UUoo2tCZkQfk2xlb+FQ3VgWaUCPZklvNiJ0SmrAGpTc3FoEWGZqT
LjpY5tNtal0kiih+m7cqok9Y/oAYH0Mi4GI4hfDudHlDrBJoRNW0z9DAuAr0
E9TPUvOfXaqXuBk34UThdnvI7ISezvoCEKLQLm5Xo/LZHVp03ryrIR6QnjSx
l/TZAFmU5PJj4CrDx5iuFHy6q21vbLBAhxqTZkIdJwRZUhRjhbcNrDvTXKcQ
skKzLBVRi1pzC6EU7TM0tn7n10mQiYILtfYLyieHSgCJWn2sUtizivKgJg4R
1Jx0Gr/o5b8pQT/u2X6vuOI9FgGnYlADWCY7cd1C1FPWnqTC4PCJNZfUfrr5
TKsj/JIGv4ZBcYixEAjKU/6gaacTr8gnBcTkY1vpIbyNbSiWY/eCwrNL6X1j
3ckaPlssWJNPik3NoxgUusMQ7jRjC9tquyAShTlRWNe6dU6UBlIlK9Z4bmWC
hnvYqMxUR+pN8WgVW74ACIvsQglFJYn00kB2ifxLKiHXS4983sfHVWRTT6QF
0128etMwKG5laadDotiAB3SinnzyyfY4y7kolnc9a2+dKGavv/46nBHV5JAh
Q2bPnh3RYJTSCXSiaNIoPkRLZgLU2kZR+96b5PX7qmvqrLYyvaFQbzDbS8qq
qmsbXU2gEB6iOitzy+dmvFSUx+Orq3eWlVcUmItz8o0kTK8Si0SxTbtug2TR
dpIianGMcugVcxyw8gb/Ll39a+uLxqTlh0Er0XIBJZYbgUOowuvrivbonRVN
frX2QQmNRaEy9Q/lUsaBhnWujIyM/v37R4ROFHhutVrvuOOO4cOHd7Q7bRj+
NY9Y6iH2jWlD8S3kqCUkXZ07ICbstmOoZzFm2a3IrvCfymg1a95cnClPdpyU
Ay5hU5wa9RbDwT40k530xT8AidpypoY4oHVwBjFNXVsYIv8CWnmKoq/wxKkS
zaHt3OjzuqWPbubPRflRTKtq5V+VoFtx2gVMf8L/VVPpxXDMqJ4u25kPt1mB
ZzUqrWDKF2a/GBKR7XAGmjvAys7cWuoyaRmdGZmMWucxeFBCj2ixTFphDoTm
PVFIl1j1jQPTGtN1G7+tkrcuYtCTOOFOPikehpg+jFW8btwgJVHa/Bleo4JU
ZMsBVFEKrVwxW/L5Vh6riiMwNSe1pG/xRsFbozdIUWXCGwSUbGx6ARa9nDiE
ZMoL1YCC9HkTBsrmk9pVtY5EoS0D7kbUK0elY4nITBNTcdfSxQqijO9aXDhh
nBZlrNOXu7vgiOusSJSKb4gYnFFjvqiuFANkgISTcH6YyUUuCSEqSXThAl2S
+IOQZVUAPIEECSZqsNJ5HpkFzZEFFnt48UhfkYZE5eTkzJgxY8WKFUo7PPVa
Q6JGjx49PvJt3Lhxt95666VBopi+Da8T1dDQEBMTg874ox/9iJ39Zz/72V13
3bVw4UJB6OyaHrwxnahhw4ZlZWV1lBthQev0k387yen8dL3HUdTO20gjCASE
+obGckd1UTFWFEfFXGi1l5Y4Kqpq6xqcjS632+v3B0VsHBWcqJdIkoRWoiN4
PL7GJnddvbOyqqa0tLzQYjMYC8/oDCaLtaS0orqmDm3QtVWeWjIOGeY+mZY7
gCAyFiT3rz1R9eKaApgD8oPwrq1A3s5Fpy0Q0Ruo25lfmrecrrfXBbjUhM1i
96L3x3O2CNGJkvbkN1CMRU3IzvUyIomsGvrxvYKcerAcJwUgwuBfflMtHF3Y
GhIVnNcLK5Y32mXBK+2ewVTBVSRKw6OkZfcpgUbU69ccr2Cn5hZ0cemG97cW
ARIlKyERSeUN/uaexxHCBr43J13Dy49zoXkxGH3aMFbxexR/vcabwpBUb0aO
opwoc+aC3XaISEJ3HiaJrKWJ94ttIFFrTlRK/O0ualFrxcIaCO4RJypba1ev
rCv0BluYEew1NsAG+/IqxLVJjBMlj6ecKHE8hZvkj19SvB563iNb8DYUiRqA
tgEwipKjFs9SfO5FB0tBjZCB1bEqedJc4WvtoiQiLgfqc2z7CRkmwefX+Fec
DJQWnVdlp9UQCIgz/q81JEqYMNBdVT5rnYUcOV9X5tXkkmCwL8uipIzPMAD0
NJqLK4T7zAmr8+L9hp3GzgmJIiwgG+M+AQyVoElk0/UdjERx2eJSqFcXxjXi
aWChKyVrQogw+HfwluBFiReTDWWPJCTq0liLSFS3bt2qq6s72rXvajCuGD9+
/CXjRKEzgk7UnXfeyRyIj49Ha2bOnLlt27YJEyZce+21zI3evXuPGTNmw4YN
zRXOW7uctte0h0VAYEJzp6JTrahx8lDNm4EgSB6Py9ngrqqpLi2rtNrKCops
BnOh3lCYZyjIzTPm6UzoMzfHcCbPqMsvQCsNxoJCs63YWlpaWl5ZWV1b19Dk
dvn84VqanbSPtL+FMb8YV8orKAaHL/WwY9JKSHunZym9tOleFIn6LiW89rDA
OyjzTP4CT5yLqnwUwFd1yTqcRBpxOlHBYFCv11sslo525yy26XR1WPPghYUr
m7SpLpnTKetOVTF9la2nqqVDH7QenUdIUMFG3LOzE1UZcD46D+hJMdKiO5Wg
2y9KS4842KlB3AyTKNKx4tnC/WU+P7w/CmmbvqCC7gw4UAiidNOMVCptiVER
BSpORVCvYHwPVb2KUp7kPdMV0aegeSoWVMdSUSAnFSpj1d2j2/h5Zgl0HDSZ
Tdht9wYlEmonqWkUlDaw8SVZFSRhZdSidhYLayVBQcrIdrTWrubsKHIHQl5j
wducnFIXdOEjeoe0YjYTKoeEdEAigkA8efl7oM+GH76G45SbhP7FJarDcXPj
B8oLXxTdTR8fKEddYKSWAsPEAsMrG1tNqySI8sRlVO1tDE0pop/yhSXQ2ABB
ecgxiAGUiJiV6uSdkrde7eQeyLLXShngspnf2WLDIflpJkeDRu5lgzp/QHp1
vYWKztHcmjo2nNhnaGjR88i2c+RE8SiHuoAZQYQrpdF7Ljqucr7FmsjwKOSV
fOECUwC7JdMrAgFwdTkcUDrPAtLrhGOmVvv3ODoPdKK2bdvWHmdpjRPVBYSA
Lj0SpTTTiSKRO57rrrvuRz/6EfoXuJSamvr73/+eQVLdunW74oorhg8fvnjx
4vLy8havou01l9J0Ol1mZmbHNw8utIQoNsguf7PXSV06KipqbZumHN5soRVT
2Xay1nBk1oi0cLNwyhMQfr63FgpmwFtLrH+Fatvtk0/a3Um7rM8to2R+Mu7F
wi/4k0xL4wghCiTKo+UCCk8ggWU+uR5JRJg3aaUxPbuisMpLJjqUMnrpnyN8
WsykpCT04IsInSjmducHmdEkcfXxmtGpulh1hkh7Fkm8iGZqamZ2LW3CYVMD
C5Ldr6tU9rzShk6UEP9TujtRBZcSepPovGZxfPN/rUgimi0uOlAaR1NA0iY6
mpC1UBNddsghht5KwR9JkiDlH7gEJTbN+Pxyg9/vVVPgEeknjEd1Jwn7qD65
lJ1MasEf/OS3lDeV0Jv+K6GXkkBRKf/JJauO0iApdFNKzyz3CaLC3crQt8mr
Clrrcf/dX6qmFZOANNvOv2rUItOaEedQs1l0sKy1dvXJgTIfS33CYbPlDQGy
ge60uVJKe03jHRGcR544hEJM4wcKmz6lEWzoGVxhUSYOFCcNoCAV3Yxm0xPm
xik+d9JOGxUeV28XrFN4/Epr5gsqM74qJHF5lIaEbjgvry30VFfCiZQJA6RJ
Q8IS9mHJdInBzU3iwilt6ES59KcSv7aTg+twhs3QHoY6nCcgfrijGFLKxoVl
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
b2bjQMikAwAUy25D3oxQ0UW0kj3rtfC9aGltZko+0w+r5IQWRDOjFrXzsCgS
1ZlLRyFRYU+WjIyM/v37R4ROFHhutVrvuOOO4cOHd7Q7bVm1y08TvancAPqj
p+lf/MJEAuI41EXigobS9G9uKnY7CtpAooIr/6L4nQobEvgamGoTlzuPxs1J
ax8PuJ3k7LoQbRxyZ8CyhCHMCiDiUt/cASmepPNDewGEhZZNdkfwq8dB/YkI
QDGdqB5iItGJcpyC6So+bNAtfT1VVa+6WsZQlYaSIT9djvx3thSjgx8r0qR1
eAsE5c8OOuKoDLJuNM3MRTldu/XVsFnnRSWj1mmMtRFrlSeOIlF5OEdAah55
Z4o7yCFzYxu7i5KyYG+Jy3CappbD4ktDuNx5OFhPKfw2dD9JEYLitD/z1Cmq
E/U8ZiIpa5IU8TvCNRK7n8hetzB3VPiJVLlyaXYcqKmrL5dJfz+0Piy/Hh+j
F3B5pn1FsviFjkh51teu/FoY+TMWKLvpGSpb7tcRbOeGRNGUcLaw9Qnagi1B
3SCBypjbExryPiR8Hnp8ie1oa7bAvtq0M9qPvH766+lO3Wy8Ow2m0xAYDDGx
r/i/+LzOnNlndk/z4iR6WAm8GWKjXWZ93ru2w6+rxwTddVxKvnndtP9VnPjP
nixxezXkzyYZ91QPwdUStg3Necf020EICy6kBF3Irqn4QuBczGdrMlopF9Ms
ftir3PeLMS8rRY0fTAYFrdJjb6pewelaIKpFKBKVk5MzY8aMFStWKM2Gc1Hr
bCZJktPpBJ2ozvlj8XJSy5Yte/TRR6+66ipGlLrpppumT59+4MABQWhZ8g90
oo4cOdL+nuKnVUWjMH2tmQ5l1dE1G9ay/NShRddsIVpan5mSalySVdk5m2vU
Is6iSFRnLp2EExVxFgk6UVJ5HZZmAiQKnphxKpby1kabmiQunPUqCVide942
m8t+itd6CudEbYzDyemY+o0o4Si8hN4tipzLy4fJvkba5BYbcHoRAuZgTkha
nsPJT4HVyaxKgUbTz6XHKsgl5BGSM35IlTiqhNUPi4kAdkGMXncWmoeRqEYa
YI7hKCmgZM3htNZD9KwwElV0JPnrEuSbqdqvaW9yoyM0919zwgFDCAwdpGtj
CfR1/WmKRIUnVYla1DRTOVHq1/xybxx996cDIVNoUWgB/auNA/kEMeNotedU
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
9+zZ0yx0oojZJj4Ag0nngRvVliSqlHMYZlNK+WetOlLICfkqyCha1X+A27ek
4p7swAT0cSJSUbjCxugdmEQ1qXlQUAwlF0bzqS9ZUTQpaZDeiz7QVZkcRdZP
wCz1VshG9WKqslXym7D/5PJzbkI/KGWCP8+XqV39657XSu826GyPw9GUaqTy
eAqaDXuEJcMxLKuJYojkuwgRhsOoboSia58z639AhyieR7JXOjvRJVLtlTbW
y9dMZpkrBxWFc0y6x1TktteBUNKrOqPzPGdR9VzXIYgI5vdKv4BHwdh/KCcU
Gbpvedsy9U8ZQkQbZkY3A8llzQNnNKa2mKZV5rXAOSSn0QRQXFw8fPhwnLNP
nTr10aNHsDEyMlLUiTIjdLOOUe1w1HSiNEtqdW3Kz8+HqcfQoUN/9atfCeWk
fvrpp9xco9+GrDL5KeljuyBWXyW9nB1V0nzTgiG3CBEiOhHmxURxcjoZFv7Z
q48WbdsVZGnNRsy5u2/fEFtq4ye19s0ikjusqwl6RwRw1NC+zKWR+bsCoyJO
pcwIyLEMkE7zT2cdpQKkCtepDJy34ldYt+DIAWTOJbzYVJZtcPbBuCusI5al
fWDUqXnheZaKrPHtKA9lCkyUEMHBwQMHDjQLnSgEjM0GDBgwYcKErjZEH+7W
NKGTsCWXNY/P9eafdTztoYySq+i6KNfZd2Vdk/zJ44d08HCOeuoNC7vi1Ueh
W/4KHePIyBR/6yGQN1Db/6ZTJ+qmhuRFG0badPllNUIJ5cp5/6u6KvXyNCNP
Dya0FePRl9rUR+bOx/cxW9+QNTVr+ompgqp61oQpCC1UH6KjKdXNhonYiBCh
D4Y9DuyYtrlRtnyMSso8gYMT8/C+1r3o2mf0Vge2jMOnfKycQouJ3Zhzs60m
ky83T+uMztu7hM3rxxVW81aiy3MUwYZKMStckbv+wNSpB1C0wr5uNPI3lxll
VlZWampqQwM3ETMTm0UIgX9u8/X1/d3vfgcz9Ndff/3o0aOM4mqmpaUtWrQo
NDRUvLimD7hGT548QZ2obgaiEzVixIhLly4ZV8mDBw+CgoImTZpE5KTc3NyY
1nVclDBnjZxiTmc9nBUkTS+vFdrJMN3qZSRChLnAvJgoMsdcEZ2/fWeQRGJv
ZeW00WP7+uM8I8TzToojwhRa8AkzfZ/4vI0/bd57gtWNYevxy7bwS5f4Ziq0
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
3KMfibMj0XlsQ48LtbSCPFtqkJCAItn3OHWp5TRlQOIwWmNFhIhOB51zk3V/
4iLXeOqGJZc+YL2k7hWqFxZG6tXX0lvsiQ+VUMGJWjtFh9R5i+CVV/lvDXXU
Bkva7gOejOI01flWfGYzjXW0nmiU8nwuo9+nJKMfrKCddPplcjwiTB+TJk0a
NGhQSUlJVxsiQgXw3AUFBaEr1GuvvRYZGclo+DsZAtSJiouL6yhDTQxwZi5d
utSjI/HWW291kPHdWCcK71iYPpw9e9aMdKLA6Krqx0uWuFhZ2eE0UyKxt7Jy
wnXTWWAeumD+0vLySny/m+JMR4QIA2AcE2Xtn4m+QJtOKHyiOuYJKKxq4F2V
OO3x1jJRsGyPz123xmP/qTvkVz1MER916J/NHaPUJiA79NK9vUlFtsHZaMas
ICkqlkMP4Oy8cm98Buba4/flfK66h06UEF5eXvAiNgudKKbb+qnidFIR0FeY
xKon8USNUtybpZhOODMyQcwFzShFaRqfyfw/UXOFIqwUXVutLNwWND2l/P6J
LlvC6Dzag/WSopufat+LZg9Kw4eqH6s35fkyFedIN3VD33UR5gsdjA37+FCN
dcTpiHcZ4ugaudO/6GY2BpYWlhdWIGtmju3gQvM+ILvTdiwxxebOa240Yk6q
ZjDT1MAc8EbzhA5RbBMxe3Xui5/NDczsf1Gqe/GBh/VPlaoV3abTFSGiU4CP
TllZ2X//+1/kPSZNmlRVVWVcPYxCJ2rq1KntbKgJQw8T1VMB02Siuj3MUSeq
uvrhkiUultaE9jE5Ggqtmj9/eXl5pdJu8eUrwgxhvE8Ut8L5RHUgVHSiWAYp
A/mZlYcLtu8OhsfQ2spuk+c215h8wkHxXJCCFIo4leLq5r75RB7ajIrlrGCU
xuFY+EoV7lIZ3JaMDTEFewPCd+70P5VagSVnBUkPxF7m6HGHefOWBSZmqNJf
Ge0oEtWFTJTaNCc4OPj99983C50otLy4uPi9994bP358V5vTblDOVzELXvYR
pUIUF6DHePSl3HvBJ3Nxo6KgBpqe0we+4gir3iTRnjJurqZUsU+byChaVi/f
M4DTrXpZLdqO1bYSaInTZDqPjT7MFbp4EW6N3f2whBGZKBFmAbibmxuZhH2s
0rgdRucpQvNOhdBN9byyotCRGD6Jx+PzJ9Tsf2PgG+woc/iAJbJm/5N3mjKW
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
FMwYzERdvnyZMFEtNt2qK/Xuu+92KBMFxkB/rqvDN2vgeYbh1ogRIy5dutT+
9fP/mPv3qxc7u5CpGRecgtM6B+KNgNsVk0EnTXLpF8tECR4HSliBkpfidKKI
1rGFQiHKwj+LZONiw/T8MyzZ3HnCUAsVJx9yvToImoMKYc/c4lPfqm5Bs2bN
3dV8nHQRX/oN0Fq5/nZbxbDpKaafA2zxcFpsl8C8mKgt8TkrV60LPZrsFCJV
+Admbk0o2B+TvGyl28yZcy0tZ1lbzcFuZ+7cpZ5b9kSeTU28UfLTph02Nk58
hJ1EmRePExjnA+4UOe/0MVGsMJRiHXd0clqyYcOWXX4RwdFJIUfOhh8/v59b
wmMu7D92LuZqji0fD2iWOlGmMLIyAqavE2Vpafn1118LuxELCwsHBwf8NTIy
kqSJf/z4MayrOaTBqGzYsGE4vR08eDBRWgbAlHPbtm1XrlyB9b179xJJZKhH
qDOjVs+dO3egnoMHDwqv+HfffaeHidJlP5qEbh4E69atg43ITdna2oIlwsBA
qE1IG546dQoKx8TEkC3W1tazZs3C9ezsbEw3j28ZOEtQG2lOV+685cuXjxw5
Eqf88AnrwlzPIkToh3F/ceu4elq1l+EDBqPR2pm41vLQh5iF5203ANGJMtNX
fOcDXlhTpkxBj52xY8eKqlBtx7x589Rcoch6amoqKdZan6ilS5cawpBrhdbC
f/7zn8G2jmOiYPTVzXSiOgHKNwgyUZxPFMoCs0STtT2RUtGvACwyUfxehHVS
aEPhdlJf+aP69Mr6jIo6fql8nl7JruAnLJkVz9MrnmVW1lc9lTPCBHkCk1o7
QmhV4XZ8l7Vx/GZ0/9NaezqhkrY0bfi+5sVEbY3LWb7KFUPekKgJPVfgFxBh
Y+Ok7HMsFf0PxzXNnbs8t/BuxLXSn/0PKPoTJ9K9SCS2NlasAyfSU/qfeiiA
3lO4Pst+wY49IftPpnjGFyw/VLDycMHa40U/RuTODs21C8q2D85xDM6ZGZhJ
zpgZ5c5TaY2mzU4nqqmpKSsrC/kKpiPnX4ZDjYmSSCSOjo7CAiT8B6wV+kSl
paXBjvb29h4KuLu7w1fYCAd46tQpjFzTdJuEr0KfKP31xMTEwEpKSoqwhmXL
luliovTYn5iYCFWdPn1a+CtK02RmZjIcQWRjYyP81dLSEp2X8BDOnz8/ZMiQ
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
HQeHxJ8LWXdu7c7DAQE/+PvW+poLDPwhZsHKDUknViVlrdmbGb8tBR602t5G
2edMmjhj6d5HAi/fczYkZDRTjOuog8KeYeHyDWGb8uCxmrxdPn/xGlRTr9+6
d8mBQlQ3+a3Inbmr8GROPsgJp376afLivY88RzXALMpEbKLMDtPxE6UjQg0/
zFoxZV5eSQnDAeMxBweHyMhIFgKTo759+yqUPj87dOgwduxYdmrixIkwKi4r
K1MolRj29vbMxmnBggV2dnZDhgy5f/++QulyH7JlMyB0ZMQc4/fr18/T05Ot
Jrty5YqLiwtTnvj4+PByhq+DBg3CoSPk7OjoyH7lnzJliqura2VlpUJ5Z+bm
5kJkZhHEK5d5LIeYfn5+3bt3h9zw65YtWyDmoUOHeO0Dp8RiMZzat28fhly/
ft3Z2Zlt1ol1gdkQfmV1wa+YNjk5GdNeu3YN0+JXSKiqiRo1ahSm5dpEQUtC
tqyaMplMJBItW7YMz+IiRNVqcsXjNjVcJm5Tr1u3DrO9ceMGtO3MmTO51VcQ
j8P8RAktiMFRvfrwvPTp0we1KNAVWIAplNFwc3Pj+XRq2rTpBx980Mhs58yZ
A1mx3XIZeO103DtPL+gyENJ7fyKRSCzMT5TRTPq5mVdVVRVdu3HrVu3SvLy8
vP79HrmHUqp6BqldOjds2P/QvLbor5uXLl+9dOnK5ctX9fipza8WOL585VIR
lALTt1s3SmAyy+aeHGOnYLTdwk8/vyBJVq0rieLb9y7VcuXypaLarC4V3btX
pqE9nmxr9EjXqqi5efP24UPHpkyZvSZu04ULcgyvUVRPT7ik9IpTq2vSvKdY
7eZcKeeKIdWh3GLlRl25WuLjfHbyTvljBlH0WibqaJgmyrvOqThXa+q3IhcC
A1bIBsXKgtecH7nhj/9tzBu7NX/qjj8jEi5E7jofszt3QaJ0eZIkfs+Z+KSs
NUk58XBcn8+qpKy4PZlx+8/3X5nru+Ts9IS8ZXFbBwQMY88yPN3BwWGDA0ew
nQ78/QaFho49ebYgeM05VOSuSpKNGzdt9OhJP/00mf194gejLV2zI3RjrWGV
/0pZ3L6z48dPr+0x+gXPnrNgfULa6qRTW/ZmLFy6LjBwOIQPGPBD4sHMH9ef
92noGkYT0USZnZ8omOxIpdL8/HyhxdEDNI3iwlbnNcw/FTWmRXL37l2RSNSz
Z89bt2q3ZoarXF5ejsfATz/91KlTJzT/ePDgARyPGzcOT3l7e+MOm3hj7N27
F/LZsWMHy9nHx2fgwIF4dvHixcyl9tmzZ+3s7JjncGTy5MnMoRMkhJzZ7ZqU
lASnuMsT/Pz8AgMD8Tg3N5dZ+CiUqh4QA2Zn+BXLZSovpqIBGSCca85x//79
mJgYtVsUicViqCz7ClLNnz8fkkOvjvlgXZjAU6ZMYV6b0FxKbVqFBpuoUaNG
4TFXE8WrJiTnVpMp3FAArCYcg3gQjee9fNKkSaxNoF7u7u7cRxvSMj0VoRYP
Dw9bW9unyjU33iHwDKIp1CuvvLJgwQKhhdIz7ClAP1FsNbq+aNeunaqD8Wee
eUaLPE9850IE6EtbtGhRVVWl9mVtTE0UE0lRJ/yjGbqe3GGpxYL9RCE5OTmp
qakG9RP1CNSmKBSFBVfQGIAtikGdD8cCoTYwbNSEmzdvK1PW/D2xMtAg8eGj
Uioe3J8wIUI5OR1WpyjjL8+BwP79h53Pk/+dGj2N11Wwjvrdlo9W49U9lA8f
Vt++eSf98LFp06LiVq7Ny7tQXV09KeGCcsMvbR8fpSecA7LaIVZK7i2f5edw
gzCt8XMnJXCrQ0Nx4m8aoYk6ozT1yam9zfDrshzfJWd9l9QujsOzaJLnu+xc
36VnveGD2+1BhBVnlZrS+ttirTjj88gtudSn1iOTbN6e/K2J+wcPHs5UT/18
0ONcMC4EHjVq6sbkjMGrzzJTrjEbzv2WdG7+LumC3TL4yz68r9zPvMSztRES
pXN3nem3vDYfKHrY6vPbU7JHjZoI/Vs/v6H+/oMHDgwJCBiqXBQcOGDQ8E07
D0zYeg6lhUaodbpuPpoo7mAAZgFNmzY1Cz9R3CGE0LLohOrQyzg6E15ZXA2P
eTWdLnGM88smISAw7XJwcHB0dBw+fHh8fDzXzmH//v0wyD98+DAcp6WlwTGM
ivGUj48P14vRoUOHYE509OhRdm/069ePGf9wjXb27t2rugRs7dq1kBxd4qvm
DPEhZxYSEBDAclYolWkbN26cOnXqkCFDOnXqpKqiYZoob29vVNGgDLjMEB/b
0tJSqDhTwXERi8VMO4Qy79y5E5KfPn06OTkZ68IiQwSoCwTi0jlIy9txEtNm
ZGQo6jRRXOtKrk0Ub+88XjWZBkyh2fQLqgmtum/fPm5Tr1mzBiJLpVI4hmZk
1lPYDpA5t20JQqH8QQ2eHbWmUJb0LsC6oJ8oLy8v/Wbetm1bVZsoLZoorkia
yMrKgnxCQkI0RTC+Jsr4WNIdqFCpjuH8RKm02yOFUnl5BXP0jYvgeH6WaieM
/kGLF616+LCaM0qs+TsffXyUmVfjAUdoeDx/r7OG4hlr/e1cfeyYKXVaMiYP
JK2s+9qYVuMf3r5dciT9xOJFK0oflE9NLMSZstZPDszx95+7DckP5Rb7LjkD
c/9+yuVRmj4wmeV7LCdvUUQdDdNEMQsf3+WPNDy4t53Pshw0l6pVNyl9SSlX
j+bUWu4tl/kpfaD5LzuLX5/oaV/NZ2nuo930ltbaRGG5U7cXbNh7asbseT+M
+KlOqzyoX7/gsWOnLonbErs3d2j8I41ZbaFKd+KqOWsXxruuImh/iCGQZOAq
2bpU6bzF8SNGjPZ5tMVn8JAhYdOn/rw+KWPi1gtYHDRIXfuYjSaKS2xsbOvW
rc3CTxQil8utrKzQ2sGMuHfv3tWrV42vC2Ll4lfuuhhTgzvhxb+BgYG4OdcT
E0I1r1y5YhbVJBrAmTNnZs+e7e7ubq+ELdarqKjo1KkTLrKLiIjo0qULhOBt
ADPTESNGYLRaO3MVfZG/EjxevHixnZ0daoQ2bNggEolkMhlXAJ4mCnJmNxvm
fPz4ca6Oi+W8bt06mBp37tw5LCzs119/BQG4Rko8TRQqXiB8/fr1qEpiAqxa
tQoG/AEBAQoVnXzHjh3RrIgJcODAAUgO00DIR7UuqOrBuojF4qioKO7ZlJQU
OJudna143CYKM+/atatamygoCKoJ1yI8PHzBggVQTWgursINvjJNFNMvYVOj
0kmteNDUPKOsoKAgCFQQmoHLnZmZqdalmEWybdu2f/3rX2gKNX/+fAs2kcVK
SSQSeMri4uL0m7mqJkq7TRRPKrVA99K8eXMtisHG7J1nFkB9i4uLudtqWAwP
6/xEwVVWa6zbmGw5B/yt4oBjRzOUe1oF1616C35kFqXcSs/fd8iQQT9Kc2V/
J681OsIs9CWmRv7888+QYaP6+Q/2+9tNeq2ZFtNNgXh7k1NUK/W3tI9T364M
V+g9VLDK1uaJduOJZ2+tOnIt/uh1+MQduabh81fs0evnr5ZC/PPXyyH+6iNF
WuKvOvoXJNlz5tajQgnicRrsJwr1Qhw1Tg4qc2oVNehFX3kWtU9oHOVdp7ny
fqRxrXe5fZfV2kT1XSqDfFCzhDZXgStls3f9uWrv2Y17T8ZvT92w69im5OyF
e2Rjt+b7LMuu1YzVuu7PUdoynUP1bK12qE4bxra906IRUpYorbMBy/FfVqv+
hZCAZbmTd+StSJJu2nMsbtvBjbuPbkg+E73n/JB4Gda0r7Ig7TsRmKwmykyH
ambnJwrBKScu/zFmy/OmulOmTOFNPE2ZQCWaznKbkbvKCcInT57M7DHM9D4n
1JKbmxsUFCQSieAAQ+Bad+vWrbKyEv5y92DiKTFQX8R1V8K1XOIa7aSmpsLx
5s2bueWOHz8eAm/frv0dk5fz4cOHeTqufv36+fn5Keq8UfXu3Zu5j75//z5E
Zpp/3uPJNKgoA/OPpFD6E37rrbfUKmFgIhAaGsoNQUUWlI75bNmyhXt27Nix
EAjzI4XSYzk3LSrBoHnRP9X3338fEhLCniBIYmdnp6qJwmp6eXmxapaXl0PM
mJgYtdWEZh86dKiiTuvFa+px48Yx8SCmqiaKbKK0w/xEWXbX91DpNwweNLTe
6dixI8wBhRbKjOFqopjr8sbYRM2ePRsygZ5TS3KmiTLOvcotxTglZmdnW5if
KIGoM0ZSXrT7ZZXbt+2uMzQaxPH3W6uJGhAwTCI5U11Zw8+Bv/zNIMBtdf58
/uDAEXUWUIOY63JcQrg6fsPdknt8SR7WfQwo2EPFw7rbXltBNUwijkZLS7s9
ui41TBVl4IoQ5kUDV+cpTZ5qF5090t7UGgvVrstTrgati/DIhMlHaQH1SHPF
Ucgw/Y/uH59Htkm4GLDWIMpbRXXzSO2jVIKhM6tHgTponJ6sdmN1wZWGdfIw
zZtS2SVDuymIoLTgysVjM/VYDp2S2fmJgsmOVCplez+Z7GCbJxhvLmZ55RoC
3jbxWuAt/7Hgn8WfNlCDlJmZyUJw5RrTKaWnp8NXVEWyTd8UHH0R3gaqmiju
6jzuY3L58mUHBweuI/SamhoPDw9ULumYM9pEwTQETq1cuZJFRrWVpmVruDoP
DoqKihwdHZnOR1Gnn+nVq5dqE4nFYhcXF+7P7gMHDuzWrRurC3cDLKjLd999
x+qiNi2E4PHQoUM9PT3ZqT179ohEIiYVPJuoKIZqQjhWE8GVklybKOaZSsHx
E6UqHgS6u7urNjWDNFFPBBrQ1tbW4p11b9++HU2hXnrppXnz5mnq7S3vLYB+
ohITE/WbLWqieNvnadFE3bhxY9u2batWrdq9ezduA6F4vLXPnj0LPYP2PRxz
c3MlEgl0d/qqhS5Adzd16tRvvvnm66+/hn4eld4GwoL9ROG1hulDSkqKMfxE
1fK3PqSk5O6epP0DBzKFzyNNVHBwWNKeA2Wlxts5FFfnce98uOfTDh8b/sPo
uhV5tV5l/P2DAgKGrlq1/vbtEs5ET1c/5LqBq/wes4ZS1LAvdcZmOmdXf2hR
HsGnwTZRSiujR9ZNTB3EFD68rywEVUMN1AVxFEHey3L9lW6XONowKbeIRwcc
SfwWa9uS8gmVfbRJZY7v8rNMoeSn3BGPFVermFKqvFAkiIlOsRpeWdPQRAFR
UVEw3jALP1EKg/2kBS+O5cuXwzQQpm8w04EhLrNDCA8PZ452gbKysrCwsNWr
VyuUP/nBDOvChQszZ8708vKaMWNGXl4eDMlglAhZwRxt/fr1mComJgb3dodZ
FQzeMDA/Px/mdN27d4eJA0wzcZsPBC7K0qVLIYLanGGqyHJGsrKyfvnll759
+0KhCxYsgKEdhs+dOxd3q4dycasvCGH7dimU48DQ0FBnZ+cePXpMmTKFKSR5
bQunYNybkZExfvx4kHbEiBGsCG5d3NzcVOvC0k6YMAHTgrTsbERExMKFC7lZ
TZ8+fcWKFXiM28QzYTIzM9VWE5oXZugw1eVWk+3bheKNHj1abVNHRkbGxcVB
yOTJk6Gt4OqzC0QIC173kpKSLl26wPhSLpdXV1fDHRsQENC1a1em1oBAeGw7
dOgAtx/zPYs2Ubg6T7smCte4wW0DZ+GxunLlikJ5Ezo4OKxbtw4G2IWFhdOm
TeN6juKpRw4ePKjqgcrPzw/XZbRv3x7uWJiPQM47duwAUSEEbkLc4G/r1q1o
+4TlQs5oLKRQ3pkgw5o1a0CA33//HaoMU0XIWbWhcP+7kSNHwrwPIkO/BF93
7dqFZ7EuUDVeXXRJi97LoceAZgfhoaPgrc7DxbNwjaD9oZoymQwqAo2J1YTu
AqsJzxTks3btWlwpzF08Cz0Ar6mhMZl4PJsoSEuaKMtGu98/PLh165a/vz+q
SuDGe0pMoVgjoJ8oeFvpN39NmijVKwLd2oABA+AUM6B6+eWX4QVaVVWlKrCp
aQKhR7K1teWuQPx//+//qfW/R+iC4fxEqcK7oyorK+HFtDp+w+RJM8f8NHny
pIjNm3bk5V0wqAt63SmQX/59x+5pUyNrZZs4e8Xy+DPZsgcPKoWWiyCMSqNW
59HHwB+hNFG8gUFsbKyNjY1Z+IlCyWFCam1t7erq2visGFOnTu3YsSNMghYu
XNinTx+cNEEcdN6LfoMRmCLBRCkpKUmhNGCAyDDn6t+/P0yXIKaHhwdMzWCy
NmnSJFQBYdoVK1bAyBkiQDimPX36tJOTEyRftGjRnDlz3N3d4Ssz9IKZGkzr
YN4Hk+6QkBBI6OnpCTnDlBwVJigV1uLEiRMwlXNxcYmJifn555979uzp6OiI
7oi55aIkIDPbjP7kyZMwD4WcIeGPP/4ImUChzLsI80LzULlNPEyBofQxY8bA
BLlHjx4w/mf2J1AXiIB1gRsJ6tKpUye2kRam7dy5M6SNioqCtDBFRYUA5Nyr
Vy8dN+fSUs3ly5dDNaG1WfNyq5mZmcmaGsXjNjXMav38/OB2AjGgaiAPz8Mz
IRTsIT18+DBcd/s64BaC+4f7CMOFg6vP3WkOzsI9oH11HtwzTKdRVFQEX0Ui
EVorwWxlypQpEB+yhUDoHGCkzfVCxvXBy8sZorHVeXAMNyTeVAA8uXDHwk0I
2c6YMQPOQrkQmZkPcVU0FRUVM2fOhNIxLdy3MN1DP1G89oFHbPz48aGhoRgZ
HhNcFocRuHWBv/DkQrfGSzty5EgshaXF5Hfv3h0yZAgmBNkSEhLgeVT7eEI1
v//+e4gGMmA1IR/4ClXA5oVqMs9RXD/kIB7uS4hgU7M6kk1UA5DJZFlZWdpt
UUwcLeqL7du3v/3226j9mDt3rmmqOwwBq6NEIgkLC4uPj1foteJPtInCsm7e
vPnZZ5+xCNwk3bt3Z0qA6urqK8bl8uXL7AC4evVqZaWaWX9ERISqOyze6mY9
Ag1SUlKCRqcWdpcyP1EwoEpLSzNOcWqPoa+7c+feg/JqdekEpPZZgJsQZLt/
/z5HZpNQlBGEcSBNlCl/TMQmyuzQo58ofDWUl5fD/It5T4LAMWPG4M7mMBGD
mRF3nQ6+dvGHfpgQwdwKjXCABQsWwExq8ODBkKGizncK+lJWKDfnYi6RFUof
NT179mRfYfgEc22YZDGjC8iK7TiPOcOkj+Xs6OgIOWNkmGa6urrioAtCYBoC
k0FmEcTdFEzBmepCTJAfho7oEAbYsmULxIRptWpDQZXh1L59+/DrtWvXnJ2d
0epDobQA8fT0hOEWfoVBINYFI8NUF7fHwq/Xr1/v2rUrS8vbJv6hcnMutNCD
Y6gy81jOq2Zubi5aa+BZtaucsAh/f3/IE5oav8IAlSseNvXatWuZeNC2OH0m
TAd44nC3aPiLTwEDLuu6devgInJd1mtfqqPpLFx97uTlxo0bJ06cgDuNN6nX
ZLahpVCpVMpdAQ03IXclKRSkSW9QWloKVYaqbdu2rVWrVjADVc0cHrEZM2Yo
lD3D6dOnoRaqcsKp48ePq9YF+jdMCzJkZGSwtNwcIK0uS71YNVm5UE3uuj8o
Qu3cEItQbWpNTWphEzq9w/xECS2Inrl16xa8N5kp1IULF4SWyKLQcXVer169
VDU5jNmzZ2M06DFUczMyzz33nJubG+59wID3u2pMKysrA7WqRCJpYll+oozv
a+uJcKV4bCc74anh/K3FRFqMIIwGaaJM+WMimiiz8xMFcxmY7+Tn5+srT5gS
ikQiT09PZqENU110TQyMHj3ayckJLYVwoy7mgdPHxwfGOWxui+5r2A/6EOLn
5zdw4ED8ynVEA1NLOMbtrhhot4DzU5YzZg45g4RcUwFfX98BAwbg8blz55gB
kkJpfsDz0ILlMh0XKmGgDe3s7H799VeW8P79+3Pnzj1y5AiTn52C6aq3tzc3
cP78+ZAcZpowzFNbFxAY6wLTZFTrMebNmwdJIK1COazlbc4FFwLaHI+5Rhcw
S+VW89q1a1AEqybPYzmrJjY126oMI6MNBkaGerm7u3PNuSFkyJAhCsIcYHd1
eHg4L1BfmXO/qlVk6VKcdg2YjvoWTfLA4xkREaF7Vtyv8HhCWt3F06Lr03RK
e7gWDZ72UghNeHh42NraFhYWCi1IA+Hdb/h1x44db7/9dhOlVyhmCqV4mu4H
VlP0E5WQkKDf/HXRRMErWK3Oh8V/4403UNsMt59QCiguIMMrr7xy8uRJVoUv
vvhCNVrLli3125gMC/YTheAvRMbyE6WJGtPpB5SScBVQNQ8fqh8AaH/3EYRl
QJooU/4IqIni9orR0dHwsjYLP1G6zFwaluGcOXNEIlH79u1DQkLi4+O5Y/gD
Bw7Y2dkdPnxYoXTDC9HgtYunfH19mcWOQrlIB93FsJwDAgKY6120TULtR1JS
EuTDzIQwPu5djsvNYGbN9dR98OBBiM90RArO5lzI3bt3N23aNHXqVJCnU6dO
XE0Ut1wFxyYqOTmZt/BQtWUYMF0dNWoUNxCGwSBSRkYG6t+4dVEot7yHszAG
Q4MN3t21c+dOaChIq1DaRKEzHwaEsPjMEQ2r5saNG6GaQ4YMgWpyNVGqm3Oh
TZSqeNjUIAD+VMpdKIRA5ty2JYRCF80G3AC4skwqlTa+ILXhOvY29VKnKPTR
j7Hk8IihFZ8uAqs+2ty02iPXN7CR8KpD4/ank+LiYniToloD3tGqplBPz12B
NUU/UV5eXvrNXBdN1MKFCzUpfFiSU6dOKeo0UaagjAI+++wz1nt8+eWXqoK9
//77+m1MLhZ2f/KqY0w/UQoNowI8NJl2VroNfyTT3x9TkY4gjAtpokz5YyI2
UbGxsa1btzYLP1GIXC63srJyc3PTS27s5XX27NlZs2a5u7ujZxi2WO/Bgwed
O3fG3eFnzJgBx2z9CHcLLQDdxXB37+Lqi5YsWcJW58FIEmKybegRVI/IZDLM
ecSIEWzshPttqd2cS6FU+zg5OYFg4eHhv/7669GjR5k/FkWdiqakpAS/ss25
NmzYAOGnT59mef7222+DBg3iuhNnTQTT1ejoaK5NSEpKCpQikUggH2gunh4A
RILMUdUDaaExuYMEllZRt008Ny3PJTJuzgWsW7cOqxkWFobV5Bo78TRRTOGG
W9Jjq3KbmokHDYICMAkhITmiMRfg9oDrpd08QPcBqu46HB3NhNQGaommPbIm
8UJDQ+GW5uagi6ER/oW0uP+C2rTadXSquTV4LqBLQdpjEgzo7jIzM5nHP3NB
7V0HM1z0CvXSSy/BKEX3+8QiwWrCqxPe9XFxcfrNXBdN1NSpUzVpe1jCxMRE
kPPixYtNhFuXpwozi0KbKJ5ghrOJeqjct4K7SNliwLtxwoQJMMZLT08XXBJT
tJOsFaTmkTLKpAQjCGNBmihT/giuiTLTXlGPfqJ4YIPk5uYGBQWJRCKmKZo8
eXK3bt0qKiqcnZ1RJYWwzbmQJ2qimEYoNTXVzs5u8+bN3NLHjRsHheKqQNXN
uTRpom7evAmpvLy8mH6svLwcIjPVoiYVDciAm3axivfs2RPG/BCf1yAKpTaJ
59ITPfNA6bhxGK8u48ePh7O4ObJq2vXr10MS9E/F00RBEkjItYlC2zB0utW7
d29Wzfv37z+xmiC/pqZm4pFLZJNFR12K8fsxvUyH66sfKy0tLSgo0GURRGMG
5LoovvTFE/M30zeU4DA/UWbagCj2rVu3+vfvj4qC9u3bsz0mFCo3hplW09TQ
xWP5okWLeBoeXnw4QJ2PsKvzVItm2w1/+eWXqvE/+OADA7VqdnZ2E8vyEyU4
mp93M/AELtSghSCEgjRRpvwRXBOlUPaHZucnqqKiQiqVsnFp47t01CBxrYNw
5RrT/KSnp9vZ2aEnohMnTrBovB3GIR+RSMR2hVM8brnEXSV3+fJlBwcHriP0
mpoaDw8PpgDhqUfU2kShjgvGOXBqxYoVvMialq2xbeKLiopgeM+sj0Dgbt26
8Tw+cTVRLi4u9+7dY6/RAQMGQHxWlzFjxnDr4u7uzlRwLC2LMHDgQAjBYxDG
09OTFZeUlKRWE4XVXLlyJZMKq4k2UQoVj+VM4fZE8bhNjTnT6jzLo2G9RH01
To3vi7TkvHbtWpjRmLWOVJOBEw3L9Qv0b7a2tro4mTdZdu7c+c4778AN/+KL
L0InT3cIF/QTlZiYqN9sdbGJwt8Budoe3t/XX3+9qqpKodRE6V/B1CBQNmY1
ipooo9lEWbCfKGxPmD6kpKQY00+UWfQGZiEkQRgB0kSZ8scUNFFAVFQUvIjN
wk+UQk8/2fOmPyUlJV26dAkKCvrzzz9hEAXDvICAAGdnZ6a9gUD42r59e+4m
xQoVfZFamyg2c9y2bRvaIF25ckWh3ErYwcEBvsIbHMZs06dPF4lEBw4c0JKz
Wk1UcXFxhw4d+vbtK5PJIOcdO3Z069YNQsaPH48b/EG5dnZ2MI3FcrnbxEdG
RoIMMEIDAX7//XdHR8evv/5606ZNqi3WsWNHyGTkyJHZ2dkQefbs2SDPrl27
8CzUBdJiXS5evDht2jSoy/79+/Es7p3H0s6aNYubFrcFXLp0KTT79u3boZ3h
WvA0UWjfDu0P1YRxHasmhIwbNw6ruXXrVm7zskWIqk0N4kFMJh6vqaEsuBNI
E0WYDthToSYKNw4gCIsEu3pmCgWvFa4p1FMOG7Ggn6jevXvrN38tmijuWOv7
77/XpPAB2LazpqOJQmCcg4Kp1UQZzibK4jGynyjjY0ydku7+AeqbJ2nGCKEg
TZQpf4TSRPF6pNjYWBsbG7PwE4WSy+Vya2trV1dXPWZ76NAhyNDe3t7Ozg7+
9ujRg6v2gQiRkZEQvmjRIm5CTZoo5mjF39+f6TSuXbvWr18/5sGprKwMd3BD
OnTowH2Vq677g4RqNVEKpf/zXr16iUQiyAdGp2fOnImJiYFjHBMWFRVhuWg+
xNVEVVRUQBxMCH87duz48ssvb926lVtxPBCLxePHj0fX0JCVg4MDFMGicesC
ZyEfrAsmh7QTJkwICwvDCDC5wLR49u7du0FBQXgKZtmJiYmDBg3i+olCmyg0
l4JqYkyoZk5ODty0UNyMGTPgLFaTGYNxqwni4b6EeHFBvB07djABeIZtClqd
R5gYeKOuW7euiVITRUNKQjsymSwrK4stZDY1tBj+7dq16913321CplDqYK0h
kUjgfRofH6/Q6wRTF5sohXKl/KeffqpW2+Pm5lZdXY3RTGTvPMbatWtRMCNr
ompqakpKStAm3MLuZ+YnysnJKS0tTWhx9EAD1tc3wJOhfm8DHXOzsHuPMCNI
E2XKHxOxiTI7DOQnqqys7OzZs6mpqTk5OeXlj10UXBojEonQ3kYtuvhmgVPX
r1/nThBu3Lhx4sSJ3NxcXWYN2l8lMPsoKipica5evcqWqqmWy6W0tBSqfPny
ZU9PT2jY7du3qxYKI40ZM2agwBkZGWotsSHw+PHj586dw02cGWKxmKU9ffo0
puW9xGFwe/HiRV1aQCqVcleS8qoJmUM1mSaQ22JQBIinY1MThKmBmigfHx+h
BSFMHeYnSmhBngC3fy4uLh4wYACqBeBVe/78eQEFezrRURMF3L5929/fv1mz
ZkyT8+KLL06YMAHX5SFoE2UiyigQg+3LYGQ/URKJpIll+Ykypi9BY6KpLjCu
hoErXEfVcW+FkoYZHWlydqd2KlFfl+xsDMw9tqSLRZgRpIky5Y+JaKLMzk9U
ZWWlVCrNz89vZD71igYTwLCwML1k24Acnuhf5YkeXNXmzAtEq3uuTRSDaaJU
i1Y86U0nFosjIiI0pdWUShPaX6naK2449z4EYWjWrVsH86m+ffsKLQhh6nh4
eNja2hYWFgotyJPBd8euXbvef/99ePu88MIL0dHR3CXwBIO9p9BPlPYNQxuA
Lh7Lue9KmKFv2bJl6dKlcPlU94YztdV5zCYK987jYThNlAX7iUJycnJSU1ON
6SfKQPCG0/A3Ly+PWewjP/zwA3cjZl9fX+6GO7zRKdcyX6HbWFQt6NxVVbOk
Kr+mUw0rlyD0AmmiTPkjoCaK22HCwA9GHWbhJ4qJbejulJs/DPlGjhxpZ2cn
lUoNkb9qoOEUJtpzZpoo1WhisRjX+tVLiYd/O3bsyHxHPFESXbJVDVSr2mpM
M9L7mjA1du7c2bJlS95KUoIwX6CbvXPnTmBgIOo9RCKR6dtxCQu+mNBPlJeX
l34z190mSnXOrhrn4sWLTUzSJqpNmzaqEQzqJ8rChhO86lienyis4M2bN11d
XT09PaFqZ86cOXHiRFxcXNeuXZ2dndlmEN7e3rz9brhMnTqVuwFQg5kyZQrL
R/fhq4XddYT5QpooU/6YiE1UbGxs69atzcJPFCKXy62srNzc3BqflS49NoyT
g4KCGvb7o+56G32p1xr8gwic6tWrF4wotmzZohotNDSUOfysrz4Q0rKfI7kN
Xt9fiBpm6KUpgmrp9OImTJOGPS/EU4tMJsvMzHzw4IHQgmgEb+A9e/a89957
TZRru2CqxVwMEZrAdpNIJOHh4TAv1m/mmjRRrLeBEu3t7T/77LPP64CRGP4F
vvzyyx9++KG4uBgjm5qfKJ7Hch6G00Q9VDrhV7UZswDwxpgwYYJYLE5PTxda
HP3ARrbLli3j7UAEwFc7O7t58+bhV55D13qVouWrjml1XGJAowVCWEgTZcof
wTVRZtpB6dFPlO4t0OC2eqKlU2NozOtMFdREbd68+YnFGdMmTb+RCYIgLBvm
J8pk+8aSkpLBgwc3UWo8YGZHplCmgHabqKVLlzbRbOPEwuFqVldXw42HNlEm
goB+orKzs5tYlp+opwTc5ubChQvcQLix582bt2XLFvyKNlEymWz69Omenp5B
QUE7d+5kkWNiYuCpYbklJiZmZGRMmDDhu++++/HHH7OysrhlwdlTp07h2REj
RkgkEnZ27ty5y5Ytw9IjIyPj4+MvX748efJkGLEPGTKE59n13LlzkImfn19U
VBQIBqKuWrVKz01DEPWBNFGm/BFcE6VQ9mxm5yeqoqJCKpWyzZ31O9g2tUXW
+jXX0W4ThavzNm/erPdqmuyEyGQFIwhV6HYldMHd3d3W1pYtITE19uzZg16h
XnzxRZguqXqFovtcO+gnCqau+s1Wuybqs88+06Ln4R6jeQzPT5Sw9lECaqIs
2E8UPqcwfUhJSbEAP1GKx3ue+Ph4uGrDhg27dOmSpjje3t6enp5dunTx8fGJ
jo7u06ePSCRKTU3Fs1w/UWKxuF+/fp07dx4zZkxkZGT37t3bt2/PDK7grL+/
P+SDZ3v06ME9C6UEBQWxPCEfFxeX4cOHQ4kwaAch9+/fj2czMjIgKzg7adKk
H3/8EY5BJNx+WkH9KiEQpIky5Y8paKIAGArCi9gs/EQpaImKYcCW7N27NwzY
Nm3aJLQ4BEHwKSsrg8nd9evXhRaEIOoHe1PfuXMHTaGaKI1nyBSqXrBmRD9R
8L7Wb/5ff/11ExWV0bPPPotnP/744ycaRCE4LzYpP1GAUJooi8di/ETxJhTw
wu3fv7+9vT30VF5eXrNnz05KSuKtsvTx8YEIbJefu3fvOjg4zJo1i53laqIg
ZnJyMhYE73FnZ2dfX18slHsW4J3l5oMlrlu3Dr/euHEDSmROXP38/Hr06AHd
LJ7dvHkzRA4MDNRvQxFEvSBNlCl/hNJE8frb2NhYGxsbs/AThZLL5XJra2tX
V1ehxbEcmCYKRhQwyhVaHIIgHgOe0E2bNjUxwPSTsDxkMllWVlZFRYXQgjwG
zOPYBnkwraMN8uoLG7lJJJKwsLD4+HiFXn+Pa9euHdPMqNpERUREqFUrcW2o
4O+nn36KN97FixdNRw3VRDg/UXCfl5SUoAbDwn48ZX6inJyc0tLShBZH/1RW
ViYkJPzvf//r3Lkz7p0HNY2MjCwvfzRr8/Hx6d69O/eyenl5DRkyhJ0dOnQo
HkNC3r638+fPhwxxNYpYLMazLCs8e/XqVUWdJopppdzd3bmdp7e39+DBgxVK
6zs7O7sNGzZwXbl6eHgMHDjQEI1DEDpCmihT/piITZTZoUc/UQQX1ESRTRRB
mCCbN2+Gx7NXr15CC0KYOsxPlPGLVjvXvnPnDszOcMr/7bff5ubmaopJCIj2
1XlVVVUTJkx48803n1UC4byDF154oUuXLvn5+Ri/sLCwmSmxZs0avOW++OIL
VRWZ4TRREomkiWX5iXpKFiZwPWPU1NScO3du/vz53bt3t7e3nzJlCsbx8fFB
LRBrh8DAQF9fXzz29vbm2kSNGjWKm39CQoKdnd3p06c1nYWCTp06BceQ4dCh
Q5kmiq3UQ+ArlpicnAxJjhw5wj07YsQIsokihIU0Uab8MRFNlNn5iaqsrJRK
pWzAQzQebNg+ffrAkGnDhg1Ci0MQBB/URJFNFPFEPDw8bG1tCwsLhRakFpgf
tWzZsonSK9SsWbNwgzzarrQBsOZCP1EN289XC1ybKKRp06bPPvuspr19WaB2
/5P6FbIB8HZaIT9R+iUnJyc1NdUy/EQxqqqqMjMz0UMU9x4uLS3t3Llzhw4d
IIJCqRcaPnw4NwJXE8W1iRKLxVFRUdznKCUlRSQSweQLz0ZGRnLLgiaFewb9
lnO1T1giV1SmicK1eFw9P/wlTRQhOKSJMuWPgJoo7vghOjoaxhtm4SeKa3Qq
tCwWiJeXVxNanUcQJsmWLVugo/b09BRaEILQCPfVXFJSwjWFkslkmmISOoKN
hn6i4H2t38xRE9VUCVPRNGvWTL+lCAW737744gtjaqIUFner86pjMX6iFJwp
RnV1taOj48iRI1XPTp061c7O7ubNm4q6vfO4cXiaKLaqTiwWh4aGcmNu2LDB
3t4eNXjcsxh//fr1cBZL4fqJgsxZiTgVCgoK8vPzg6+HDx8GwXiLGlxdXUEk
C7sDCfOCNFGm/DERm6jY2NjWrVubhZ8oRC6XW1lZubm5CS2I5YDvKXirwogC
3oBCi0MQBJ+tW7fS6jxCF2QyWWZm5oMHD4xcLvcXruTk5FatWsEd+/zzz8+a
NQtNCHgxifqC7SaRSMLDw+Pi4vSbOa7O49lEPfPMM7dv3y4uLoa/JSUl3OPi
OlggNwQjsGh37twpEQ4mFQDD3SYqrtQNp4mCSwZF8zxdWwbMT5RYLMYNE80a
3m/c/fv3h3pdu3aNF8fX17d79+74tV42US4uLtzbYMCAAczbLTvLXeUHISwf
1ETBWRilh4SEcEWCU6iJunTpkkgkGjNmDDt14sQJOzs7nk0U9b2EkSFNlCl/
BNdEmWmPRH6iDAHcDH379qXVeQRhmuzevRum9uy3UYLQBPMTZbRXPLegu3fv
wl2KE/xvvvmGmUKZ6Xjj6UGtx3KexkZTuGoE0+GJMjcxpCYqOzu7iWX5iXpK
yMzMFIlEbm5uv//+O3RiBQUFqampQUFBdnZ2sbGxGEetTRTqhRR1/p3wWCwW
Q8KRI0fC/QBZzZ49297efteuXewsfP3xxx/PnDkDZ2fNmgVFw1nmG4r5iVIt
cciQIUz3FRER4ejouGLFCihl48aNLi4uXbp0odV5hLCQJsqUP4JrohTKwaHZ
+YmqqKiQSqV5eXncQKLxoE0U2x+WIAiTgvo6Qhfc3d1tbW1hRmP8oo8cOYJe
oZ5//vmZM2dyvUIR+gL9RCUmJuo3W54mql46pfrGNzXIT1QDwOcapg8pKSkW
5icKSU9P9/LyEolE9nVA18r9rVbL6jxoHO6qOicnp3HjxoWGhmI+Dg4OMTEx
LJVYLJ4wYYKms1zbKi1+ooAHDx7MnTsXd/rz8PDYvn07JPzxxx/12SgEUU9I
E2XKH1PQRAFRUVHwIjYLP1GKp2bbDkEgTRRBEATRMOCNnJaW1rRp03bt2kml
UqHFsTTYgAf9ROl98wJdbKLMlCfWwqB+oiwbS/ITxQMdRsnl8jQlf/zxB6rW
G4CTk1NERAQc3Lp169SpU+gAitGxY8cZM2YolBtIZWRkNF6tV1paigcwqp8/
fz4e04yJEATSRJnyRyhNFK87io2NtbGxMQs/USg5vBesra3ZCmui8XD9RJEm
iiBMCl32qCIIhkwmy8rKqqio0EtuT7zreBGSk5MbPF8jtMDaWSKRhIWFxcfH
K/TaJ1iwJoqHaqUMp4mqqakpKSlBB0EW1oEzP1FOTk5paWlCi6M3VH/vhouo
aNzlE4vFqIlqwFkdKSsr8/PzW7JkCQv5448/HBwckpKSWIiF3YGEWUCaKFP+
mIhNlNlBfqIMAfpChIZdu3at0LIQBMHn/v37hYWFPAeqBKEK8xOl95zZREbt
jIamOWYN2ztPu9LGIjGcJkoikTSxLD9RtDChAWjRNUEbduzYkZ1tTJOOHj26
ffv2EyZM+P333xcvXuzm5jZkyBBmH0UQgkCaKFP+mIgmyuz8RFVWVkql0vz8
fKHFsTR8fX1hyLRmzRqhBSEI4m+w34OxJTye7u7uQotDmDoeHh62traFhYWG
yPzs2bNwE8LM/eOPP54+fTpvUzzCcLApKvqJSkhI0G/+Fm8T1axZM3ZstL3z
LNhPFJKTk5OammqRfqIQ3p56DSM0NFTLj7xhYWF6GXiXl5dv2rRp1KhRrq6u
gwcPnjt3bllZGZ4inSEhFKSJMuWPgJoo7lqP6OhoeCmbhZ8oJjZ1qobA398f
7oTVq1cLLQhBEHxQE+Xh4aGgUSVhLHjLQvPy8lq3bn306FGF0uEJvDLghsSl
K7wkhCHAtkU/UV5eXvrN/JtvvuEqaixJB8XQVCmD+omysCeCVx0L9hOlR3S/
Bxp5t2g3WyUI40OaKFP+mIhNVGxsLIwtzcJPFCKXy62srNzc3IQWxOzhvapg
WgEjCtJEEYQJsnPnTng8YdgvtCCEqSOTyTIzMx88eNDgHPDVcO/evevXr3MD
w8LCuH5INm7c+Oabb549e5ZmPcYB21kikYSHh8fFxek3c4u3idKC4TRRcMmK
i4vRT5SFwfxEicXi9PR0ocUxLdS6djRoP0mdMGGakCbKlD+Ca6LMtOMiP1F6
B+8E0kQRhAmCjydqonr06CG0OISpw/xENfIVP2/evM6dOyuUKinMqkuXLocP
H4aDGzdueHl5ubu7FxUVJSUl8baCIswRriaKYTGaKKwIs/Uy2uq87OzsJpbl
J4qoLzr2w423htJ9ZxMznf0R5ghpokz5I7gmSqHsjszOT1RFRYVUKs3Ly+MG
Eo1n9erVI0aMOHXqlNCCEATBh2yiCB1xd3e3tbUtKChocA74Vq2qqmrbtm1I
SIi1tXVOTg6EBAcH//rrr1u2bPnss8/YbxaOjo6JiYn0IjYa6CcK2ly/2cK1
5qlo4LhZs2apFsHBgwfx4N///rcxNVEW7CcKH3mYPqSkpFiwn6jGUF+lkCF6
UWPaZRGEKqSJMuWPKWiigKioKHgRm4WfKAVt20EQxNMH9HX79+9v1apVYGCg
0LIQFg57sd67d693794wZz9w4ACGHDt27JVXXunevTv+dMUMpfbs2SOUtE8P
7Lqgnyi4NPrNX3V1Hvx95pln9FuK4Hz55ZeqFlMG9RNl2ZCfKIIgHqfWdeTD
R/8Uh88VT99ZMI0+JvmZ+rt85i75leIHRtao8IqLjY21sbExCz9RKLlcLre2
tnZ1dRVaHIIgCGNAWndCd2QyWVZWVkVFhY7xVe+u27dvQ+DJkyfnzZsXERGB
a/SQ/v379+3bt6qqim3pCLN4rk8qulcNBGtYiUQSFhYWHx+v0GtrkybKENTU
1JSUlKCfKAt7NJifKCcnp7S0NKHFIQjCZHgI/UM1O66hj6l+qmsUVYrag1r9
4UO8cALYRJkd5CfKaFjYwIkgCMLiYX6idE/CuvrMzEx7e/tPPvnknXfewT3y
YCrdrl27xYsXY4TKykpvb28rK6uxY8cOGDCgTZs2ubm59KawAEgTZQgkEomF
+YmihQkEQWimBm2iCHPBFHpxs/MTBSNhqVSan58vtDhmD40iCIIgLAwPDw9b
W9vCwkId47MXwdGjRz/88MPMzEw4TklJeeONN65cuQLHOTk5cCyXy1mSI0eO
LFq0aNeuXaovEXqtGAjWsOgnKiEhQb/5kybKEFiwnygEOofU1FTyE0UQRB11
q/MUZF1j6uD1qcH/H9YFGeWqcXdYiI6OhvGGWfiJYmLTWNcIUDsThOlQVlZW
UFBw/fp1oQUhLARVT7aOjo7Jycn49d69ey1atOjevTt+nTVrVufOnbW8Eehl
YQSwkdFPlJeXl34zJ02UgbCwR4NXHfITRRDEY3B6iIcPLa0DtDhqmM6QY+1q
bCFiY2Nbt25tFn6iELlcbmVl5ebmJrQglozuu8ESBGEEdu/eDRNDFxcXeioJ
7chksszMTK7vJu3AHTV37lw4+M9//nPw4EE4KCoq6tix4759+2DaDiMECKmu
rnZwcAgMDAwICNiyZYvhhCe0gM++RCIJDw+Pi4vTb+akiTIEcMmKi4vRT5SF
wfxEicXi9PR0ocUhCIIgGoKAU34zndGQnyh98emnn/773/+G2ccnn3wCB58o
+VjJh0pWrVoltIwEQdT21bt374Z+z8XFRWhZCFOH+YnS8RUfGhrav3//mpqa
FStWFBYWXr161dbW9tixY3Bq/fr1//d//yeXy2/dulVaWvrTTz+h8YP2RXlm
OrR4yiFNlCHIzs62MD9RBEEQWsClXmwYQKMBkwZ9lSsUj3n3Mu41g1vF7PxE
VVRUSKXSvLw8biDRAP75z3+m1XG0jmN1DB48eN68eULLSBBELUlJSaSJInTB
3d3d1ta2oKDgiTFnz569b9++zp07V1VVscBvv/32wIEDeHz8+HGRSNS8efMZ
M2YYSlyinqCfqMTERP1mS5ooQ2DBfqJw7A3Th5SUFPITRRAEH5qdmz6PLaUU
7IJFRUXBi9gs/EQp6IdXvfLaa6+pDUcPUVOmTMElGwRBCAh2dHv27IGOulu3
bkKLQ5g6uhtanzp16pNPPvH392chBQUFrVq1YvmMGjVq79699+/fN4ykRD1g
FxT9RPXu3Vu/+bdt25arhkIsRhPF/F5+8cUXajVRNJ5sGOQniiAIvdPgDllf
C83qm4+q401NEfT7rjFTrQhP1NjYWBsbG7PwE4WSy+Vya2trV1dXocUxe159
9VUtZydNmkSaKIIwEfbu3QszxK5duwotCGHq5ObmZmZmVlRUqJ5SHaiMGzfu
o48+qq6uxq81NTXvvPPO1q1bb9++HRkZ2bFjRwgxuMSEDrBrJ5FIwsLC4uPj
FXodeTJNFBeL0UQx1GqiWrZsaaDi4PEpKSlBP1FmNE3QBeYnysnJKS0tTWhx
CIKwfNT2oibYtRpI70SYCOQnSl+0aNHizp07Cg2638DAwNWrVwsjGUEQj3P4
8OFWrVr169dPaEEIU4f5ieKF8/p5PKisrGzdujXX/XV6ejrk8Pbbb48aNUp3
t+eEucNdncd49tlnhZZLb+ANb+TVeRKJxML8RJnpT/AEQZgjmmyTNHU+D+uo
V/6mALempiOVcTA7P1EwcpZKpfn5+UKLY/aIxeKTJ0/iserowtHRMTMz82l7
HAjC1MBnkExTCF2A+8TDw4PrJ+qJA5tTp0699dZbV69eVY1P/b/pwK4F+olK
SEjQb/5t27Zt+jhNmjRp1qyZfksRHK5NFHOHZTibKAv2E4Xk5OSkpqaSnyiC
IAwEdzSiaSSsqn3SfSSj9kc6TVRUVFRWVjZMeLX56zjKsrwhGbdG0dHR8CI2
Cz9RTGxLuhYCMmPGDJizKNTd4enp6e+99155eblgwhEE8TjU7xE6cvHiRZge
ckNOK9EUf/z48T169FB7il64pgNeCPQT5eXlpd/MT548uX///n1K9is5cOBA
SkqKfksRBO4I5/jx41g7rCb+NejiMgt7fHjVIT9RBEEYDm6HI5fLHRwceG+l
uXPn2tvbz5w5kxt47NgxkUg0e/Zsbj5alDmabK5UNUje3t7Dhw/Xol9SDdRU
tHZDL7X5qEpuGcTGxrZu3dos/EQhcCtaWVm5ubkJLYjZU1FRAS05aNCgoqIi
7kO0Zs2ad999d8eOHcKKRxAEQdQXmUwWFxf3zjvvXLt2Db5evnz5m2+++fbb
byHEy8tL9SdF6PPhXWBjY7N27Voh5CV0BV/TEokkPDycu6CSMFngkhUXF6Of
KAuD+YkSi8Xp6elCi0MQhIVTUlJiZ2cXExODX7EL8vX1FYlEHh4eXEXN0qVL
7e3t9+3bp31xXwM0PD4+PiNGjNA9lX6VSLoYd5kX5iizgvxE6RWYqgQFBT37
7LMwSWnXrt2nn376wgsvWFtb79mzx0xvD4KwMPBJLC8vLywsLCoqElocwkSB
+wQmvNevX//Pf/4Dr8hBgwb16tULwjt16nT06FE4KC0t7dChw8SJE9UmP3fu
HKRlWXGzNbzshElgqQszBaxLdna2hfmJIgiCEITq6ur27dsPHDiQWRnBHNbe
3h5GO/BXLpcr6nr7kJAQCLl9+7aOa+64aH8P+vj4DB8+XFOqelEvkbT4xapv
uaYGVMHs/ERVVFRIpdK8vDxuINEwsPVg/gL3QEJCQlpa2tWrV7UbMRIEYXz2
7dsHM5rOnTsLLQhhusybN69Lly4eHh5t2rT5448/Pv/88yVLlowaNYpFgO79
rbfeysjIEFBIopGgn6jExEShBTFLjDyqsWA/UdiSMHRMSUkhP1EEQRgCXo8d
HBzs6OhYXl6O4Tt37hSJRFlZWfB3/fr1GKe6utrJycnf35+lyszM/OWXX/r2
7RsYGLhgwYLs7Gx2KiYmZvny5ZcuXZo1axbzU1RSUhIdHR0QEODr6ztnzhzu
T8AQMnz48Nzc3GnTpnl6egYFBXHXJoNU+fn5o0eP7t69u7u7+7hx4y5fvsxO
RURELFy4kDu/nj59+sqVKzFCRUXFsmXLvL29XVxcINtt27ZxWwBEgvc+VMrP
zw/qghbvFkNUVBRMcMzCT5SCfqs1AMePH4fH8LfffktOTq6qqlIbh5qaIIQC
n779+/dDR92pUyehxSFMF+jA27ZtGxISYmVlBTPEY8eOvfjiizC+4sZZs2aN
tbU1jHmEEpJoGOwtjH6ievfuLaw8BKEgP1EEQRgRmK7a29uzX9MmTJjg6ekJ
BwEBAWFhYRiYm5trZ2c3d+5chfK9eeLECQcHBxcXl5iYmOjoaIjfvn37nJwc
fKUGBgYGBQV9//33EGfKlCkK5Q92EKdr165RUVEzZ850c3ODXo5Zv/j4+EDk
Ll26wMHPP//s5eUF8hw8eBDPnj59WiwW9+nTZ9GiRb/88ou7u7uTk9P58+fx
LCTk2VNBQey3wmnTpnXo0AH+Lly4ELOF0RqeApEgrbOzc2RkJIrUo0cPJpI5
wtMqxMbG2tjYmIWfKJRcLpfDQNrV1VVoccwJtaqkK1eu/Pe///3iiy/gqWnV
qhVMcj/++OMjR44YXzyCIDRBmihCR+7du9e7d2+4T5YsWYK6ptGjR4tEIl40
/KmOfaUfGswCdpkkEgkMuePj4xV07UyempqakpIS9BNlYReL+YmCqZZBXb4T
BEEgWVlZ9vb2q1atUih7VxcXl8jISDj+7bffxGIxDns2btwIwx7WKU2dOtXV
1ZVteCeTySCHpUuX4tdBgwbZ2dmNHz+eGS9Bn+bg4HDp0iXs4mCmDKUwcx0f
Hx+Iv3XrVvx6584diMxco/fr18/T0xMCuWmDg4PxbK9evVQ1UTBIg4MHDx5A
PlgX5KeffvL29sbjiRMnOjo6goS4ZOnq1avOzs4okoW9VswF8hPVGLhrZjt0
6DB//nw4zsvLg+cUQo4ePfrhhx8ybyEK2jiJIEwAeAYPHDgA/R6M+RX06iE0
cOLECejSW7RoAbcKvCgVSvdin3/++YYNG1gcuHn++uuvt956Kz8/XzhJCeKp
QCKRWJifKFqYQBCEUFRXV4vF4tDQUIVy7bO9vT1uE3zq1Ck7Ozv4C53S+PHj
HR0dy8rKMElubi6zSlIoXUuJRKI5c+bg14EDB8JXtv7u9u3bkCdvmdj06dPb
t29/9+5dhVIT1b17d3YKiuvdu3dQUBCT5+eff2angMmTJ0P+d+7cUaiziYIQ
tImCCJDW09Pz1q1beAoGb3AMOYBIULXw8HBuwmnTpoFIFrMXhtn5iaqsrJRK
pTSKbiQlJSVfffUVNumFCxdcXFwwHB7hjRs3CioaQRB8UlJSmjZtCq9goQUh
TBQYtOC+eB4eHi+99BJblHf8+PF//etf169f504b2c9/hLnALh/6iUpISBBW
HkIXLNhPFJKTkwMzQfITRRCEcQgNDe3SpQu8EFeuXOno6IjamMrKSicnp99+
+02hXDIcGBjITQJxYGI7bdq0oKCgTp06QYfMNFEQs1+/fiymRCJBF+izZ8+e
OXMm/IWh1JAhQ+zs7HA1nI+PD5zlZg45+Pr6wsHevXshbXJysoLzvl63bh0E
wotAUWcTxR2JMZsoAF7rIpGoffv2ISEhq1evRgfsKBKEDx48GCSZrQRFgmzN
2mM2119WdHQ0THDMwk8UE9sc29zUKCgoYNqn/Px8drxo0SJcXUsQhOlw9OjR
li1bMmNdgmDvwYyMDBiTfPzxx+++++7x48cVyvlvixYtCgsLMc6oUaPQl4Li
cbNYIaQmGg5eMvQT5eXlJbQ4hE5Y2IPGqw75iSIIwpisXr0aBjwwbw0ODkZj
JGTkyJF+fn5Xr14ViUSLFy9m4evXrxeLxZ06dQoPD1+wYAGMpbmWS4FKWLeW
mppqZ2c3YMAAGDX99NNPo0ePhr9wDAcwa1YoNVE//vgjV56BAwdCuZDDhg0b
IOfc3Fzu2TVr1oA8qIn6/vvvQ0JCuGe7du3K3VMmJydn9uzZPXv2BBkgFS76
A5Eg2/79+4+uA0T63//+BwcwxtNHiwpPbGxs69atzcJPFCKXy62srNzc3IQW
xOxp27ZtcXGxgmMTVVNTA0/riRMnaO88giAIUwb75yNHjnz44YeZmZkK5Yjl
tddeO3ToEHydMWMG8yr24MGDzz//XNXYlXp48wKvl0QigRF1XFyc0OIQTwYu
GYyyLGYNBRfmJwpmeenp6UKLQxDEU0Fubq69vT28AR0dHVesWIGBqAiys7ND
zc/p06cx/ObNm/DVy8uroqICu6z79+9DSExMDEYYNGjQ4MGDWeZSqRQyR8c1
alcie3t781bYMZsoGIBBzps3b+YmGT9+PGR4+/ZthVIT9cMPP7CE8GqA+EwT
xf2V8Ny5c2j1JJPJ0AH7ggULGt90JoiZjkLJT5S+gCfxiy++SElJ+fPPP9u3
b3/gwAFXV1fuI0kQhOlgpj02YVBgMMaswWHC++abb77yyivwioTRC5waOHBg
QEAADI1gPKNp21+6rwjCQGRnZ1uYnyiCIAgBqampcXZ2humqvb19Tk4OC4eZ
LIRAuJOTE9sd+MyZMxC4cuVKNs5JS0vjrs6DMRJ32lteXt65c2cfHx9uiaGh
oW5ubuj9AE6p1URB/pcvX3ZwcBg7dixXVHd3d9RTAcOGDWPW6UBSUhJIgpqo
Q4cOwTH+pIjAuE4kEh07duz+/fvaRTJ3oOnMzk8U3GBSqdSsV0caH02tdPLk
yWnTpl26dMnKysrFxWXjxo2WcWMTBEFYKtxe+j//+Q967CwqKurQocP+/ftf
ffXVDz/8sKCgoLS0FAZFO3bseOJbkpbsmRHoJyoxMVFoQYgnY8F+orCvgOlD
SkoK+YkiCMJojBkzBjrVbt268UYs7u7uEM7VFBUXF8O4qG/fvlKp9MqVK7//
/jukgpDx48ejS/PAwECeAcaaNWtwc72//voLkixYsAC+rlu3Ds+q2kQNHDiQ
6ZoiIiIcHBzWr18PXSKMwaZOnSoSiWBUhmfnz58PWS1ZsgRe4jAwc3Z27tKl
C2qiSkpKOnfuHBwc/Oeff1ZXV+fm5g4YMAAioKtzEMnOzg4SMpEgWyaSBRAV
FdWkSROz8BOloG079EpFRcXatWvhcYMbW6FcwUFqKIIwTeDxhPeaWfxkQOgX
7psORlMw1vrggw8+/vhjGPNUVVUtX768sLAQ+vA2bdocO3YM4mzYsOHVV1+V
y+VsExbCAmC3AfqJ6t27t7DyCI7aESANC40M+YkiCMJoYA+/efNme3v7cePG
8c7OnDnTzs4uNjaWG7hnz55evXrZK4H3Zk5OTkxMDBxDZIVSE8XzQF5dXb1s
2TJHR0fICvVdMFNmHqq1rM4DysrKpkyZYl9Hx44duX3j3bt3cc0d5Ozj45OY
mAhFs9V5hw4dcnFxYWl79Ohx9OhRLJQnEkRbt26dWXvR4YkNl8zGxsYs/ESh
5DDAtra2dnV1FVocs8fNzU0kEvn7+3/00Uc3b95MTU39xz/+sWDBAu7v42Z6
kxOEhQEvKRjwt2/fXmhBCGGArjgvLw/efUeOHFEod8rz8/Nzd3fHLvrbb7/d
v38/Hq9fv/6rr75q3rz5jBkzBBaa0B/sXSyRSMLCwuLj4xVGHIWqWs0ZuejG
FKdjWkPUqKampqSkBP1EWdhoivmJcnJySktLE1ocgiAIjUilUu4vuVevXmXu
+3g9M369e/duRkbG6dOnS0tLVc9q58aNG8ePH5fJZGyRIO8s8zTOe5+WlZXh
bqTwt7y8nFcuCAzyZGZmQjQLe5uYHeQnqr6oNSTDFXloBAUTFvTPBnc4NCw8
sILISRCEJg4fPgz9nqOjo9CCEIaC21HfvHkzKSlp165dcMDCQ0NDlyxZwuJs
3LixRYsWZ8+eLSgo+PDDD1n4G2+8AbdKdna20SQnLBt2B7777rtwa/E2yIZO
CQI7dOigez71KvT27dtNlMC8QKHcXWjLli2HDh16Yg68hIIM3SUSiYX5iaKF
CQRBCI5a9ZHuMZmhhe4JGyOeLnmqyvn0dLBm5yeqsrJSKpXm5+cLLY7ZwHvu
ELjoXl5eGAjt2bdvXwyfNGkSc9H/9DwFBGGy4GOYlpZGmiiLB671xYsXhwwZ
8v777zs5OXXp0uWf//wn9Mn4k0HXrl0PHz6sUP6m1qdPn++++w5e3MnJybdu
3Xr33Xe3bt0KB5GRkW+++eZXX32FOw4TFgN7HaOfqISEBOPLwNVEMXkcHBy4
mijV8bPqQELHhXUYUlxc/K4SdE47ZswYKK5jx46a8mFp4XHgaqJ0KVHvWLCf
KAR/wSc/UQRBGBPVxTt66c8fclCbp44KIi3JtWSiPXNunhYwPedWJDo6umnT
pmbhJ0r7FSR0gTXd3bt3v/zyS5zgwF+Y4eKpVatW4eJZgiBMB9REwaRPaEEI
PcN9nS1ZsuSDDz6YNWtWaWkphp8/f75NmzZhYWFwHBwcvGjRoq1bt3722We4
OEuhtEhJTEyE2+PTTz995513Ro8ejUbd9Ja0PPCaop8oLy8v4wuAmqgBAwZw
AxtvE1Wv1XOoiRKLxWqTcwe3PE2UUE+EhT2JvOqQnyiCIEwEtYvH1apuGqa/
0vIbSr3eYo0vrr5ZmTixsbGtW7c2Cz9RiFwut7KycnNzE1oQsycmJmbixIl4
Mzs5OaHHchhXsEGFJd3nBGHWpKenw4BfJBIJLQhhEK5evdqlSxcXF5dLly7x
Tl25cuW9995bvnz58ePHX3nlFXj3QWQ8BV20s7Pznj172Ff4K5PJsrKyoD83
pvyEEcDrK5FIwsPD4+LijC/AO++8o2l1HrqwQwk3bdoEPdWrr74K8eF2PXXq
FMZMTU2FkQaEP//885988sm4cePQjcbly5fbtWvXtm3bw4cPw9+XX375q6++
+vXXXzFVSUkJnj137ly3bt1QBngQIHDr1q3Xrl0LCgpq2bIl5PmPf/zDwcFh
165dmJCnieKW/u9//3vs2LGVlZWGbjFokOLiYuaQxJJ4WOcnSiwWw+tJaHEI
gnhaMMLktDH6JcMpiyxvVm6mNSI/UQ2Gd8Xnz5//9ttvv/nmm/b29jDTgbHc
Bx984O7uXlVVJZSEBEGoBWZzH374Ya9evcy03ya0A9NV6ITXrl2r9mxycvK7
77774MGDAQMGeHt7MzeYv//+O/TbPKUTvBzhFQnTdoMLTTxloE3Uxx9/7OPj
A/ehjxIYQnA3U4iIiICvL774Ys+ePZ2cnOC4WbNm+/btKyoqeu6553CnZojz
ySefwHFoaCgkuXDhAqqMXnjhhW7dunXv3h2SwFc0z75582bTpk1RoTRy5Egb
Gxs4hqELPAupqalWVlbw9dtvv42MjPTz82uq5Nq1a4rH/UT99ddf3NKhCqx0
g5KdnW1hfqIIgiAER1VTZCJj4ycuTtcev74RTKTWjQGqYHZ+omAQLpVK8/Ly
uIFEA3jjjTdg4nP48OFDhw6lpaWlp6dfuXKFG4HaliAIwjgkJiZCnwwTdhbC
7YFFItHixYurqqr69u0Ls++xY8fCTPzLL79U1Th5eHjY2toWFBRQB26RoJ8o
uFuMXzTaIyGoHWKgJgru3ubNm8NXJt64cePwp8OkpCTUSiUnJ8OdCcPO6Ojo
VatWKTiaqFmzZmGquXPnQv7//Oc/y8rKeKZNcOez1Xk3btwYPnz4iBEjYOjC
dQyFVoJcTRQrfd++fVh6VFQUlm5QLNhPFHYv0JIpKSnkJ4ogCGOio/tBPeZv
nPhP57ANXsf4O5HQguiECeo/TR9NRoYw/NMSnyAIgtAXury8BgwY4OnpqTbh
zz//PHjwYPx65MiRRYsW7d69u7q62mDyEqYFu2fQT1Tv3r2NLwNqojp16rR9
+/Zt27ZtV/L5558zP1G7du2C41dffZV54ZBKpagOksvlGBN47bXXnJ2dY2Ji
7t69q+Booi5evIgFlZSUYIhEIrl58yYenz59WqHiJwpyiI+PDwsL69mzJ1OU
waOheHx1HmSI1lNNmzZlpd+5c0dhQQ5gBYH8RBEEQRD1gvfCjY2NtbGxMQs/
USg5jGesra1dXV2FFseiYHfF6NGjack/QZggNFeyJNReTVyjt2bNGtVTy5Yt
69OnzxNzUNT5iWIr+AjLgF1uiUQSFhaGLuuN2SdAWbg6b+DAgVyRuHvn7dix
A45ff/11pok6d+4c6n+uXbtWWVm5ffv2kJAQGMKhSVXbtm0VHE3U5cuXMefy
8nIMOXr0KDNtUtVEQXwU6dtvv4XwjRs3PvPMM6qaKEzISm/dujWu/vv6668N
3YA1NTUlJSXoJ8rCOnDmJ8rJySktLU1ocQiCIAjCGJCfqPrCxoS4Ux4DRnGx
sbHR0dFRSiKV/Pe//w0MDJw1a9a6desEkpcgCD4VFRWFhYVmsYyaqBe8+Sl3
jR73lIuLy8qVK3XJEP1EwYtSv3ISBBodMU0Uwt077+LFi0yDhGd/+eUX+Pr+
++8nJycPHjx4wYIFCuWNvWTJEoxZXFzMNFGLFy/GVFu2bIGvzz77LJzlrc5D
TdQ333wDx4sWLYLjTz75BJ+U69eva7KJwtLnz5+PpS9btoyVbtAWk0gkTSzL
TxQtTCAIgiD0iNn5iaqsrJRKpfn5+UKLY5ZwRw6ff/55//79Q0NDw5SEh4f/
73//a9OmTZ8+fUaNGgVDNRpmEIQpAE/i8ePHYUZjZ2cntCxEA9HFjyUGDhgw
oGfPntwIsbGxMN2+f/++Qofdh9FPVGFhoR6FJwSHXW70E5WQkGDkchVKj+XN
mjXj2UQ5OjpCIPNYHhISAj3VG2+8MXz48ICAgGeffRa+rl279vTp0xDtueee
mzZt2ubNm+EuhXAbGxtIAsM51AvB2UGDBg0dOvQf//gHfA0KClIoFUrohxw1
UVB3VFI5OTmhVur5559fsGBBXFwc6sQgJi4W4ybMysqCg+bNm3NLb926taEH
ORbsJwrJyclJTU0lP1EEQRCE7nDHsdHR0fCCNgs/UUxs0pDUC7UbSpaWln71
1VeqkYcNG7Z//34jSUYQhG4cO3YMF6HgV+oDLZg7d+689957aJUKF3rixInW
1ta87SSIpxB86tFPlJeXl/EFwKVwgYGB3ECuTZRCab05efLkl156CdffQRK2
IyTc0i1btmxSh729/fnz5xXK1XkYeeHCha+99hocPPPMMwEBAbgpJNfxOHy9
evVqu3btMATi9+nTB48hyQ8//IBb8s2dO5eb8NSpU1j6Bx98wC2dbXxjUCys
r+ZVh/xEEQRBEI0hNja2devWZuEnCpHL5VZWVm5ubkILYpZwtVKZmZmKx9WS
CmXzcu3VLWwQRRBmBz6DaBP13//+lx5Jc4fb5UqUcMOR3bt3v/766wcPHrSz
s/Py8rp586bu+ctkMujbcRZPWBLsngkPD4+LizMFYbScvXDhgqr6tKamprCw
8MyZM9euXWOBzCYKkkDC8+fPl5eXay8XIsBABR0OFBUVSaXS0tJS7VLhj5hQ
enZ2Nrd0gwIlgpzoJ8rCYH6ixGIxORclCIIg6ouZzmjIT1SD4V3xO3fulCi5
ffs2/L116xYcwN8bddBchiAEBydQTBMltDiEHoALWllZOXny5ObNm3/66acV
FRWqr+OBAwe2aNFi8+bNWpb1qX2JMz9RZvqKJ0wZLatKdQlUG4H5ifrzzz81
JVe97c1iF+zs7GwL8xNFEARBEPoCXtlm5ycKBu1SqZSZVZvUqMM0Ubs6D3jl
lVf+oeSfSmC81KxZs9fqeP3115cuXSqEvARBPAY8uSdOnCBNlLnDZtASiQQm
p+jTZvjw4ZWVlaqR79y5o8lyQ/Wtxw1xd3e3tbUtKCjQn+CECYF+ohITE4UW
5BGNH4PBvfrOO++8++67Wm7axpeiaSBkUCzYTxQ2I0wfUlJSyE8UQRAE0TCi
oqJgPGwWfqIUtG2HISkuLo6Ojo6MjOQGUiMThLCwJTmtWrX67rvvhBaHaCBs
x42pU6c2b94cXrsff/zx4cOHhZaLMA/Yuxj9RPXu3VtYeQhCQX6iCIIgiHrC
0y3Exsba2NiYhZ8olFwul1tbW7u6ugotjiWg6v59yJAh6D+KIAiC0BdoCtWm
TRs0hQoJCSkrKzNEQTKZLCsrq6KiwhCZE0LB3tRwF4WFhcXHxyvopyKTp6am
pqSkBP1EWdjFYn6inJyc0tLShBaHIAiCIIwB+YkyKMuWLZszZ47QUhAE8Rja
XaMQJk51dfW0adNwR/tPPvnEoKZQzE+U4YogCEIXJBKJhfmJooUJBEEQhB4x
Oz9RlZWVUqk0Pz9faHEsBN4Md9iwYbgpD40xCIIgGgzrQuENy0yhfvjhh9LS
UoP2rh4eHra2toWFhYYrgjA+7J5BP1EJCQnCykPoggX7iUJycnJSU1PJTxRB
EAShO1zlQ3R0NAyPzcJPFBOblCR6Ye3atXFxcatXr45TsnDhwv79+7/99tsw
qBDEtydBEJqoqKgoLCxU3RWdMGWqqqoiIiLQK9RHH3108OBBBXWqREPBOwf9
RHl5eQktDqETFva886pDfqIIgiCIxhAbG9u6dWuz8BOFyOVyKysrNzc3oQUx
e/z9/b29vX19ff38/OA4MDAQJk1Xr14VWi6CIP4Gde8ZGRkw4G/btq3Q4hC6
wjWFGjZsWGlpqcIoqyxlMllmZuaDBw8MVwQhCGzzgvDwcDRdJkwcuGTFxcXo
J8rCYH6ixGJxenq60OIQBEEQZoaZ/lJDfqIIgnjaOH36NPR7X331ldCCEE8A
XqxoCvXcc8+hKVRqaqoxBWB+osz0FU8QFkN2draF+YkiCIIgCH0BI1Wz8xNV
UVEhlUrz8vK4gYTeoYYlCNMhMzMTZjS2trZCC0I8AXiffvXVV2gKNXToUDSF
Mibu7u5wnxQUFBi5XMI4oJ+oxMREoQUhnowF+4nCISJ0dykpKeQniiAIgmgY
UVFRMGY2Cz9RCtq2gyCIpxKmiaJ+z8jo8tLB8KqqqhkzZjCvUDBBM5KIxNME
+YkiBITXB7q7u8PduGPHDqHkIQiCIMwL3nskNjbWxsbGLPxEoeRyudza2trV
1VVocSwKtTMsmvMShOAw5zAw4G/Tpo3Q4hDqycnJ+frrr5soCQ4OvnfvnlD9
p0wmy8rKqqioEKR0wtBkZ2eHh4fHx8e3a9fOysqqrKwMAtu2bQvH9+/fx2MY
I1G4sOHs+LvvvrNIP1HI+PHjxWLxli1bPv/8cziAkKKiImgKdkzhFE7hFE7h
FM4Nh2MnJycWp1OnTgqzgvxEEQTx9IAey6VSacuWLV1cXIQWh+Cr6KuqqmbO
nPn888/Di+nDDz88cOCAsDp85idKQBkII/DSSy/Bhcblny+//DIco1YEjync
dMJ79Ohh4HvBeKjt3C5fvgzVfP/99+H40qVLdEzHdEzHdEzHOh6/9957CjMB
34CVlZUwKcvPzxdaHLMHRk2lSu7duwd/7yq5c+dOTU2NggyiCMLEoEdSEFAT
qFBpf/wKL6O2bdvCm7RZs2ZBQUHQhbJoQl0vDw8PW1vbwsJCQUonjEZubq5M
JsPbjI5N9hi6CEvayFJtt1ZVVQXVPH/+PBxXV1czV654TOEUTuEUTuEUzg3H
X0vx3cFcf5s+bDpAMzK98OKLL77wwgvw96WXXmrevHnTpk1btGjx0UcfHT16
lFqYIAhCLdg9wst01qxZuEFeq1at9u/fL7RcxNNCvVbTU7gg4TRSVZjMtaBw
Cqfw/8/emcC1cV37307aLH1Jl6RJ06SJ077X18ZO05L+89o0S5OmTRPcBKdL
YpCEsdl3Y3ZjwAZjY4yx8c5mvO/xvu/Y2AZjswmJRQIJEKvYF4GERvrfmasZ
DWIxYGCEON/PZDKMZkZnZO5hzk/nngP7Yb+Z759CyGSy2bNnz507l2tDLAoU
VeXm5n7zzTdZWVlc2wIAAGBGMF+CMHtEdCrUzJkzXVxc2HVgBh48yYjFYuTM
LSkNA8BYwPMbYAHA7yEAAAAwbYE6UeMO81zR1NT06quvskMYzqMqAAD01Kxk
uVxeU1PDtSHTDpPcBq1WGxsbi6tCzZo16/Lly8xhHBloClMnynxMAsYRc/se
E/YPv98iGfhkaG4fO+yH/bAf9sN+89xv8tIU+uuJTVWr1exJhVPIfvPE5Ili
7ty5GRkZ7JcAAOCcwsLCGTNm/OY3v+HakOkI4yTFYvH//d//zaBwdnZub2/X
m5+ftLGxsbKyksvlXBsCTAjm9vsGDA/8ewEAAACAZTBFNTTzpLe3d//+/cnJ
yTjRoqenhyAILQXXpgEAYAA7OqFQOGPGjDfffJNrcywW5g+KyV8W/CPyinFx
cTgV6rXXXrt06RIHJgLAtIcShelB2m+kEv0PNPkRAABg6kIM4tN0rP/r+u3X
4YMhSgaAcQU/e8hksjlz5lhbW3NtzpRn7ty5H3zwgb29/c9//nOlUnn9+vVn
n31206ZNXNsFAIApjBIFCvzkIxaL33nnHZwK5eTk1NHRwbVFw4GszcvLU6vV
XBsCABPDwPhLN8irCAKcJQAAloGJr9NhTV5r/EmHX6W6n1PKlc6wAYoUAIwn
UCdqtAyaSFZdXT179myCIH1UdHT0xo0b0UZubu6vfvUrkUikh5QzADAP8Egs
KipCfm/OnDlcm2P5mFSFwqlQM2fOfPXVV6dEKhRTJ4prQwBg8tCxRy4TssFT
DAAAFgCpKOkM6aBsMYrWmmjdnWBeGuj8IKwDgEcEDyKNRiMSiaRSKdfmTBmY
IidsL1RYWPj111/jbbFYPH/+fLwdGRkJaVEAYFagkVtUVDRz5kxQoiYUk6J5
JSUlf/jDH3Aq1KJFi9rb26fEg9y8efOsrKwqKyu5NgQAJgr2OFSpqCCNfsCZ
EoMUAABg5LDn3/XfNshQ96QdhZVdWI6iZHktTpeidhDgFAFgXBhUUQFGBfPR
dXR0/Pa3v8U5UWj95z//Ge/fsWPHqlWruDIPAAAT8JiVSCSvvfbap59+yrU5
Fgv7zwpyifHx8U8//TS7KhT83QEAzmFViCKnn5Q19rjtLz10T6ljvwoAAGBB
mPo1JuWJVJqIC8IWXkqJfXppRll7v4RQXf8SUuAdAWA8kMlks2fPnjt3LteG
THnWr18fHh6On9w++eQTtVqt1Wq//PLLU6dOcW0aAAAAN5SUlPzxj39kp0Lh
/VMlyBWLxbm5ub29vVwbAgATgWH6CRqPuZUdC3eK+ckitGy5XqMlWMXMAQAA
LAVmqjHt3agC5pS7232nnpdUZJci4m8vsk0RHc9tNJ4FzhAAJgCoEzVmTJzS
xo0bX3rppRdffPHdd9995ZVXXnvttVdffdXGxqavr485HvwYAHCOyawxYIIg
CGLdunVPPfUU+hPzs5/97Pz58+xXp8rnz9SJmioGA8AooFMBLolb7FNLUfzF
SymxSy2Zn1wUc66yq0drqNyrhwQAAAAsDbZX69Pq11+pRq6P9IHIE6aK+cnF
aCPlVi3dCbhfWwfwiADwiODnarVaLRKJJBIJeycwBp577rm9e/dmZGTcunXr
5s2bmZmZNTU1XBsFAADAASUlJe+++y6TCtXW1jbwmCnx58bGxsbKykoul3Nt
CABMANQQPJhdb5tCxlx2KUIUf1EbIn6yMORoeXMXPX0PKpYDAGA5EMZNnb6j
py/6lBy7PrvkYltqbUev156r7NZQXfPABwLAuDJoGzhgbJSXlw+6PygoKDMz
c5KNAQBgULCj02q1crkctOIxMFRGGbMHbSQkJAyVCgUAAEew+48bojCNTr/x
WrVtEqk+CVIYDarYNrnIjlr77JdUNhvyuvulAejIkir9Ok8BAACYKQT7B9bj
iha91NCuDTxcYZCeBltsU0Sh30rbugjjpXTMZQkmYwoAgFGBR6JMJpszZ461
tTXX5lgCCoVi586dayni4uLWUPzhD39wcnJavXr1vn37uDYQAAASPCv5V7/6
FdeGTGFMxCg8+xh9sH/6059wKtSCBQva2tqm+nccYrE4Ly9PrVZzbQgAjB3c
tNy4TdGr1kWfkfGTRXgqyvyUQkaJotaGKMxll6SwugufqWcGPmG8HAAAgBlD
DNxF+TFSR5I2drvtLRlKg2KUKOQhfQ6W1bb20icOBkxkBoDRA3WixpE33nhj
4cKFSyj8KQICAn73u999/fXXQUFBycnJXBsIAABJSUkJ8nu//vWvuTZk6oE7
hA66PyEhATfIe+WVV86dO6e3iFRbpk4U14YAwNjB45BgVThp7NQGHZHZUoqT
bXIRL7WIlyRmpubZppAJUZQYJUTbgh3iDGm73pAJha9B9Ls0AACAmdEvaXOw
nne5lR2L0sX8ZHJWMj1DefCFKmMudN1TKq5XMdfB/tBQBLhfmz0AAB4OjhE0
Go1IJJJKpVybM+Xp7Ox8++23B0Ze7u7uly9f1ltEUAYAUx08DEtKSmbOnAkK
/NgY6MokEsl7772HPlKcCoUb5FnG7O958+ZZWVlVVlZybQgAjB3j8CPQUCQq
lT1e+6RUmzwhnpdHiVFi3DQKBVyMHmWXKhaklGCF6nhuMyVEE0T/OXlTdWwD
ADBNGMxhXSlqc0gTk5Pykotp1zf4Mj9ZbOjmkCJ02FF8p7zVeCV6mp5OD64Q
AEYHU+5j6sYIZgV6Qnvw4MHA/RUVFYNW6wUAgCskEgnkgo4Ndj0oPeX31q9f
//TTT8+cOfPll1/GqVCDHg8AAFewu5YLq7scd5eQ+U5UCMbMyDPsSTHup3Qq
oW1yoW2KyJbMmCpKyagnTL/0H2KiCgAAAKfg+JaaTcfkLBn81YHsJiywz08u
sk0V8lJK+EPXiaJSRouQJ+Qlie2os84UtrDmO9MBNSc3CQBTHJlMNnv27Llz
53JtiOWQnZ2dlpa2efPmy5cv9/X1mQRuAABwTllZ2YwZM/7nf/6Ha0OmJIwr
k0gk77//Pk6Fsre3Z0vuFuPuxGJxbm5ub28v14YAwKNBjcgb4mZ+GlMDSojr
QeGIDFcsx73LbY0FUorxwVQCFTllL+58ZZda269sr4WMdQAALApDTSfqSzNq
B7nWEvrE69UsByi0NUjxQ1csJ9V4Q3dRRq5Pu1VHaOkr67TgBQFgbECdqHGk
trb2j3/841tvvfXNN9/MmjXrk08++cUvfnH79m2LCcoAYKqDs0BlMtlrr732
0UcfcW3OVEWr1W7YsAFXhXr55ZfPnDkz8JihuuxNLZg6UVP9RoDpDE4MOPKg
YX4yOdvOGGSRUZWQ/lHIirwMc1UEKeL59DY5OSWVPHfpsfLmLk2/qwMAAJgZ
TKtQghajVFSbBrJBQ7IYOTSqGh7pA9E20zx0sJwoMU4NJefxkRWlyBxRtL3u
UnWvloBHAwAYG/i5Wq1Wi0QiiUTC3gmMjT//+c8bN25EG1KpFLcjvHPnzuuv
v65UKrk2DQAAYBxAfyNwVSjcIE8gELS2tuot92+HjY2NlZWVXC7n2hAAGDso
ENuaoWC0Jiwu8ZKK8Iw8W7o5FD1Tz9g4z67/fltKpEJRmO+BsppWqqEkVOgF
AMCcwTKUTt/U2Rd0pJzMbkouZlwcnfNZzHZ6gy1CW1q9x/lRpJCVKlx2UtKh
MryL4SkI/CEAjBjLqChrJqBw7O2338bbUqn0888/x9tLly49fPgwd3YBAACM
D+jPRGJi4ve+970ZM2b89Kc/PX36NNcWAcB0ZOgHNtakOcOh+l5136qzMibN
iax2kkp+oT9MDsAw3cyZZCrXPaXFdSr6TQhD4Tg99JACAGBS0em0Q7xirGIn
b+r12icdrcd72EJq+36HyuraIUcUAEYNfmyQyWRz5szBCTzAo4A+yb///e94
u7y8nFGitm7dumHDBu7sAgDAFBDeh2LglDpmWyqVfvDBBzgVis/nt7S0cGPi
5CIWi/Py8tRqNdeGAMAIMQZfaPC2dPeFflvBnnbHCFAPywEYtF5KEV7jHKpF
6eK75R2sd9bh5nxQxhwAgMnGtGwdgTvaoY38yk7HncWGXgxD14Ma9ULli/KT
hW57JGXKboP8TjlA5hmKKggxlFAGAADUiRo3kK/5f//v/+GavRUVFViVQjs/
/vjjrKwsrq0DAMAAGpV9fX0ymUyhUHBty5Rh48aN3/ve92bOnPnSSy+dPHmS
a3MmD6ZOFNeGAMDI0BkSk1AkpGjReB6QmEZezI+jj8jmJ4tt+50o5KcVny5Q
MsGfjh0Mgt4PAMAkgSuT9/8ejVqulbQuSBPTKUzCYSqTj2GxpfX5Rekl92Rt
jBY1iAsEfwgA/cGjVaPRiEQiqVTKtTmWwIYNG956661r166Vl5d/+OGHV65c
sba2dnZ2NjkM8jEAgFsqKipmzpz585//XA/jcTDYnwn664C8GU6FsrOzmyap
UAzz5s2zsrKqrKzk2hAAMDKwJy+Tzaij8pFQVFak6HTdWUKHS4ZMAKYLOdUj
b4yzUah6v0WClBKmhNTuzDqCoJMBmIQo8KwAAEwqhNHtUIWbvr3fgOcjC1LE
eHIxj92y4VEX7A+LbJOL0No+tfiisMmQGkrbYPg/OEMAGIDxuQVGyHiAP8ac
nJyoqCiFQjF79uzPP//88OHDBAXX1gEAYKSiomLGjBlYiQJMYMe2GzdufOaZ
Z6ZhKhQATAkGSlI4G+qWtEOwQ4wLkmMNCm+T2lHqIwViPFrIIkUtKksK1zxP
uFjd20cFXJAQBQDAZDLA2+goN7g1o9qObABK9sizTS4UpBTZsVowjNtC1twr
IpvxUVfel83OEQU/CAAPQSaTzZ49e+7cuVwbYgkM9TUlsw1OCQDMAeT3ZsyY
8frrr3NtiJmCPBVO7GRSoZqbm6enBxOLxbm5ub29vVwbAgBGhhmJOp32eK7S
NkksSDL97h4v/GThmGMufK4tFdmRraPoYlN4fkrEyYqOnj5DXta0cxUAAJgL
qj796nNy5JfYmZ+2LC19vBZqrp8Q50SR66Qiu+TizVeq+rSsPnp0MwcAAAYC
daImgmkYrwHAFEIul0NO1FAg97V582bcIO+ll146ceIE1xZxCVMnCrw6YJ6w
v/nSEvrUm7VU/FVslyrGNUz6xWLJRYbMqLF++0/34DNM0yMX1mwXv0PS+o4+
yhouPxMAAKYjlNtp7tIsPVqBczWZychUcpRxe1wWw6WQR00qJGdA452kRF8c
dbqiq4cpVD6gpSkAAPTTi1qtFolEEomEvRN4FOAzBAAzBytRs2bN4toQs6Oi
ouLjjz/GqVDz589vbm4e9LDp4+VsbGysrKzQLwzXhgDAQ9BoNGsvVNlRwReK
uchv503CLio0o4QjoWHi3uiDL1qJMt3G2hS6vvs+iaRBRRo0XZwEAAAcw2Rs
K1p6fQ6W0YqQMRsKuUTk9PAyjkoUkxeK/S374kFHyhu6NNBIFACGYdBW3QAA
AJaNQqGYNWvWe++9N5393sC5w1u3bsWpUD/5yU+OHTvGoW0AAFAQg3yfrqP6
41H7mbq47Spt5HHZeEVYY5CnbLHqRalbC3eK78k6TG+FLiE1fX0uAACPgE6n
ZT23EP1fIj1LUW2X684S2yTx2GT2cfOHlDKP/KH3vjKZUk3Zh40E5wcARvCI
kMlkc+bMsba25tocywF/sA8ePEhMTMzMzOTaHAAAgIdQUVHx0UcfMalQSqWS
eWmaPzuJxeK8vDy1Ws21IcB0hF2H3LBiIhodXX5Er69pVfsekjDTQ7hYhLZ0
/hU/tRSt7VNLLxW1sm4FEgMAABg/2K6RIP3hbUnbwh20R0ouHsfcpzEo83gm
IFqc0ovzKzuxux7kaWrQnQAwnYA6URNEfHw8+mD9/f25NgQAAFOm25/+Yesb
k6lQzzzzDKRCDQpTJ4prQ4Dpim6wTZ0xG6q4rtdldwn1RTx3ShQ17w+X7cUB
IJ4Fszer3mg21dwcMqIAAHhEdDqtnl0iT68/md9EOiKyN+h4t8YbgxKFnSE9
P5q3Q3itpL2//eAHAcAwEDQajUgkkkqlXJtjaaxbtw6UKAAwWwZtcGnB4Ntk
r/VUKtRf/vIXnAr1zTffNDU14VcJAhIYDMybN8/KyqqyspJrQ4Dpi8mw1WNB
hyArlN+VtjvsIJs3kVpQEmdKFC+1CMdfZHM9KhvBNqVYQFUy33ClkmwjpdOy
7mfyP0IAAKY+bDdC54QSOrJNA+2IjDIUtzlRtCRVzKfnCR7MrtcZ8rfYNwAA
0xfm2WaaBGKTDFailixZwrUhAACY0tfXJ5fLq6uruTaEMwiC2L59+7PPPovc
1IsvvgipUABgjuhYMhS7yBKVX3RW2CpIEVOajxjX4+Uq8jKGYP0DQJwlFXVK
3tWjM5S3gudNAAAeDSpwJbX4Hq1+3YUa21QhKYaniueTDoesIk71s+MsOcpQ
Ny+pSJBaaEcX0OOnFW+5Ua0zmY4H/hCY9shkstmzZ8+dO5drQywNrET5+flx
bQgAAEaw9q5QKNDwfPXVV7k2Z7LBj0ByufyTTz7BqVBff/01ToUaeBh8SaGn
6kTl5ub29vZybQgwXek3CulC5Trdrtt1VNQj5KWUGBrhcVekl1KcDHEfo0Th
PSg25CcLAw5JGjs1g90RAADAiKGL46GNVpUu7JiE9D+pQty7k5daRDkcPDuY
O39I+T1KEysWpBQhz4y/KUB+cvWZCpVaN+COAGD6AnWiJoiEhARQogDAPMFK
1Msvv8y1IZMHIytt374dV4V64YUXjh49+tDjpzlMnSj4QAAOoH/pCLoyFDkl
j9AnXK6ySzFUZ2JiHI5zosi4T4inpfCoeXlkWkKqGG+jDbf9pRXKLg4/SwAA
pjhM3QCCbNNwoMwgv9P1yUlJnHI4BnGeO2WeXCchzyzELhp7RZwcFfptRXMX
Nc1QZ+woCgDTEPxcrVarRSKRRCJh7wQenfXr16P4ZfHixVwbAgCAKViJeuWV
V7g2ZFKRy+V//etfcSrUf/7zn4GpUBj2XwH4i2BjY2NlZYU+Oq4NAaYthuAL
j8WOnr4VJ2WkBkVJTyi0wQkAtpxWLGeJYEJ2AIhDMCyUocVppzi/GsQoAADG
CE5rF9er3HaJGR+IlvkphaTUQ6k9vCQxnrDMlT80eEJKjGKXrmJ0M+/9ksrm
PkPJqOn+kAVMayDimCDQh7lhwwZQogDADEHDs6amhsmJmiauLykpCVeFGj4V
CgAAThmsWQDtoupaNYsPl3EaXo1uYSr3klEhFYXx04qvl7Qa70ynNXrgaeGJ
AQB4KITRE+pMc4cMbRrIPCgy69KWu3pQY/OHuL+DU3qxUNGNb1A3qNsHAEsH
//WXyWRz5syxtrbm2hyLglGifH19ubYFAABTamtrLX52HhPfVVZWMqlQ//73
v5VKJbeGTS3EYnFeXp5arebaEMCS0dG1vHV0cyidYb+Wib8kDSq3vWXmUJZ8
dAudBsBeH85pNPaQIkCBAgBgKIyqFKHXnils4qeWkvXxqHRQDqfgjUWJSiUn
69nRSaQOaeIbpa3Gyld6/eDfRACARQN1oiYIyIkCALOloaHh9ddf/7//+z+u
DRk3dDT6/lleycnJuCrU888/f/jw4WmSADaOMHWiuDYEsGh0ptt0szyDTJMj
71yYThdfwlWYpsLC6GZ4CiF7/9YMBTM3RaeHhCgAAAwYHlR0xp6h1E/6PXcb
TArikc5waolR2H5kc5ohX/R4rpK5Qb1OqzP+AAAWDh7pGo1GJBJJpVKuzbE0
EhMTUfzi7e3NtSEAAPTDstUY5u6qqqo+/fRTJhWqsbGRW8OmKPPmzbOysqqs
rOTaEMCSYWRk+mfDWke9dKmo2T5VhCui2HIdSY11EdLd/YSMGLXqXIVKQ+j1
fRx96gAAmCtYh9cZ8kI1fcSGizX8ZKr4UgpZJc/gTMi2dFNGmbejxXncZsLg
EtOK0m7UagmD7GbMg7XkB1UAIGG+PbfsuIwrQIkCAGCSYbx6amrq97//feSC
fvzjHx88eJBruwAAGA46nRH/QK3pOWt77jXg4AsFXFSz8qk1IQW3VicFNLKY
cBIZP5JVfJOK5ieTlaNCjlW0dcH0PAAABoNS4zt6iMhTMpwOakiIojQcLMv3
Kwlu5gtV2Iq9B0tq6EbiL1b1anHdPK0O96cAtwhMD2Qy2ezZs+fOncu1IZbG
pk2bQIkCAGCSqays/Pvf/45Tof75z382NDTAdw2Pglgszs3N7e3t5doQwOIh
WGsSLaFPvFpFf5MuNGQTUXV6uQ+pxmWhKr1475comnrIGwZHBQAACYEr5yGX
UN/aE3BIgjOI8JopUW4yU8/8F9xClFSf0op4SWSzP0GKmJHXlh2vaOlm1YkC
fwhMD6BO1AQBShQAmCc6nY4gCLlcXl1dzbUt4wyTCvX8888fOHCAa3MsAaZO
FAh6wCRAZUaROUJdvX1RpyvsqD7gaD2fno3CmzqNopjgi8yJSi5imqqjsMs2
VTifjCKLbVPI6NJpV4moRsX1Zw8AgLmA/+CWN/S475MwohOzML6F8ZBTY8EZ
oSkltsmFVHKUkO0n0dr3kKS2TUPdP8efPwBMAniYq9VqkUgkkUjYO4FHx8nJ
CcUvH3zwAdeGAABgSllZGRqeTz75JNeGjBvV1dVMVSicCsW1RRaCjY2NlZWV
XC7n2hDAkjF59Grs1AQeluJZeIZoi9JzuI+kRrmQohMVf/FTCuxSRAMTGHBE
hu5uQZr4pqSDq88fAAAzgnKHD+Tti3aRSjXyEth1YNGJcolCcqov1/5tDIvB
n+N7wQmulCCPX+WlFrntKi2uA1kemC6wH35Agxov8Cf59ddfo5DwN7/5Ddfm
AMB0xKQCnsl2SUnJTIqhzp1w+x7GwC54gx6DD9ixYweTCrV///5JMhEAgHFC
xxrsMmWP+75Su/Gof4KDtcmcwGLL2hjD+x57wDRWMMzNgdwAALBUiIHDW2do
mXde1GyfWsxLLbKlMkKRMxyDP0Sn0xvk6bjgOZOcOb760qO4a1vqCug2cY6o
w47iu+WkLE9WL2d1EjR+RABgEeDfbZlMNmfOHGtra67NsSjQZ+vq6ooCww8/
/JBrWwAAMKWiogINz6eeeoqJ/gbVfMxBktIPa4ZCofjss89wKtRXX30FqVDj
jlgszsvLU6vVXBsCWDL0GCfyq7scdxYbO82NdqFjLiqiEY45MnqUkIqfVEK9
+1jsR+FY6s1aQ8Ms46fD0b8KAAATCTWyTevjIfZlk20a8Fw2g3BE+7dRLfNT
CgUptBiVUoJ18nFX5m1pBZ4Su8aqdOG7Y8qwp5SczVf2/6AAwDKBOlHjC0EQ
Wi35BLVly5aZM2d6eHjg/RDIAIA5gEeiUqnEGUR45xSqR83OlUpPT//BD36A
buS5557bt2+fyTHAuMDUieLaEMCioYbs9ZIW3g4cK5EhGJ9SZka19AttUo11
fSdNieLj1up0uDda+/FZ8eerevp0xk8G/BkAWCJM0iP50EIP88KqzpSM2uQb
Nck3a1Ov1yRl1KFttCclo55aj2IJP1HO+EBDztK4dnxgXKuhKyj1LtGnKkZr
J7rBpIwaakORfLMe3TjaTr1ZJ2nooj8qgm6nOkgeGQBMUXC0otFoRCKRVCrl
2hxLgCAIW1tbX19ftL1161YUv7i7u+spVeqdd95paWnh2kAAmEawRRu8PnTo
0JtvvtnW1oaVqBdeeAHtLCkpmTVrVkZGBvssM6empubzzz/HqVDz5s0bmAo1
Je5iSoA+Xisrq8rKSq4NASyfps6+ti6iuUunVGnQurlL29JNjGppVhFN3Tq0
EXmqEn81j9YTMRtl0IhM0qBq6taiW0AG4PVoF2WXGt14Sweh6tPBbBQAmCb0
G+s6Wph65Pm5x/Kb+uvkrOyj8XWArO1rJa1ju33WjRL0z4ZUMXiiAywSJkCD
3/Dxori4GFdrSUxMZJSo8+fPP06BNrg2EACmKdjLvf/++2hUfvTRR7W1tTiV
qKmp6b//+7/RtqurK/tIzhnKDLSfnQq1d+9ek4PNxH4AAEYOM2gN1ZFwLEaM
fizrtDiIiz1bwQRck1AnipwSmFTU0KnV04VNxuiIjPoToQcJCgCmD0wWJO06
tNgJUC6F0Gv7zdgdGafyG+kudchNCcmcpZSS8VXgDZPpkgpxTpQgRXyjdNRK
lJ5OdUK3SftAgnTm7I+HkavALQKWhUwmmz179ty5c7k2xELIyspCQeJjjz2G
PlLcO+/ZZ599/PHHDx06hA+AOBEAJg2Tut+dnZ1/+tOf0MD88ssv0fqHP/wh
GqFow87OjiCIgSeaD9iempoaa2trZPDMmTPRLdTV1ZkcAIw7YrE4Nzd3Cs3f
BKYotHaDFRjiIUcPdRE6TIk5V4kFqMnpuEfmRCUXN3ZqTYwBAAB4KCa5T6z6
UYxTG8ustOO5jUY3ZVTmxz8nihS4qMsir3urtG0cPg5dP9FJB894gOUCdaLG
nezsbBThzqB5/PHHDx48yLVRADC9GKoUeUdHx3vvvTeDhZ2dHa7tZp4w9u/a
tQs7FrTes2cPt1ZNH5g6UfAcCEwcxhx18idjJsBYIVadlRkKmCcVTlrvvMZO
jTFmfITv7qmsLkOOAIw7ALBYmAlohlFuTAM1eEJyxxhleT2pRCltmWwoWpMf
byVKiN0sL6WEnyxE6xtjUKIIQ3c8wx+Cfp+P8f/Uq2P/NADA3MC/8Gq1WiQS
SSQS9k7gEcnOzsbTZx5//PEDBw7ApwoA3MIeg52dnXiaHmL+/PnmLENhamtr
cY4l4osvvkA/cm3RNMLGxsbKykoul3NtCGDh0A27H80d0bPbVp011Imi4qMJ
16DQW6BYj1SijJkMj3Qj8NQEAMAjciJPiR0Uu47TuKeJkuXKU4S2SWJ88bEo
UUZ9ie4kSGtTrP2sJDEAsBSgusjEce/eveeff/7AgQNcGwIAlszYnBgWo775
5hsTGcrc3CCyh0mF+tGPfgSpUADAFQbnYEz1GXI+rzm4kVVnK+0mpUIUs9im
CiklimJABV4AAKYYOro2EVsGmVIwShR7mYgODuz+pBll7VzfNwBMDfDDkkwm
mzNnjrW1NdfmTDEe+qiJDmhvB3cEABwzcKjiPV1dXWwZaqjZfBMdVA5zfZNU
qJqamgm1BBgUsVicl5enVqu5NgSYXEwml7ELdxDGbXMQnQYFlCgAAEbI4H5s
BOPXzJtegRIFAOYP1IkaL0brjc3ZewPAVGRCx9QkD9jdu3czVaF27doF7oIr
mDpRXBsCTCp4vBF6bUtrV3VVfXm5DC0KRW1ra/uUGIygRAEA8Oj09moqyqvu
3Mk69u3Znbv2pSbt3bf38MVL14SFxQ2NTf2/t+PKxiEBJQoAzBn8NKXRaEQi
kVQq5dqcaYeOhmtDAMByGDSjyaSD3mgvMqpzxwzzFrW1tbi1H+If//gHVIXi
lnnz5llZWVVWVnJtCDAp0LNRmpVtdzKzN25IWRoc4eke5Ori5ezo4+66JCQ0
YlPijtuZ2S1N7WYYeTGAEgUAwGhhD1miT5ufn78ufiPyezyeq73AWcBz4fGc
F/Dc0YY93zUwYNmRQ8caGpRmO9JBiQIAc8bYqwXEkEdDKBTu3r07NjY2ICDA
0dHxX//6F4of//rXv3744YdobW1t/dVXX9nb2/v4+ERFRSUlJZ07d45rkwFg
utDU1HTkyJHExMRly5a5ubnNnz//yy+//PTTTz/++OOPPvros88+++KLL9BO
9NLSpUs3bNiADkan6CcxCYo9MRB5kueee27mzJk//OEPd+7cOZlmAACgpxq3
FRSKQ8KW8wTudgIntObz3ezQInDh2bvakmtntL106aqSUvNt9QJKFAAAo4M1
JVmr1V6/cdthkQ9yfcjvCQTOyBOSG3wP5P1s+Y5ojZeYlfENjU2G080MUKIA
wPyRyWSzZ8+eO3cu14ZMSXp7e9PT03/5y1/OGA3f+c53IiMjq6ur9aPP1gAA
YFAGHUQ3b960sbEZaiTOnDnTZAODTkEnjvAtxova2lrG1H/84x9QFcpMEIvF
ubm5yNVzbQgwSTQqm329Q/C3/3y+C9/OmdzgOQr4TmgnWtvzyZQAAc/Nf8lS
uUyBzzK3P+KgRAEAMFpIP0YN24b6Zjfnxcj1oQX5Oh7PFTs99CN2gHy+G1qo
DZcdaXu0WnMc7aBEAYD5A3WixszBgwdnzZrFRK9fffVVbGzsli1b0tPT9+/f
f+jQoSNHjqD1gQMHdu3alZycHB8fHxYWhmNetH7qqaeCgoK6urrM7QkWACwA
sVj86aef4rGG+PWvfx0dHZ2YmJiamrp37140eA9ToI09e/agneilFStWoMOY
U9Dp6CLMBSd0nCKTfvSjH6G3/sEPfoAciMmr4CI4hKkTBf8K04Rvj50WCFxR
eIXXzEIJU054Tb/qdvDAUa7tHRxQogAAGC2MEnU/J19ApoMaHaCJP8SLnYDU
54NDwru7e7i2fRBAiQIAcwY/V6vVapFIJJGYb5K5eWJvbz9UfsUwewa++vOf
/xzqwADA+HL06NEnn3zyoSNx+P1ojS6CLjWhptbV1TGpUNbW1uxUKPDG5gD6
17GyspLL5VwbAkwS589d7h9tudEblABFJgZgYcqRx3O+dTMLn2VuoxWUKAAA
RotOp8XDVlFdHxmxilbgTQUogcDVqMnzXE6fOk+dzK3tgwBKFACYOexnJ3N7
jjJzXn/9dRQ5BgcH83i8Dz/88H//93+fe+65xx9/fHj16Zlnnpk1a9Y777wz
b968xYsX42l92dnZXN8NAFgUAQEBM6g0RRcXl7///e+/+c1vXnrppSeffJKR
mNjz8pjtp556Ch321ltvoVPQiWiQop3+/v4TZ+f+/fuHSYUCAGCSIQiiqall
y5Y0euKJGw61UMxFJ0qRc1Xwzrg1iU1NTQTRN/LrT9qDFihRAACMENIvEcbh
qupRo3VNTV1QUARLfXJmMqN4PEe8c+FCz+Sk9La2jq4uFXfmDwkoUQBgzuAn
IplMNmfOHGtra67NmWLgeXkdHR3MHvx5qlQqpVKpUCgqKysrKirkcnlVVVV9
fX17e7tWq2VfAR2PAl6sRIEMCADjSGBgIBpZqampJvvVanVLS0tdXR0anjIK
tIF+RDvRSyYHp6WlzZw5MyAgYAwGPHREozfFShfi888/Z1eNA8wKsVicl5c3
8NcDsEjKy2VoGDY0NOzdc8jTM5gph0IGX4a5Km4oIvP0DNyz+2BjvRId3ENG
bcSQV0RjmhhkXE/0YAclCgCA0UMg1ySVVigU5GSNxsamy5euR0fFeXuGUEqU
G56V7OTk4xcQmrQ1rUhY0tfX19uryc56oO834gly0Q1wgLpJdQugRAGA+QN1
osbGa6+9ZqJEmTAw32zgk+dnn32GLnLv3r1BXwUAYFQwg8jf3x+NrLS0tIce
Ocy4Q6ezc6LGcYQeOHDg+eefx6lQjFwGzQvME6ZOFNeGAJPB1Ss3CwuL1Go1
GoeKqprM2/d27T6wKmZd5PKYiIjYmJVxu3cduJOZjV5CB/SpNbcys65evU6d
ShjkKDrUGnQsk5NfjNt6w4kTAChRAACMFjxkS0sl7u6BefeFHR1dyGX19PRU
V1eXFEvzcoX3cwqEhcUSSbmygeqXpyfkMsWOtD3r1m2hrzGoQzPspJ9zJvg2
aECJAgBzBjsEjUYjEomkUinX5kwxXn/99ZkzZ4aHh+/du/fq1atCobCmpkal
GjI9FX3afX19TU1NEokkMzPzyJEj69at+8UvfsHOiYIgFAAeETyI8Oy8L7/8
Mikp6ezZs/fv36+srGxvbyeIIYM+9FJbWxs6DB2MTkEnotPHnBNlYhIztBsa
GubNm4enBH722Wc4FYptOWBuoH8vKysr9IvBtSHAZHDp8nV7e7fNG9OKCkXt
rW3kLh0ZN/X2atBC+g/yR21La3tRYfG2LTsXLnS/eOm63kR0Mf5AYOmJJX3j
tQ5yogAAMBNod2R4QJJKKxwXejnYu0etWHPp4vWysrL6+kaVqgsfhR6WWls6
q6tr8h4Upqbu9/YO5vGc49dt1Js+xhgftwiqDjpyhjrjO06GfwAlCgDMGUb9
gAhoDPzud78zKXHMlKD5r//6r+eee+7FF1986aWXfvKTn/z4xz9+9tlnn3ji
iYEHI9B+kUjE9d0AwJSH7cdWrVo1VFnyp59++oc//OELL7zwEgXaQD+inUMd
HxMTMzZLTPwq+vHAgQPIG6Brfv/73zeZOQhaNACYA6KiMkdHTz7fxcHRa9nS
1TvT9127ejM/V1giLhaLyvLyCq5fu7Vr58Hw8BiHRT4CnovTIu+CAiE+d+D4
Ze8wifX0E5wYAEoUAABjQ6PpvXXzrj0fl4RyXrjQ298/LCIiNjp6bWzshujo
dUtDV3h5BFITlsmi5SFBK0pLyvUGL9fv+z46C9QkJ8r0sAkClCgAMH9kMtns
2bPnzp3LtSFTDLVavWXLlmGKk4+Er776SqFQcH0rAGAhsCPBjIwM3FZgzMya
NevGjRvjYlhDQ8M///nPGZTM9dlnn1VVVQ1vPGA+iMXi3Nzc3t5erg0BJgOC
IG7fvksGWTxnvp0zFYi5CgTuaI322Amo6uV2hm7mnh4hmbey6AqQ/QIrlUrV
2NhUU1NTW1vfpGwbmI050bEYKFEAAIwWLBwhn9bd3XP2zBVv72CqSp4Tbh5K
99Fzozbc+DzHBQs8NyVubahv1mh62eNdre6RVVQXFoivXrl55vSFU6cvXLl8
Iy9XKJcperqpySOQEwUAAAXUiRoz6FHzEZUo6JYFAOPCYNkIOmtra5MRN3xr
SxMesY8DY9LBgwdfeOGFGf1ToYbRnUCSMiuYOlHw7zId6O3tRf/QZZLypO07
vb1DBTyyQq+A58K0LKfWbj4+Idu37yyXVqKDyRAMB1WEDkVkWXfvJyelR0Ss
8vcP8/YOXLJkaVBQxOrYdSdOni0uKWOXvoecKAAAzIN+qrhMVtnWRlbBra6u
vnL5RsK6TciPubr6Ozp6Ozh4OTn5ePmGhIZG79hxUFhQ1NnRg0a6qqsHj/fu
7p7srAexsRs9PAKQ26T8pxvdfc/V1dVv1cr1tzPvdXZ2gxIFANMc/FyNnotE
IpFEImHvBEbCMErUY489NnAne1IeZseOHVzfBABYLAOVqFHx6B1FGxoa/vWv
f+Grffrpp4OmQgFmjo2NjZWVlVwu59oQYDK4eeO2TE6OU4LQKxS1BQXCc2cv
p+/Yv3VLyuZNSTvS9pw9c6kgX1RdXYMflqrk1dl3yZ4jPT09169l4qbnAnLS
ihur+7khh2rRIp8N67fJKnB1ODL0m7gnLlCiAAAYHTrDkC0rkyZu3Ibb5+mp
TFGlUimXV0kk5WWlFeXSSuQASSmJQqXqzbyVtXFjMtpuUrYhV7lAgL0fvbaj
xCg7w1w/KsvUNWn7DnTwRN8QKFEAYOYM7O8GjJwrV66YKEsDMy6Y4lGDHubl
5UX26HnYJw//NADAZiSd7xQKxZw5cwYdj8PDHPPmm2/W1NQ81AbE7du39+/f
X1tby37p0KFDuCrUs88+m5KSMj53DgDA+DHQk1y+csPDI+Bmxp3m5tYBQgrB
WuubmlrQYX5+YZcv3dBqtdlZD+ztPag4y5nRoPpPZjHs8fcPr5TX9L/m+ANK
FAAAY0GnLy2pWLjQ088v/PixM5IyGe4S3r/qnZYgiNqaxvs5BfHxWx0cPOLi
NusJ3eEjx7G7I1OhDEmkRimeNdGPXI6fONvX1zehtwJKFACYM/jRSyaToXjt
0b/9nz4gz3n48OH33ntvxmBpTkPFtkMd9tOf/jQmJkapVHJ9WwBg1oxQj0WH
PXjwwMHBgd0jYOQylAlPPvkkuhS64PBvumjRInTwrl27sAHFxcU/+9nP8BX+
9re/Qdu1KY1YLM7Ly2NPqgIsCHb9cNLD3Ll9D4dOS5dGHT50PC9XKJNV1tcq
m0ha6usbKyrkBQXCQwdPhIZG4wjrZsbduro6T59gvp0zHXM5UaKTIxWUOeLc
ACxG4fX+vYeMItjE3BgoUQAAjAWdvrWlc8vmZOTNkPtycVm8LCw6afuO0yfP
Xbl848b125cuXj+w/2hc3EZ//zCBgNTe7e1dbmTcaWtrCwhYxlLgTResUDGv
+vqGNjY2TuitgBIFAOYP1Il6KCYhcFxc3Ehi2EGzoUwOYI75/e9/P/ybAgAw
EmQy2UNH5cDtgcPW5MiKioph3vS3v/3tY489hqJRPVUV6vHHH0dnoXVycjIM
5KkOUyeKa0OACaJfVlJnZ/ue3QdxrEQViXJGgZifX1hgYCRa/PzCXdyX0FGV
I4qqjh873d7eSTU99yFlKDtXSoxyoyqcow0nssg5tQdf0JbviHZu375TN8Gt
o0CJAgBgdLCqiCuVzdu2pdvbG7KYKAUJOTeyUDnatuVjNckJbft4BcvlVWq1
WqPRbtuehhs9GPwnz5AKhQUrQ80o0nO6o/2rV6/v6emZ0BsCJQoAzBkcImk0
GpFIJJVKuTZnCiAWi+3t7Z988kkUmPzlL3/5+OOPn3nmmUGjWlwnavhQFx3z
5ptvOjg44P1//OMfjx07pqPg+kYBYOrR3t6+cuXKn/70p2g0/exnP7Ozs8Pb
g45EZs8wWvHLL7/M4/HQGm+ji+McdRNUKtV3vvOd3/72t0ql8uuvv8bnPv/8
85mZmTCWLYB58+ZZWVlBYpulMrBGQWdn54ULlwIClpF6FM/dnu+OK+4auunx
HCmJySXQf/ntOzmdnd06qlLK+fMXycLm9s7oYCrmYsIxF6r1niOTK+XispjO
BIDeeQAAcA/LDRL0sCU627vu3M1Zu3aTl1eAnR0zq86JrnrnERgYuX/fYapx
A3kFrUbfWK9ctmwVetWO72YncMLNRmmX6GrLd0QeEjckXbI4rKxMimf5Tdx9
gRIFAOYM9jwgfQwD8xFpNJqAgIDvfve7jz32GA5d//SnP+3du7e0tLSsrOz8
+fMpKSnR0dFLlixxdnZG0es///lPGxubf/zjH2j91VdfofjUwcHBx8cnIiJi
06ZNx48fz8/PR6HNxYsXPTw82PLUn//85+GzLwBgmjOov0Jj6qWXXmJymZ5/
/vn4+PicnBw0ym7durVv3764uLjQ0FB3d3eBQPDvf/8bDcwvvvgCj9D//Oc/
aKebm1tISMjatWvRuEanVFVV3b9/f926dc899xyjTb3yyivojUzeGr0Leun3
v/89bpD37LPPbt++fXhrAQAwG4j+G4Yf6+sbH9wr2LVz/4oVawIDw/38wvz8
QlHkFbEidtfOg1l379fX1xt6RXWptVptc1N7asrORQ7eKPji89yNhaHsXXEN
czKHikc23cu4mdnXR3Spuo1vNwFOApQoAABGh67fmMWbKPyprq4RFZXezLh7
4fyV06cuXb50I+deXllpRXMzritCUP9pi8USHdluryZ9x34PjyX2PIMObygV
Zee8QOCB9ri7+yenpMtlCnRWR0eXSqWauBsCJQoAzB+ZTDZ79uy5c+dybYj5
0tLS8u677w6aNYHC3qeffvqNN97429/+Zmdn5+HhsXTp0ujoaBTPJiQkJCYm
ojWKiGNiYsLDw319fR0cHFDw+/bbb6NIeahkjB/84Ac3b97k+qYBYMqwbNmy
ofKaHnvssddee+3999//17/+5eLiEhQUtHz58tjY2HXr1q1fv37Dhg1oA/24
YsUK9BI6AB323nvvoVOw5jzoIEVvp2dJTFu3bmVe+uSTT6DJmoUhFotzc3N7
e3u5NgQYXwjT7nXM/3W6rq6upqYWpVLZ2tKpUvW2t3XX1zXV1zc2N7eiuMxE
Xq6qUmTdva/V9aFfkkJh8bZt6YGBK1xdfcnkASqHCsViXl4BMSvjz5y9VFND
zuFF17mXnce83UTcHihRAACMEHbZOrSJHJREUv4gJ//G9dsXL1y7cT0T+Su0
R6ls1uv7+p+oxRtarS529fq6ugac3oC9IllOak1iVFR8ZOTqNXHr9+45ePPW
bbm8iiAIdEy5pGLTxu3d3RM4QQ+UKAAwf6BO1PD09fWhMHYoGWrGENN8Rlgb
eajDnnnmGRT+cH3rADAFSEhIGGooPbS15VDHD38kenX9+vWMAY6Ojnj/j370
o4CAgM2bN586dUqhUHD4mQDjCFMnCtLbLJvu7u6yMunpUxfWJ2wNC4sJCl4W
6B8RGrpi+fLYtB177mbdxz3NyV8DRmahNqqra3x8Qi6cv1Jb14AvheI1qbRC
LCorKBAKC4tLSyXomJ4esui9Wq1Ge6Kj4vbtPwKz8wAAMB8IgkA+cPeuQyEh
yx0dfcnpxsbcTudFi7yCgiJ2pO0pKSnTavFsGmNKJzo3ekW8q/PiPbsPoouQ
mU708NdqtSiSYjynuqcXuccD+496eASEL4vq6iJzoibozysoUQBgzuCBj56L
RCKRRCJh7wQYNm7cOEzQ+tCy5CMJewfl/fffh38LABieqqqq7373uw8dXyPp
cflQLYu9/cQTTzCFg3bv3v3111//4he/YJ+YlJTE7ScDjBc2NjZWVlaQ6mbB
EIS+IF8UtyZxkYMnq9OTEy4zzjQi9/UNPnTwWGNjk4nAUlfX4OURaCdwCvRf
fvDAt0WFxbW19Z2dnczlUdTW1NRSLq28czsnIWGrs7MvuuDBQ8f0E/nEBUoU
AAAjp7u759i3p11cFtMdGVzpeuMGB8hsOzp6f3v4ZFsbVTaTlKMM4/zYkVPY
czo5+URFxyJvmXkrq0hYWlIsLS0uKxKW3M7MPnzkRHT0WldXP1zJPDVlFy1q
TYgzBCUKAMycgbU6ARN++ctfPrroNHxUOxS5ublc3z0AmDWhoaFjHo+PCHpr
E2NaW1uvXr0aFxc3f/58oVDIyQcCAMBIYB530JPPvew8Kv5yo6o5sfuPM0qU
m52ATA9AS0LCdmqKCutSOl1OzoMFC9wFVC3fBQI3P9+lS8OjYmLWJSRsjYvb
iCKvoKAIFHzx7A09pyLCY4w18HUTodgQWImySy6eHBlqPhmICRu6NEYT4IkS
AKYIhF535vQFSn53wt0WcIG7IRbSHx4+cqKvr19WZ2tr++lTl3BDPfbxyCVS
Pfjc+P10fpetW3c01DcPGnuOV0B6PLeRclBCSiwqNPir8fOK6Jq8VDG+Pl74
yaIbpa3jYjwAWDx4pMtksjlz5lhbW3NtjjlSX18/hhB1DNP0BiUxMZHrDwAA
zJqhZs5OAu+9996gJhnrLUzY13zAZCIWi/Py8tRqNdeGABNCo7LZxysYt8Pr
L0P16xWFlShqw+ngoWOGcU2ttFptT0/P5UvXF/uEsiQs5nQ3Ki4zRmFbtqY0
Njb19fWNKnFohJ6EviQRe6bSloq5UKA0CZlRtqlC2+Sixk5tvxrs4PwAwCwx
8Sd1dXW+vsHY0dGe0G2AG3RjFnSAu7ufTGZsKUsQ+o62zq4u1a2bWeFhqxYs
cGc8nj2fEaacePbO9vZuoaErbt2829VFlitHf1sHJkX06+X3CBzPbbRNKcbS
ky1bhkouHp+FuhSfXES8lBJSlUoVXy8DJQoARgHUiRqG+/fvz3g0NcmEUV0q
MDCQ6w8AAMya119//RFH4phHN3rrh2pNIENZAEydKK4NAcYXQ4BzPyffju8m
4JFtx02m47GFKSxVkYudc1BQREdHB3Ohmpq6psZmnZ5QVFVfvHAtOnqdl1eQ
wMGdiunc8NrJySsoaPn2Lal5ucKuzl707qquHsp9TNTdrTorIwUoOmLiT/Bi
myRG70LPziNAgwKAKUR1dbWXR6BBaLJzJiUjnjPygZSKTopRtnz0ozM5ZU/g
as/34PEcXVyWVFYpmIHe19d35vTFnh6y/Hh7e7u4qPTc6Utbt6SFL1+zbNmq
sLCYiBWxWzYnnT5xXiQsaWlp0ZFd+bRiUdmoeueN9pmqoKpzR2Y9WtJu1e24
XZuWWUNuUD+O44KujJe02/VoXVY3gTXYAcCSwCNao9GIRCKpVMq1OebI+fPn
xxyuxsXFJSQkrF+/fs6cOUNFwcPj6OjI9QcAAGbN97///dEOTAyPx0ugQBtj
u8Kzzz6rHyLxCQQoS2LevHlWVlbGuVSAhWBQosok5S7O3nYC8ot7rD7RApQT
I0bhWXtobSdwsuO77dt7mCAMmT9oqNcoGtZvTKLEKBK1Wq2oqikpKXuQk591
937OvbwiYYlUWtHUqKSLc/bdvZNz5PBxXF9lpMlOI/UquGgL0d1LtKq07Xjp
1rUz2xOztHT3oTWhZVsMOVEAMDXQajVnzp6nc6JIPUrAc7GnK5Ybakbx3Clt
yh0neaYk70SujHGkWq02Kip+586DVfJqeh+B5SaVStXV1aHpJfOKdfRrVbLa
3bsOrFgey/TOY7s47GDH42u+/ilV4+2RBndy4PcAYGQwMRTETUNx/PjxGaNM
n2DKSTFdv21sbExeHSHz58/n9vYBwAxh+6vvfOc7o9OPaPbs2YOvgDbGdoXH
H38csqEAYEqD4h0UQN25e9/B3p3JicLRFp6BQolRrnRalKOA5xYSGNFQT9WJ
okOcquoaX++l/kHhly9dr1XUoQviEIyZKEc1Oif3dHV1iYpKk7bvdFzodWD/
UR37Kg9jtI9qhoSryVzY76s37gEAwNygnJKB7u4e5Albmjt279y3QOCB690J
eP2qlNsZ80Wd7PnuGxK3NDQo0blUhqfBO0VHr11g7+LlFZS2Y3dBgVBRVdfV
0W18R72+s7NTUV1fkC/atXOfj08IeotlYdG9vRqWVcbiBsO7uxE6Q7qYOumE
aX+LXS4xXotOr9HTfg/3E4SnPwAYFTKZbPbs2XPnzuXaEHPkxIkTWDt67LHH
ZoxYR8KHMRmnX3zxxWi7yWP4fD63tw8AZsXAZ48nn3xy1BISxc6dO/EV0MbY
rvDEE0+M3E5g6iIWi3Nzc5lvFgDLAIcMVZW1Go1W3aO5eetuaHAUu8ouLUM5
M+GYs6PPls3J8spqPTn9pJP8lSAHOtHR0bVqVYI93xUFayi82rB+2/lzV3Jz
80vEpWWlFZLSspJiaeatrAN7v42IiHV09ObxHO3t3TKuZxos0Y+raMNSgSY3
KYkdnbH2AQBg3igUioLCIjRce3u0Offz167d4ukZjBwaU9+JzI8iy5i7eXgE
xK5KvJt1v7ublJiUja3VVXV60p2S15FK5B7eQQKeC57E5+0dvGzZyvg1GzZv
SkrcnLR27abw8Bhf32B7ew9K6ndxdvO7eydneNse8Wmq3zzhifCGg6nxIMID
wKiAOlHDcO7cubFFqYiuri58EWtra2bnSLrJMzg4OHB7+wBgbpg8ljzzzDOj
HZh4AKanp+MroI0ZY5p+i96ag/sHJh2mThQIjJZHYYH41s27qh41ClmUTS05
9/KSknZFRKzy9Q1FMZerq5+XV1BAwPKVKxNOnTxXVibVaMhEgurqml0796u6
jV/lN9YrV63ZgJueC3g4t8rJ3t7N0dFz4UJPMpmKqriCRa0FCzxR/NWl6qQD
lnGtqkQrUeSvKyWUjd+lh31bStnrZwMAAGYGK+nImBOFHBryeMIicVcX+QW6
RtNbKa/Jzys6f+7K4UPHka9D63NnL6E9cnkV/lJGpeq9c/teYGCkTCbDfgZd
WavVFZeULQ1bzuhX2CWyOz4wbnBZWHRdXYMWnTPhf1gJk3sfT9i5oIbp1uAA
AWCk0CUL1CKRSCKRsHcCmJycHJMAduR0dnbii3z22WczWLP2Rn6FgIAAbm8f
AMycMVcsT0tLw1dAG2O7wqxZs0ZiIXjUqY6NjY2VlZVcLufaEGBcocZlYYEY
xUTJSemlpRKq5glJV1dXbW19ZWU1CruqqhRKZTM14Y6kWdmSceO2v39keHgM
Wd6Eukh3dzdB9KGo6tDBY0uWLOPTc1tY+VSGiS2OC72io9cWFIrRcxdOKmAb
MyhTJhlPZ0juIvRaHeQGAIC5Y9SoFYpab+9gBwePNWsSs+7eR66MmdWmH1C+
qaFB+eB+QXz85oULPd3cllRUyLESRRB6iaQcbTU2NiInuSZ2g49PCLuDHiXC
u6M3ilkZf/VKRn19Izqxs6MHMXzzl5qauqyse5IyWV2tkpls8ki9icdd+Tex
BPweAIyYga0zATaVlZXDR6PM3L2BElNrq6GP56effjrw+JGEunFxcdzePgCY
Oe+8885IhtLjjz/OHoBonZKSgq+ANkwGL3Pw8KC35vbeAQAYM7hwrkhUjJtD
ubgsjo/fmnE9s7RUgkKkjo4utVqt1WpVqt7m5la5vEooFB09cjJsaZSAnKXi
smLFmr4+XFOXzChAoRl+gqqtrc+5l3dw37HY2A1hYdEhIctDl62IjFyzeXPq
hfNXS4qlVNYB0dbWlpcrpAwZmLNE7lGr+9DBO9MPLF0alZK66+LFy8LC4kpZ
VVtbB/sw9v3gfXRBYMK4c0zf0cMDIQBME7q7ezZtTsISuj3fNTBg2dq1m459
e/p2ZvaD3Hzk+nIfFKLtkycuJCRsDQiIQD7Tlk+6wejota1thtkfyFuujduo
bGrBPyIPVqNoKC0pv5+Tf+d2zq3MLOQYi0tLqqvqyMxSyrtUV9YmJ6UzFcv1
/d0OumB5efmhg8f8/ML4fDcHBw9f39Dw8BjkDy9fui4qKkVuGTlSnPzJCmVZ
6yE838hcWz8Hyy5gNaKzAQAYAXhAyWSyOXPmWFtbc22OOUIQBC5EM/ysus8/
/7y7u7u0tPTq1auHDx9OTU1dv34981XmkSNHkpKS9u3bd+bMmYKCgqamJjwh
6KEcO3aM29sHADPH1tZ20LHDHq1oGz2uKBSKu3fvnjhxYteuXZs2bUIjEV8h
Pz8f/Yh2Hj9+HB2ADkMHDzXY2fvRW3N778DkIBaL8/Ly1Go114YA4wv5rb9K
1Xv+3BXDV/Z2ZEMoR0fvxYtDwsJiIiNXR0XFR0TEBgev8PIKEgjI3nl4vomv
bzBVVsWAQlHr6x1y89bdZmUL/U09OflFpVIhZ9LZ2clkWyH6CG1xSVl8/Oa9
+w7pmZgIT6Ojfuho63yQW7g+Yauzsy/dvI/q4mfv6uYWEBwcGb920/Fj57Lv
3pNIyutrG9R9mkFn+REDAybdEGu8OUSEBZEXAFg8jcrm5KR0cuocqUe58XmO
zKw65H/wGjfUwwmfWIaSyxRMmTuC0K+MXuPmtuTokdMVFXLcKY9BZ3Q5BNGn
k8urkBPz8QmJCI/p7jL924o8p1Ao2rY11d3dn5nWR8/4I+c+U/a4uLgvCQlZ
jnzpyWPn72XnlpfLGuoa6fJ9D5GkTN0aS7RnfLjpqwAATAxQJ2p43njjjWHE
IhyZfvDBB6O6Jop8R6JECYXCCbopAJjSME8RERERIxlK9fX1Q11hIA0NDSO5
ZmRk5MivCUxdmDpRXBsCjDuEVqtrb+889u1pV1c/Kh+A1Jr4ds4oHEMhj73A
2fAjHX+hCCgqKq6+Vslu7VRdo/DwCEAHh4StPHP6oqREpmxo6lMbJqlRa6Kz
s7umujY/tyBp+w4UrPF4jvv2HmWFSqRuVFffeP3arcjI1Q72nkyVFToQc7Pj
uzst8l65MiE0NNrLIxDtXLjAw3dJ6PLlsenph65dvSkWSRRVNe3t7cbmUP1K
6dLFUshVnx6iKwAAKFSqXoLoUza1nD51wd8/Enkn5HaQM8T9Q7EAxSN1eDeq
g56Tn1/YieNnW5padeRcZhVznUMHT1CClZO7e2Dc2g1nTl54kJNfUiyVlpWX
lUlLSyX5+YVnz1xcu3aTp2cgNWfZbdvW1D7CWLGqSdl2+07W6lUJixw8sR/G
paXQNbEetWCBa3T02owbd+5l5x4/ehZdKiQkysPNH720aKG7r1/48hWr0tMP
UP6wrEpe3dnZPmj9OrqPHqOiGWyApzgAmEzwiNNoNCKRSCqVcm2OmcLn8x9a
3Ontt9/WU58nOVN6BN8trlmz5qFx7ve+9z2mNgUAAGyYoXTy5MmHDiU0fsvL
y/UjeMbAB1RUVLDPHeqy6K1NjAEsknnz5llZWVVWVnJtCDCeYHlGoVBoNOgv
rVYiKd+393BgYPjChe64uBO55rkzJXZR6BQVE3/jemYTNf2kra2lp8fwVT76
s59x47YhXuM5L1rkFRgQhQKiTRu3pSTt3Z6UFh+3ZdmyVV5eQfb2HjjHKThw
eXmFXK+lZqloCXm54tujpwL8w0j5i+/Ko5OvqBZ+ZHKCp6d/UvIOYVGJSqVq
b22rlFUJC4svXrqWlrwrMnK13+IQBwcvgcDZ0zM4eOmK9eu3nTxxNvd+gVRa
0dCgRM94pJF6rYkkhT8FqnAxtYfQDZ8iBY4OACwDk7FcU1NXkFeIt2tr6+/d
zd21Y19E5Ep//zAP7wA3t8Xe3oG+S0Ijl8ekpuy6czunproeC/FNja3V1TXU
eaQPaW5uPXzoJOkweYZCech3OTh4kI0bnLztF3qQDs3elVS07JwEfKd9e4/W
1NSQXkhLVFdWnT9zNSQ4cgGfdr9UBhS+CFo7O/tu3JBSkFeEa/BqdURfXx+y
orW1Hc+evnjpempyemTkmsW+wQsXelJOO3jp0qjEjVtPn7qUm5tfLq1sqGsk
+ihPSOC1bmDqFKNKMflRg87UA38IAI8OM5pgQA0Dzl96qBj1zDPP/OpXv/rr
X/9qZ2fn6uoaGBjIVCzfvn27pyfyioIvv/zy7bfffvHFF0dSt/z999/n9sYB
wPxpaGhgSj+ZzMhjj6Ynnnhi1qxZaEz9+9//XrRokZ+f3+3bt/WU97tz587i
xYvRTvQSOgAd9t3vfneoUclcFm2gt+b67gEAGDto+BfkizNu3untNXTBa23u
kJbJsu88OHv6wtFDJw7sO3zy2NmrlzIK80VV8uqebnLGvU5PVFXW7kzfx0wq
QXu6ulTnz1328AiiojA3KpIiMwrIeMrOlZrZ54z329u7Jazb1NBAZlWpetQi
cVlScrqnZ6CdwAXnGzCTX/BGQEDEt0fPlEuryMQBnb6jowvFXGUlEoWitruz
Cz269ap66mqVklLp3Ts5Rw6fWLMmMTg40tXV307g5Ojo6x8QunJl/J7dB2/e
uC0sLquqrmnr6oZu4wAAMFRX1yxevFRYWKxCzoFU1qkshd4+ZUNLTXVtpUyB
1o2NTYz2jlB1a27fuuPvHyaTVbJrNLW3tl28cDU4eIUt35maXEy3bLBzpqY/
kymmyNcF+kdcunidKsfXV1xStnffYR+fEKw+UTPvSAEKi/DoOvZ819OnziMf
2NdHJi+pVL3iotKU5J2rVq7fs/fQzYw7pcVSdAtdHZ3IEnVPb11dQ1lJOfKH
hw8dXx2XGBQU4erqiy7l7OiDDI6KiSfPunVXXFxaU1PXpeo2To4e1h+yBSiI
mgFgHJHJZLNnz547dy7XhpgpIpFoeOFoqFdJqZ/ivffee6juNJCBc38AYJoz
6F//X//61ybjcZiqbsz+xMREfLUNGzYMHMUDTzfZ88Ybb8CjyDRBLBbn5uZO
mRZmwGgoLCwS8Fy2bd1RUlxuUgqM3eVcTwUqVA5A843rmQEByyIiV5JKFCuN
SKclKirk3x49FbZsBZ7rh2Ulnj05vWXBAnffJWHx8Zvv3M1pa2trb+3Iys6N
W7PecaHPAj5OIXAzVGIROGNJCsViDg4eeXkFVF6TtrGx8VZm9sqV8QsWeAoE
7l5eQWFhMVs2Jp0/dyXvAfl1f1NTE9VKXdfS0lZRUVGQLzp/7nJyUnpEeIyv
b6jAwR0FdF5eIWFLl2/elHLm9MX8B0UV5VVKZTNBEPREQtMWNuDlAMAiYQ/5
6uoa5E/4C1yQR8q6+6ChplY7oAGmYRYbQTTUNd6/lxe3bvOChd4erktkssqB
nRGalS35ucLDh06uiVu/dGlUcHBkQFAU2lgTm3Dw4Im8B4UN9c093aqCvKL1
G7Y4O/pQupMzNV+PnBaNJSl6DylepaXuPX7s9L3s3OysB7FrNyxy9iGVLsrB
Ynnf2zsY+cNtm1POnrucn1uArFIqlQRFE9lyQo79YUrybk+PJeRb8Mjph56e
geFLozdvTj175lJerhD5Q3QwunfTOwcvCAATCdSJeigvv/wyOxdiJBErWldX
V+PT33333eFPGZTMzEw9PAcCwMPw9fUdOPqGGqfMxrp16/TU+EpISBhmVA6V
Z7V48WLGABiklg1TJwr+oS0PqnceOfvD1dU3Lm7j9WuZZWVltbX1HR0dvb2a
vr4+lapXqWyWy6tQIHP40PGlIdEoXkOR0YoVa/CsN4whsxyXHO/okFVUCwuL
b2dmX792K+PG7Zx7eaWlEnRZrVZbX9948cLVsNCVVLRlUJ/oerxkfERGWDwX
ujgwWUF9yZJlUVFxwcEr+IbIy3CKIXWK5ygQuDs7+wYEL4+JTdy/73DmrazS
kgqForZXpUbBo0qlQrdQV9+I34Vn72ovIOM+e76ri8vigICI1asSDh44euvm
3dKS8hpFQ0+Pul+xXh1UCQAAC4H5I8ZWopCX27IlDfsT5BwW+y9DzvDYt6dv
ZtzJzc0vLCx6cL8g8+bd48fObFi/xd8/3N6emjRn5xwdvba9nZr9QYs2un5P
RGTBku5OVWtzR3NTe0dbJy6a19CgzMi4tXx53MIFXsap0P2dIe7Nx4jzyMUh
f4WWBQvcDemmhsRRN2ZaNHaYOB8VeTb/oMjVq9cfPPDtrVu3i8Wk+62vVWbd
vU+VqHKhlS4XO4ETzlal/gr4IX8YG7vh0MFjmbezy0okdXUNuLUfq3eeVg9P
fQAwTuChpFarRSKRRCJh7wTYuLm5DR/VDhq9VlVV4dP/8Ic/jEB56seLL74I
RaIAYCjYburatWtDyUfsDZPRGh8fj09HG0MN4WG4fv36oMYAloeNjY2VlZVc
LufaEGDcIXp6es6fu4yjITyZbtEiL6p3XnRExKoVK9aEh8cEBUWg4AULVjjS
WeIXWsjqnYfpn1DEfI1uKDCi0WgkkvKD+476+YXy6L5Uhul7eCKeMSJja1Mu
TG4V/e4mr7qRIZuds8kpKF7z8g1Bxm/btuvC+SsosFq8eCnVg8+dHYWZbKOz
vL2D0Y1v377z4oWrBfkiWUV1S0sbQegBALBgGhubUpJ3khIQz5Xxh9gjsX0F
e1m5MoHsnafrX19u6LcgCKJSVnXi5LmggEimIwPjAE3exZ7vymrex3jIfl4O
C1BMISmT4xcImFnSpGfz9Q0NCVnO5FmxPSG+R2pxNfGiPj5ByIsmJacjL4r9
YXNzKzzxAcA4MjAZGxjIwFB3JMhkMnz6O++8M3x4O3C/q6urHv5FAGAEaLXa
F198ceQiEmbNmjV4fMXFxY12aKO3IyA2A4CpDPnVNtlQnKy8dPToGWc3P6oy
uftQkRGzxMSsq6trQKfTPoBgrZlMA2NE1tneVVRYvGVzspuLH92Lyom+uBst
QLkP+l60MGWiRzn1P4z9o9MQZrv1j9cMAZ2Dg5ejozdeFi70ZAtiZN0qgYuT
y5KgoIi1cRuOHjlx906ORFKO7r2np4f1QRo9Yb8JfcYpPYTJYSblf+mTWWsA
ACaR7u4e9BzV1NRy5uylJUuWYnfBeEK2G8Ebfn5hp06eb25uxefqWalWhoZ0
/YOXnh51kag4NW03k4/EuBo698klYEm4r2+og4MH7X8Mbs3OzgmrUvbULGZG
aOLTSaGs5g7O+Fw6Ocog2pu4RPLrBgdPD48lgYGR4eExUVHx69Zt2bIlbdu2
dLRs2ZqyJm79iqjVS5dGIXucnHzY57q5IX+4fG3cxqNHTmbdvY/8YX1944hm
7pv6w5EDj5qAJYN9hUwmmzNnjrW1NdfmmC8o6nz11VdHG67idl2I3//+93jP
MDGyyUt37tzh9pYBYArh5+c31FAaitjYWHwu2hjt0EZvx+39ApOJWCzOy8sz
KSIEWAREVZVCo9HotIRUKt2//xiKMtiCDHtBMdTK1QkZ1zObm5vRme3tnUyd
80FlFp1O29jYlHkrK2ZlvIODFy069UtnclzohV69evX6oYPHVsclhoQspyMs
N7r/FAoJHft/j++GU6qY8IrJCjD5kZV55eLo6I2Cx+XLY5OS048dP0NOunlQ
KCoqlZTJStGqTIqWkpIysagsL1d4M+PukcMnNiRuXRq23N3dn8dzxTEgeutF
i7x8fYMjI1enpe69fOmGSFgil1ehj8LY+IY1SWfgpz3oPwGB21X1O2ygeAUA
wERRU1OXV5CPt+vqGrKzcnemH0DDfMmSZV5eAW5uSzx9gpEDiYhYtSNtT9bd
+7WKOjw8GxtaqqprBh3t2CG0NHfk3Mtft3YrckFYhKd9IO0JF7iEh8dcvnID
XadG0SCVVtzPKWBaNhhnIgsMbUxpX+dky3dkHcZIT5QDpA7GWhZW1Hn2rsj+
+LWbjn17GtmPnB7y/EqlUqXqJYi+/oaT96XRaJFbq62tl0jKkas8euRkVFSc
s7MvrWW544aqixb5+PiFoI8lLW3flcs3iorElZWVbW0drE/BsGZNWiQGrI0f
l3G7v7I34LMd0T8rAEwVoE7USIiMjBxVrIrCYWbCo5WV1ajOfeONN7i9WQCY
WgiFQmbcjXCUxcTE4HPRxqiGJ6KoyHRiDmDBMHWiuDYEGH8KC4tuZNxG8Qj+
saWpWVIqzb57/9zpS98ePnlw31Gydx4KMQpF8qrKXhUuoETqV+k79qi6NQOu
R0YNKLSpqqw7c/picHAkiobo2S5u9Jf1ZBjl4rJ40+akgvwS3GOXIIgKuWxH
+l6mY5RJvGYyic9EiWIrZuTpdpSKJXAPWBK5MXHb9Wu3ysqktbW1tJqK65MP
GeAwMVFHR0eFrDrjxu01azY5Onry7Zg0CScqZYIszOLh5r80dMX6hK3Hj53J
yXkglcgb6hpRHNcvOB2s9rGhWRX9ofU7mGUexFwAMI6QIochd9G4s7q6xtc3
tFBY3NXRzezu7e1tbGxSKBSVldXoADL5p7OHebW7R3X7VpZ/QGhFeVX/NzCs
axQNVy7fCA9bxV9Az/KzJzVtWkFyWrTIZ+3aLfeyc1tb2yl7dMivnjt7KSws
mm7ZgOuWO9Ipo4yMb5yhjBVynDRF131ywZ4KveTA9wgKDD9w4LiwsIQs06cj
DBbq9P3T2omBM1BYhaHIje7untJSyb69hxcscGennuLkMWqeoCMyw93dPyQk
at26LSdOnMrOeiCVVjTWN2jUQyhLgzu3wRV4qE8FWCT4V1qj0YhEIqlUyrU5
Zk1NTc0wvd0HhYlc3nrrrYcezI6gt27dqofONQAwGj7++OORy1CI6OhofCLa
GOEpuNgUeiNu7xSYZObNm2dlZVVZWcm1IcD4QqA/roUFYrJ33va0ErEERV46
5qUBf3h11PHNyqYb1zL8/cPCw2PwtBQ2anUf+ru/e9chb+9getoIWW6XR4pR
zngWyaJFXkeOnEZPXOhgSoLqKy+X7Uzf5+0dOmDOnRvzRT+f6g81UJgaMHfG
zZbnumCRe3z85qzs3LqGeibwNNxFv+/lDXuG6E5OR23U5BpFdb2PT5BJEgK6
L2ZGDGWhx8KF7ouXRERHxe1MP3D9egb6VFEMS6ptZCimYXd7N/4zEP3soT5m
UqSiIy8omAkAE4tCUevhHbRggfuqNRuy7uTUKhqYQrW6/kIyGo4NdU052bnx
8VvtF3p4uvmTvfNY9PX1oT3fHj21xC8YVwJHa+QZcCMGtLbnu1NrV3lVJVmD
Dnd70Onr6xvvZ+cfOXxq7dpNISHLXV39WX7G0SB9k5IUdoxOQ8wfdBGgl+zJ
/WFh0bduZjUoG7HQNFQsxXgYfAx1HCODm56D/HVxcamHWxBVc88VS2RsH+ju
7hcbuwHZ7+a2mEpG9Vzsv2zVyvXoj8KNGzeLRSVVVYqOjg7s5pg18xHTxvSb
4agbxnoAmOIwDx7wSz4SBALBjNEkXYjFYnziQ5Uo9jWff/55/CUpAAAj59Sp
U+zR9NCZsFFRUfhEtDGS4cxcFr0Rt3cKAMA4QD31oLACTz1zcVmMIqAb125J
y8prqus72jp7VT2aXkLVpW5WNlVW1BTkFR7a/21ISBR/Admqieqd108k6elR
Z97KSkneGb4savHiZQsWeJIxlL0rnt3GfIfu5RF44cKl/FwhmT5U34wugp6/
WptbUPhWWFh08cLVpO1pyyPW+PqGOTh4MGlU1LQUQwUndjEr/oAaUygIys0p
7OnuJYNGrb7/d/GDz48zfiQ69hpBtzOnAjT0ySz2CWVlAjjTBjiHhsacPXs+
L7/w0oWr27elRoTH+PoGO9h7Ijs9PQOXhq5I3LjtzOnLuffzyqWVTY3NKFxl
3lHHCsRYloAABQCTBPJdW7el4mwitPbxC4mL2/zt4ZOZGVkPcnIL84V5Dwpv
Zd45eeRs3LrNS5Yso1RxF3ueS/SqdUzAYkiG0umam1vLy2V5+UXI0W3bmhoe
8f/Zuw+ouLLzDuD2enO8J86J49iOfeIkjnPi2Nl1EuskzrGz3vU2b9GuV/I2
rSR6HXrvHVEFqICEJIR6L6CCkAQqgAQI0dsMZQaG3ntvA/neuzOPxwyw7K5W
aNH/d3zw8Oa9O/c97XzMd+e+725zsPM0NLSilg31LD/damKob71F38TWllsY
Ij4uIeXqzZLiCjqks6uHGwGb5e7pq6+vLy+T3bxxm+JhgF+Eo6M3i6jiwXnh
gXimKL8WnkVCwvHe7oEF42hCoJufirnw5rhlZyhpzo4bjDp65JT4ddlPeunE
gycojM9MTff19NfXNZWWVdxITaf++/mG2Nt7GhvaGhhYW9m6eXsH7959MOXq
jeIiab2irrurfyVlR5GnwxqmVCqff/75d999d7U78sTReuNLpdJnnnlmJUkr
I9zC88ILL+hmtUtlykKCrNsBAFjGf/zHf6z87RkYGMjeX/Rg5UfRS6z2WcLj
JpPJiouLV1SVFL5uxsfH09MyRNWZrIyNbRwcvDRr50X5+YV6eARQ0rTVQL2k
FKU5Tk4+lCVxx4tuZ9P8uVaNjU00NzfLpLX37z04czIpMmKHm1uQxMKJtS/c
2WFmZu/q6h8SsuP0qaT7Wbk11XUtLS2jo6Nz/KLqbW0dVTJ59v2HZ89wLbi7
+UgsHYRlykXDUPMlzalZ6urQ8OisZibD7Nz83SgC3S8fl1u5RrifbnZucHgo
KCiSv3FGXf+cLX1FPx/kFipq61qaWkdGRmb5/jc3t9bUyHOy80+dvhAWHu3u
GmBmaU/H0lk7uQSEhu48eeLcvazc6upa2pOOWubfCB+EAL5qXV09hxKPc+/u
rab6W600k5HMacsW9fudG1dn05xYtNkWFtPc2MIfveitvurB5JGh0Zbmjqqq
mux7OSdOnosI30lxz9Lckb2EUIHc3NzBzSUwLDTm9KkL2Vl51VUKiqIsHo6P
j7a0tFGsyMl+eOb0RWrBzS3A3MyWH5PXrkaut8U8JHT7wMDA7Hzk46cYzenc
Jqzu56zWgyWw+UvcpK+DCUdZnShxRXQ6EQ+3wIiIXdRD6mdNVW1rcwf1nw4b
Gxtj8TD7ft7pMxdDI3a6u/mZWXJXwNjUwcXFJyxsx6mT5yke0lWiM6WjxFNV
NY9RNw/WLNSJWrlNmzatfE5UeXk5O+qXv/zlZ+7Mmv3+979P8XN1zxHgayop
KWnlY0p+fn7sKHqw8qOSk5NX9xzh8RPqRCEjXltYTScV/c1NTkrlR4os2OSl
hTOOLEVTkrj70YJDozvbe5aeTK6dL0yrZro7e+S1yuKi8pSrN/fsSfTxCbW1
dTcwsBZq8HJ5jZGVjb2bn1/ovv2J11PTS0vLG+obe7v7VLye7oG6OmVZqTTt
5h2+UInueBT34G5GtngOwHwP1ZWXVPMjSyvouWgL96C1tZ1f+kpdpGWLvhk/
48ucJWXUfzs7D3//sL3xB29cv8VWPO/vHaA+qFRzPT099XVNJcUVqdfS9+5J
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
akOtBQdvP3b8TEZGVlVVTVNTy8jwoLqLmrSOm6wlvI5K1dczqKhrLCvlVjlP
SDgeFBjh4OBFPVdXatK34oekuK7SFkqLjI3trG09KYX08Ajw8g318w3x8Qn1
9QnydA9ydPG1s3E3M7Hj51ZJhArkXEHyreqF+diVMdSXsJEudoegTnUUNj/K
jE2OEuZQbREtL8WqoBgZ2WruQOHu3TM2ddgeubPgYSFfzndOnHMtrLgOAF+V
nq7uQ4nHWdDg3u/8NEXubW6gfgvr8YsUCGMy/Np5UY0NrQs+F83OVyYnYyOj
qvnfuYBIcay/b7ipoVVaWZNx+/6RI+co9Lm4+FD8oVfZrGdKD1g8PH7iTGZG
tkxW3djYPDw4NKvS3N08w9awU82v6jkz19vbX1ffVFYqTU/LSjhwOChgO8VD
vq64RJjLxFb55O7g42+v08xlkrCT4hfd43bYzAclfX0rTUS1pPjJwintuWUL
dwse/S1grRnoi+/RM9MMK3EDVmwfNnTPr5oqFLwyo6c+3WrCPbXFnM1upZAY
FBKZfT+vq6Nbc2ZzbW0dcnkd5YZs3V42JwofQmGNEa8Rudp9+Zrp6uoS7tFb
dAxq+YRX60FSUtJqnxDAmrJ58+Zlxn5XUudNeEBNsTYRJwHWFtX0tGpocOxy
0jWJxFFdqohLxCT6emZclrHFUrOFfW1tSmlISDi3dt7MzMzcgqyLtTc7PT2t
UNTnPyiura1ub+2YmhydXVjOd3Jysr29U16nyH9Ycik5JSZmn7d3sLW1qzDN
wMbGxdtz265d+1Ou3iwuqqDWOru7uPlXmtfgmlLNiucejI5NtbS0VEsVOdn5
Z89eDg+L9vDYZmnppBn84c6LTkdfj0t/9NWTl8y3buHHiAy4b/Mp+WKpWVBg
xJnTFyPDdrq7B1paOojqk5uJHlvwhdzVlcm5nm+1Ek2OkmhGpfgCKQtu5dOs
b8Xns9Z2rgkJx6uqpGOj3BQIukp0mjW1iiNHTyYmnky/lUHpKuWh/KUGgEdD
d1WFsbEJiie9vf3Xr6U5ufpxM4v4W2W5N+xWU2GJOtrCRqWcnb2vXrnR1zs0
rZoZHR2fn7/JBotmZ5T1zVcup7q7B+/ctfdS8rWHeUVyeV1HW/vU5KxmkJmN
uKimpqY6Orqqa+ryHxZfSroZE7OXxUP1bcgGfDz0CoqN23f1yvXiovI6ZX1n
V8/0lPolNeMz8+P09HB0dLSlpa26SnHv/oNTp5JCI3Z6eARRPFQPs7PYrj4v
MzZMpFmcggv4dHbpaXfr6+uphZzsh6dPXQgP3+nsSvHQic3hZEusakaWhCpV
ppqbkdV3T3OBl58TpadZi5ANv7NpWix+Wlg4xsYmlJaWjg6Pses3MzutrGug
i+bm5mdsbOfs6EPx/F5WLl+kC3OiYG1SKpXPP//8u+++u9od+To5fvz4d77z
HUpU/+u//iswMPCHP/zh8gmv1gjVs88+u2nTJktLS/aUsbHx2BjKcgI8GjU1
NS+88AJ7c8XFxf36179edMRpmXmM69atowPZY2qquroaI/ZPLZlMVlxczL6X
hDVGoahX8ejB+XOXPD0DTUyshVEUPdHKdDZ2Xtsjd2bfz+Om7nClttW1TdgX
9PS/sZFRmbR2X/xhNgRkZGLv5OQXHBx97PCZu3fuc4MqyqahgWEhjrAqKHOz
M/39/Y3KlopK2a3bXBWUgIBIZxdPY2MbNvHAzMzexSUgODT65MmL97Nyq2Ty
5qZ2SluEulIsAVTPE+DbnpmZ6enqpTMqLa64nnprX3yin18o9V/fkNo0+1SP
Gx3azP/UrD/OJWX0a+bd+42NjSzU9fT01SkaKUVKvZYWH3/Y1zfM3t6T3bEi
Go8SF043o0vnx91642xgYK1JXedvHpzPyAysXV39k5NS6usb6MqzyzEyMlZR
Jtu7J5EvKSMxNrYKDY3Jzcmn7Pjx/hcB8NShd6JcUT/HB5OOjq6C/JITx04H
BIS7Ogc4OHhZW7vTe9/Fxcc/KOzYkZN5Dwo72rq5Yfy52fbWLq4eHUfFhqEm
JyfLSqVnziYFhcS4unmbmtrp61vpb5WYmNg6OPltC444cuRMxp170sra5kau
dpMoHqoboXiorGsqr5Cm37qTkEDxMNzJiZvgxKKNqamDi4tfaFjUyRMXMrPu
V0sVLU2tYyPjc/PxUKVVQX1marq7u7deUUcdS72WvmfPYX//CBt7DwNjLkxx
8ZCFqS1s0pRpSEj0rfRMCn3KugYKg3zxwLne7j66SiXFFRQP9+zhIqq9rYeR
gdX8MB0/Dk8Rclvw9rt37iUlp+zcEUdhk4+uElbP3EDPSii15+DgcerkOXmt
Ulgvgx5UVykSE0/a2bjzFf+s/P3DMjKy2tu50hD4/AlrGOpEfV579+4VMtZn
n3324MGDU1NT169fd3Bw+J//+Z+//Mu//MZiM6OeeeaZn//8559++mliYmJX
V1d5eflPf/pT4dk//vGP1MhqnxnA15XwZ1omk4lHhj/55JPh4WH6UBESEvLm
m2/+3d/93aKDxoSeoh1oN3pv0iEffPCB8NQPfvADanZ1TxBWi1AnCh8F1xL2
r5mVmVNSWjmpmXHU2zNYW1P/MK+I0o1LySnnz126euVGZkZ2RXlVU1ML/Y1m
eRPtc+jwCa3/HqZmJjvbe+TyuqLCsqtXru/mKkRts7V24+/+4G4GsbFx8/YO
3rlz35XLqbSPQt7Q3dnD/d1fuKb5xMRYS3MHpSSU8V04f3n79lhPz0CJxFVT
kNzKzs6LWo7fm0CdLC2prKur6+keUFcY5lOw+enumjYp46P+V1XV8GWEz4eG
7nRz8Tc3d+Bv3zPVlECxoFdxc/PbHrn7/Jnk3Jz8mhp5W1sH9WeOHylqbm5l
LZw8wRUidnX1FVZap1z1wP7DlRXVXV09yoYmmax61869LEfT3MFnydcrtg0O
Cs/MyKFsVzjf3t5eOtPw0F0mRjbcquUSx33xiXTBR0dH58fa8M4DeESEwCAE
CIWi3srKSVYlHxsbm9UMaE9NTPd09ba0tFHoaG1u6+zqmRgbF96Ig4PDaWm3
3L2Cxe/lOdE7dXJysqOtu7ZWUVRQeiU5NXb3Ph/vYImNq2YCkqWVjYeXV9Cu
3fEsHtbVKbs6erlhmQXFprj5Wqx+OEWkC+cvbd++x8MjQGLhwk1h2ioxMLCw
s/GkeLiHi4fpJaXl9XVN3T19KpXW9CH1vYGsi0NDI42NzVJplRDN3FwCuaXr
+Omvwui6hYW9u4dvJMXDc5fo1elc2ts7J8a5RoSImnH3PtdCSLS9kzudCwVk
rjQ6f5GbGtsuXLws1DkXmqW/Ajdv3OEK4mkuFvcZtbiCYqa5Obc8BMVVelxc
XDo8OPKo/tEBnkws2tAbXyqVyuVy8UZYSl5e3rPPPquVw65bt2737t3V1dVs
n46OjrKysuzs7Dt37mRlZRUWFiqV6nHv7u7uCxcufPzxx9/61re0GvH09FzV
MwP42hsfH//3f/93rXfWD3/4Qzc3t/v377PB3qGhoaqqqtzc3AwePaBfWdXN
iYkJ2o12/sEPfqA1XepXv/oVZsU8nTZs2EARvqGhYbU7Ao8YfdjJzMimnOjw
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
muTkZIlE8utf//q5555bJuF95plnfvazn3344Yd79uxpbm5mh9fV1f3qV7+i
Zw0NDedwjyTAl0D53T/90z/Ru8nc3Fyo+pKXl+fn5/faa69973vfW35I6vvf
//7rr79OO9Mh7FhqhJqip/7xH/+R3TyLd+jTZuPGjevWrWtsbFztjsCjpCn/
xH3DrJqZksrkJ4+fcXX15786txQSMTYxwMBA4uDgtSMmLu9hkaaKrGpO9JX+
grCgmu3r6a/nvtyvSk/LOHDgGOUpDo5uxoa23CQBfStTCwd398CIiF3nzlyk
JEteo2hpaRsZGVqYbahmZmbYgk3FJRU3b9zZv++In1+4o72PvpEVy8Uszbkv
9yPCd547ezn3Pl9gvLVL+HJ/ltW24iY4cVWhaqrrCgpLr1xJ2b0r3ts7xNra
lU6KnalE4uru7r99e3xyEnfPnULe0MlKB/Pd4O8OVInXSZ9j66S3tVKymZPL
DZpFRXJlhC0tHeL3HqooqxwZnhDOpK29OzMjOzAwwtCQmytFOeCVy9cblK10
dpQzKpWNVy9ed3P34e6j0beijDXlWlpTQ6NoQUAAeGQW/QDDL5c5w8ZeWts6
KModPnQiMCjM2dnbwc7TxsrVwcHHwzXAPyji9KkLxSWVnV09Qpjij59T/5wV
t69itfVmVXM93QN1fKW7G9dvJx48GhSw3dHJnRvH1pNs1jOleEhhITwi5vyZ
yznZD2uqFG1tHWMjo1phh68Q1UPxsKyk/Mb1W/v2HPL3D7O392bxkNrhKua5
B1M7F86mUDu11XXt7Z2TE2NcH+bU8YSCl3rCZ039w/xCbmkJPh7a2rryM6bM
tuhJrCydPTyCoqPikpJTHuQWKBT1ne0dQjzUunRsvubo2ERza0ttrYKPh1dK
iisGBweFkau+3uGH+SWREbtMTOypq05OXmdOX6xXKKdmuDsWW1vb09PuengH
sflUdM0vnL9MiSFdOLaMKf8SKqHcOlZwgLVkfoEV5Fafx65du5555hlKTilD
KS8v17qJr7W1tbi4OD09PSUlJTk5+cqVK2lpaQ8ePFAoFFoVj3t7ewMDA//q
r/6Kmnrrrbe4lWIA4EugN2BRUdGPfvSjb37zm7/4xS8uXLggVBVg79P+/v7K
ysrMzMwbN25c4l2/fj0rK4s29vX1iZuiAy9evMjmw/z4xz+mZlfhfADgK8eS
Ce62tO7uXrm8Lu9B4fXU9EvJKRcvXE65euP+vQeVFdUtre1c4jA7p77PQgs/
oiXMbxJaZp+vxkfHWls65XJ5bk7+mbNJkZG73d0DJRJndteJgYHE0d7H1zds
7/5DlKlxlZ3qm/nVw7VLoI8OjzS1NFfL5NlZeZTLhIVHu7n6mlk6skkLRgY2
9vbcZKcD+7kKURVllQ3KFu7Lfc3hwthOPysdXFF993YWVwUlmPtC38zcmi3w
ZGRk7WjvFeAfcijx+O1bWVJpRVNj28DAgLgnWutbEUo2W5vbpqcnVerbD2fo
qKtXbnh4BLAl/4KCou5l5XZ0dMxxI/wT8pr6o0dO2Vq7bda3MDGyCwmJpovT
09VLbY6Mjg8Pjmj+TYSXBICvnmagY3x8kuJhc0tbY1NLa2t7d0/f9CSb4MPm
LmnGRhaxaG1t9UYVXwuurbWrurqaq3R3NikiYhc3jm3hamCgXh6U4iGr7HTj
2q3yUqmyrqGvZ1A3UR0eHm1paZNJa7Myc8+cvBAWtsPd3d/S3HGznik/+VPC
V4gKTzhw5OaNO2XlskZlS19P/3yU1sRDCm4UD6XSqru37h09dDI4KNLZ0cfE
xHbrVm5oyNjQ2snBNzAwIvHgiVvpmZWVsqamlqGh+VXtZkVnx1+9+Yp8bW0d
t+/c8/MNYZUAfXy2pafdbWnhikHRJ8xGRcO5s8kUe/W3WhjoWfn7R9y+lclu
eBwbnaqSyrLu5tBVamlqVr8cBudhjVIqlc8///y777672h15QulGP9py7dq1
v//7v2fzKP77v//bz8/v9u3bK6k3PjExUVhYuHfv3g0bNrDyyPTT09NTXN0U
AL4M+kP/6quvspvsfvSjH5mbm587d66uru4zD6S3tkKhoJ0tLCx+/OMfs7v2
XnnlFWEGIzyFZDJZcXExVk5cqzTJ1WcPd4i+tNOqXKS9YviceLiG/U9U3GN2
RkUpXl2dsqSk7Ob1W/viD/v7h9k5ehjqS/gcSmJp6eDhFrg9cvfFc5dzc/Kr
a+raWztYRRSxmZnZzs5ufsmn8pSrXEUUH59QOzs3PUNuQGmrgbnE0sHVw39H
5C7WTk2toqOtfXxcu52Jiam2trbqmvr8vIKk5KvR0Xu8vLbZ2Ljx5bO4SQIS
CyeuUHlM7OVLqfkFJfWKOnpd7kOLZjBK/bUmPwtienKqpkZ+8sQ5e1sPVpVl
96740tLykZERenZ4aLy0pHLXrv2sHDqd6d7YA9yzQ9w3cXRZsu8/DPAP8/IJ
j4s7eD31lkJRPzOFT0cAj9LiC8nxYU0YXxLvsdgcRZXo5zIWzB1VR4wFFc5n
KB52dfXQJzSKY9evpVE89PPfZuvgaWBgzU3+NLCkKOHu7h+9fe+Fs5ce5OTX
1iooHo6PTWvNDlKpVF0d3TW19WWFFVdTbu7ZneDnFy7EQz7aOFE8jNm+O+n8
lQcPHtYq5J3tXdxf9oW9oi0dbZ0ULQseFp+/cDkmZh9/d6ELi4f6+pZWVm4e
HgExMXsvX7pRkE/xUEn9n5qamr9PcZYy68aki1ddnHy3bjU3NrOLjNyd/7Ck
r3eIXmZ8fJIrl3fwqETCVd4zN3egkFtYUNrPl8sbGBiix9FRcSxCmpnY7d59
oKJCylXWmhP9QQFYQ1An6osZHh7esWPHL37xC/HdPX/zN3/zn//5n6+99trG
jRs3b96sp6e3ZcuWjz766K233vrNb37zk5/8hE2mYhnu9773PYlEIpfLMScN
4AtbagHQlJSUN95441vf+pZQBurb3/42BboXX3zxvffe++STT7by6AH9Sht/
/vOf0w7Ce5kOpMOvX78+p/OxDW/Yp4pQJwr/7muWSvcXle7TokCzSCqw1H8d
i3yZJXrE8h/KMpqbW6uqau5lPTh56kxE6C5XV18LC2dhkpK9vbt/QMjBhOPp
aRncl/INrf39g2w+u2YMjevk4OBgY2OzrLIqIzP7+LEzISHRrs5+Jub2bPKV
ehXygJBDCcdu375bWVHTyLXTT5ngfLf4mV29vf1KpbK8TEYvdzDhKFcVysmd
L2Ai4YplGVu7OHvTxmNHT9+9m1tTVdva3DE0Mjw8OlJeXh4bmyixcKKXc3Lw
PnH8bG1NPZejadYr37YtirpBJ8VuUVEo6tnXcC0tbddTb1HGx0pOOdOzZ5Pq
6pQzM1MLLxkAPCbLve3UUx+FkatFChkt8RdTu67dgkmk/P8NDQ01N7bw8TD3
5IlzYWEUD/3NzR1YPDQ0tLJ38qY4lsDFw7vlZVUsHmqOVmkGxrklJCgeVklr
M+7ep2BFwYcCl5mZI9+OGR8PPfz9I44cOs4mO9HOgwN9bCqrcDb0kFXJ4++2
zjpw4FhgALe0hLGxDVvjj1+4wSs4OPrY0bN379wvK6ugBm1s3LYaWNpYuSYc
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
p9kKMrjPOBCAbNy4cd26dY2NjavdEYA5nZim0l2+ip6dmJhobmmrranPe1B0
4fzl6Og9rh6B/GQnrh64gZ6VjZW7r3do7O59KVfTiwrLuElTnd0z0+PCjSfs
gboiSlVtds7Dc2cvR4TFubsHUoZFWRilUXoG1jZWrt7ewXt2J1y9ciM97a6v
b8RWA0tDQ5vAwAhK8TrauGp7szNz9crGSxdTHF286dX5Z7dnZGR1tPcsWHoP
URcAVmx2VggaKhWb3KSu/aeZ6aSpBDg6Mtnc0lFTXZ+XW3Dh/NXoqDgPjwBL
bqSIKw/FTSK1pjgWEhubkHL1JsXDujplZ3eXerkEzegU/RgbGW9paauWKrLv
UzxMjgzf4+7uz99fbKGeRGrj4ecXamJiS79yBfFu3mpuamcl71pb29Nv3mGL
MrByeTdv3Glp7lh4RoiB8HQR/vrjP/5HZZlpUbjIAF8LeKsCwJNNtdgY1CJD
UiyJ4pZ/YpOdyqvS0zIOJBwJCAh3cPAwNrbbom9G/zM3d3Jx8QndtuvE8bOZ
GTmUarU0tQ4PjfPBUKVpZFalmu7s7K6VK8tKuPXW9+897OsX7GjvY2Bszdox
M7WJ3b2PUrnhQW7C1eTkZJVMnph40sbKdbO+hN2EUlRcPjw8yrc7vdiq7lio
FACWJIw+LfXswqAhhMrp+R1muNmb9fUN5WWym2m3DiYc9fcPc3Ly4uOhxeat
lubmDs7OviEh0cePnbmflVtVVdPc3Do6PDY73yYXVGdmprq6eriKecUVN1LT
4+IOUTy0sfEIi9yV96Cwp6ePdpuamVQqms+dTnJ09NTTk5gYW22P3Pkwr4g6
sOhZYFgenkJKpfL5559/9913V7sjaw1u1gMA+LqTyWTFxcUTExOr3RF4qi32
iWJOWLJcRDV/u53wU/3MrLBtdJT/cl8mz76fd/5McnhEjIe7v6mFHeVK3KQp
A4m1raePb1Bc3MGUa2nlRRX1ysa+nn71cnbq1+WqrAwPjzY1cu1k3cu9cPZS
dZWCvVNoe3Fx6a6YPcZm1KaFvb3niaNnamrk3HrlmrXWF/RpDhV6AeBz04p/
C9bcVG8SPVgYZITgOTo62tzcSuGL4uHpMxfCw3d6ePpZmjvq61vya3paS2xc
vXy37d2TcD31VklxZUN9M8VDUak8frh+dm5oaKS1uW18dIq2jI1NVJZLE/Yd
lUgctxpwtaoO7j9SWVE9Pq5VEE93SA2LW8HTBXWiHjmMOAF8feH9C2JCnSj8
hwFPjlndX4S7UYRts4sM7cxqH8zVMKc8qru3R1nXVFJccT31Tmxsgq9viL2t
h6GhFeViW/QtLCwcnVx9QiNiTp84n3M/r1omb21tHx3VWW90dq6rqyfn3sOg
4HBDQxsDA4mnZ2DqtfTGxmZRZWCWtInmQs3O/w9zogDgs6hEP7U3LjI4v8jO
nKWWj5+Zmenq7KuvbyguKr927frePVw8tLV1p3jIltUzN7dzcfEJC9tx+tSF
7Pt5VSwejkyykDbYP5D/sDg6MtbEhCsG5eoamHT+CrXGr5++6CjT/PZFRtIA
1i72vpucnJRKpXK5XLwRvgq4tgAAXy8bNmxYt25dQ0PDancEnmqf//PDUl+s
r+gL98GhkcbG5qqqmqzMnJMnLoSGxri6+pqbO3DlofQsKCOzsXfz9Q2Ljz98
4/rtslIp5VlKZWPqtXQPjwC2AHpo6M6c7Hz1iuRf/CwAAL6gZUbsNRaODs0/
uyBODg+PUjyUSWszM3JOHD8TEhLt4uJjYm7PKuZRPLSz8/DzDdm379jVK9cD
/MMMDCTGRpKAgPDbd7La27p1ugIAaksNCAMAAADAU4h9NS98LJycUHV29Crk
DYVFJVeu3ti1O97HZ5uNjQslXGxsytTCzsHBgx5bWjrtiz9cXibj1ubDh0oA
WAtU4vpUU1MznZ3d8lplQWHp5SupFA+9vYOtrV3Z3XxmZvY7YvYWFZYNDAzg
VjuAZbC3lVKpfOGFF9avX7/a3QEAAHiyyGSykpKSycnJz94VYM1ZqoIuJVkN
yhaptOrO7awjh08HBUU6OnqfPZMkl9ep1GtOAQCsKVpD9MLNdP39g40NrZUV
1RQPq6sU7AMDJngArATqRAEAACxKqBO12h0BeNwWy6RUuo9pN8q8+voG2Fp7
s5gFAABPMWEJv+VX+gN4yrE3yNTUlFQqVSgUq90dAACAJ8vGjRvXrVvX2Ni4
2h0BeHyW+jZftEj64uuPs6eQfwHA2rPUHFGd7Qh9AJ9NeONgAiEAAAAAfBYu
yWKfHBdmXsIUKfYTHywBYG3SGnrSWfRTd3+ERIDFKZXK559//t13313tjgAA
ADxZZDJZcXHxxMTEancE4PHRSaxWkkNhGgAArEEYRAL46qBOFAAAwKKEOlH4
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
AAAAwJq3aJHbuSUyEWHjK6+8EhoauvL2tR4vNcC1VF7zubJaAFgty8eTRSPA
otHg1VdfXWGE0X31OVHdqi9pmZC11MZHbiWvsnw/V97O57XyyLzMfwAAAAAA
AABiy8yJWipPfLQZx2ObXQAATwL2/n3ttde0IszKx4IeZwRYfvB8Lfny877E
By4/FAkAAAAAAKDLycnp5MmTX7KR5ROQL3xfDwA8gT7XW3XlEWbROVcr78xn
HvIFJmQ+wqC01HcBj+qFHlVXP287iNsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAD/3x4cEgAAAAAI+v/aD2YAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAtzh0PRA==
    
    "], {{0, 1024.}, {1582., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{685.74375, Automatic},
  ImageSizeRaw->{1582., 1024.},
  PlotRange->{{0, 1582.}, {0, 1024.}}]], "Output",
 CellChangeTimes->{3.7938977835337067`*^9, 3.793898452247088*^9, 
  3.793898895039353*^9, 3.7939012334238653`*^9, 3.793901409040593*^9, 
  3.79398195782355*^9, 3.794408432495878*^9, 3.794408601670376*^9, 
  3.795008762515891*^9, 3.795009436044879*^9, 3.795015219129333*^9, 
  3.7950170578073263`*^9, 3.795018499415416*^9},
 CellLabel->
  "Out[469]=",ExpressionUUID->"1f4bc82c-5882-4d02-8276-68390cdb9f51"]
}, Open  ]],

Cell["In this notebook we also deal with \[OpenCurlyDoubleQuote]quarantine \
scenarios\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.793464032654152*^9, 3.7934640378868856`*^9}, {
  3.79346422439363*^9, 
  3.793464243686232*^9}},ExpressionUUID->"962c0488-c0f0-4c2b-8144-\
8a29eeed7948"],

Cell["\<\
This graph shows the \[OpenCurlyDoubleQuote]big picture\
\[CloseCurlyDoubleQuote] of the model development plan undertaken in [AAr1]  \
and where the model discussed in this article is:\
\>", "Text",
 CellChangeTimes->{{3.79500568593758*^9, 3.795005692979492*^9}, {
  3.795008769725748*^9, 
  3.79500889228541*^9}},ExpressionUUID->"e3a9e0f1-c89b-4591-9ae1-\
208d0e8cf195"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "SIR", "SI2R", "SEI2R", "MultiSiteExtension", "RandomGraphExtension", 
       "GridGraphExtension", "MultiSiteExtension-EnBloc", "Patient0-over-USA",
        "SEI2HR", "SEI2HR-Econ", "Ages-SEI2HR-Econ", "MultiSite-SEI2HR-Econ", 
       "MultiSite-Ages-SEI2HR-Econ", "Hubei-Calibration", "EU-Calibration", 
       "SARS-CoV-2-EatsWorld", "MultiSiteExtension-Econ"}, {{{1, 2}, {2, 3}, {
       3, 4}, {3, 9}, {9, 10}, {10, 11}, {10, 12}, {4, 5}, {4, 6}, {4, 7}, {4,
        17}, {5, 8}, {17, 13}, {11, 13}, {12, 14}, {12, 15}, {12, 16}, {13, 
       14}, {13, 15}, {13, 16}}, Null}, {
      GraphHighlight -> {"SEI2HR"}, ImageSize -> 1000, 
       VertexLabels -> {"EU-Calibration" -> Rotate[
           Style[
           "Calibration with real data for European Union", FontSize -> 14], 
           Rational[1, 12] Pi], "SI2R" -> Rotate[
           Style[
           "SI2R: Extension of the SIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SARS-CoV-2-EatsWorld" -> 
         Rotate[
           Style["How SARS-CoV-2 eats the world?", FontSize -> 14], 
           Rational[1, 12] Pi], "SEI2R" -> Rotate[
           Style[
           "SEI2R: Extention of the SEIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR" -> Rotate[
           Style[
           "SEI2HR: Extension of SEI2R with hospitalized population \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "MultiSiteExtension-EnBloc" -> Rotate[
           Style[
           "En bloc execution of multi-site extensions \[Checkmark]", 
            FontSize -> 14], Rational[1, 12] Pi], "MultiSiteExtension" -> 
         Rotate[
           Style["Multi-site extension of single-site model", FontSize -> 14],
            Rational[1, 12] Pi], "MultiSite-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site application of SEI2HR-Econ \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR-Econ" -> Rotate[
           Style[
           "SEI2HR-Econ: Economics extension of SEI2R with hospitalized \
population \[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "GridGraphExtension" -> Rotate[
           Style["Extension over grid graphs \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Patient0-over-USA" -> Rotate[
           Style[
           "Patient 0 disease propagation over USA \[Checkmark]", FontSize -> 
            14], Rational[1, 12] Pi], "MultiSite-Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site and economics extension with age \
compartments of SEI2HR", FontSize -> 14], Rational[1, 12] Pi], "SIR" -> Rotate[
           Style["SIR (basic) model \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Economics extension of SEI2HR with age compartments", FontSize -> 
            14], Rational[1, 12] Pi], "RandomGraphExtension" -> Rotate[
           Style["Extension over random graphs \[Checkmark]", FontSize -> 14],
            Rational[1, 12] Pi], "Hubei-Calibration" -> Rotate[
           Style[
           "Calibration with real data for Hubei, China", FontSize -> 14], 
           Rational[1, 12] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 7.}, {0., 6.}}, 0.05338164251207729], 
        ArrowBox[{{0., 6.}, {0., 5.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpEHNRucey7nbVzv/e7Zg+ts8IOlh4Bqd4iZ/bf
35d1aV2/sMPOE4WePnzX9+8u3DK3113YQX/S+8ipmx/sv8uWuOrYFyGHdukf
FQldz/Z71BX8iJwu5JDUcKmxnfvt/l/XH7W76ws5JCbYW7VKf9r/RXhHRP8e
QYfgvLoVJWzf9psZfcgytBd04Mhaxj3J7df+/Ubd+3S3Czj0HZ1joVj1e3+Q
jYL/2m4BByf2iPzGzj/7NYOfrJoaJeCgpH9j/aaSv/tdy69ffKYs4KBjK/tr
i/W//c6Bn9sdz/M7pBiq+3Xc+7e/5dxUpnZvfocT3N9W68T+3++XNk143h4+
h4gzncKLtv/fP0fi6642JT4HseJHLS/e/t9f9HTjD4daXgdowBw4ewYEeOD8
9DePvp6XRvB/JU40+lDC7cAI5bfo3mjSvcEFl2fx3/6s3RXBrz6mF/d/Dyec
/2qy3cvJdgg+WPkpDjh/jYG6lUgCgg+hOBwAJlSvTw==
         "]], 
         0.05338164251207729], 
        ArrowBox[{{0., 5.}, {0., 4.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.05338164251207729], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.05338164251207729], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo4HGbympsuPrTC/qSydvHXOewOcuvXBN86vMu+
Y1aS7kNNdoeqPTNFz04+am+Zskzv8DI2B41P0yd4HDtnf6/hW9lsYTYHn5qM
s+trrtiXfQhiyypgdXiSriTVKXbLnmXz7jt6e1kc3t+1EY+QeGDfcsLg18uf
zA6yNuatk1If2/802BQ3W43ZodqP4frnT8/sE9/Yczk7MzlETA4Vtb/5wt7I
VUh98n5Gh3MtoT4hba/s37t1zvtmyujwSImhxvjXa/sZH5cU5C5jcOjPDV1y
x+StvZZr6tzvAgwO11JCj/qbvbMPaJ7iqfX6n/1ODob7Pf/e2SudW87bs+Kv
vVlk6MfJve/tT2SxtItE/bH3Cwv9k/L4vb175Kqth///soeEywf7WTNB4Cec
f/7G0dfzzX/A+Z8PK6U+ePnNnhHKZ4/ewBq94Stcnn1e3ln+7i9w/tee2D3/
Kj/D+ZfUa4HoE5wPVj7lI5wfkehXonHgA5wPowF79rWN
         "]], 
         0.05338164251207729], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.05338164251207729]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.}, 0.05338164251207729], InsetBox[
          RotationBox[
           StyleBox["\<\"SIR (basic) model \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SI2R: Extension of the SIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 6.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2R: Extention of the SEIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Multi-site extension of single-site model\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over random graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over grid graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-2.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"En bloc execution of multi-site extensions \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Patient 0 disease propagation over USA \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0., 4.}, 0.05338164251207729]}, InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR: Extension of SEI2R with hospitalized \
population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR-Econ: Economics extension of SEI2R with \
hospitalized population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Economics extension of SEI2HR with age \
compartments\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site application of \
SEI2HR-Econ \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site and economics \
extension with age compartments of SEI2HR\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for Hubei, China\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-0.9466183574879227, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for European Union\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"How SARS-CoV-2 eats the world?\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, DiskBox[{-1., 2.}, 0.05338164251207729]}}],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",ExpressionUUID->"16253c22-15c1-4b2b-b2f1-\
ee9c395a7765"],

Cell[CellGroupData[{

Cell["The models", "Subsection",
 CellChangeTimes->{{3.795011476992119*^9, 
  3.795011480232112*^9}},ExpressionUUID->"fe44ebbf-3242-4acc-92ad-\
75d4e550863a"],

Cell[CellGroupData[{

Cell["SEI2R", "Subsubsection",
 CellChangeTimes->{{3.795010516898909*^9, 
  3.7950105232883987`*^9}},ExpressionUUID->"4aed5812-31ea-46a6-a8b6-\
20945b0a34e2"],

Cell[TextData[{
 "The model SEI2R are introduced and explained in the notebook [AA2]. SEI2R \
differs from ",
 ButtonBox["the classical SEIR model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 " , [Wk1, HH1], with the following elements:"
}], "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515949788693*^9}, {3.792782527441436*^9, 3.792782553283967*^9}, {
  3.792861591788129*^9, 3.7928615917896967`*^9}, {3.79501053045463*^9, 
  3.795010577041779*^9}, {3.795010641482991*^9, 
  3.7950106559057083`*^9}},ExpressionUUID->"70d62aef-97c2-4ab7-87f7-\
a7bb338b5482"],

Cell["\<\
1. Two separate infected populations: one is \"severely symptomatic\", the \
other is \"normally symptomatic\"\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515960948843*^9}},ExpressionUUID->"76adf2ab-56f8-4428-8870-\
294f70a655a3"],

Cell["\<\
2. The monetary equivalent of lost productivity due to infected or died \
people is tracked.\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.79251602014438*^9}},ExpressionUUID->"8df2fbf4-7e2d-4385-8512-\
714c43a2df4a"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We consider the coronavirus propagation models as instances of the more \
general ",
 ButtonBox["System Dynamics (SD)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/System_dynamics"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/System_dynamics"],
 " models. We use SD terminology in this notebook."
}], "Text",
 CellChangeTimes->{{3.792515109898424*^9, 3.792515118613044*^9}, {
  3.792515191120707*^9, 3.7925152040358553`*^9}, {3.79251524705715*^9, 
  3.7925153823741827`*^9}, {3.7925154305557137`*^9, 3.7925154305563602`*^9}, {
  3.792515515308333*^9, 3.792515581922345*^9}, {3.792518958995797*^9, 
  3.792518960900881*^9}, {3.795010617001124*^9, 
  3.795010630322556*^9}},ExpressionUUID->"d9706f8e-8733-4b70-a7e0-\
0e7df046ef09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR", "Subsubsection",
 CellChangeTimes->{{3.795011487139296*^9, 
  3.795011491999469*^9}},ExpressionUUID->"fa732dfc-ce1d-443a-985c-\
5ff10796254d"],

Cell["\<\
For the formulation of SEI2HR we use a system of Differential Algebraic \
Equations (DAE\[CloseCurlyQuote]s). The package [AAp1] allows for the use of \
non-algebraic formulation, that has just Ordinary Differential Equations (ODE\
\[CloseCurlyQuote]s).\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.795011511793723*^9, 
  3.795011542613887*^9}},ExpressionUUID->"4ca53798-e314-4f33-857a-\
be694a2915fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebook structure", "Subsection",
 CellChangeTimes->{{3.7950089815674133`*^9, 
  3.7950089843573713`*^9}},ExpressionUUID->"b6ef7380-6d53-43a7-a5ee-\
56470f7dde30"],

Cell["The rest of notebook has the following sequence of sections:", "Text",
 CellChangeTimes->{{3.795008915078377*^9, 
  3.795008943665434*^9}},ExpressionUUID->"bd9ba6f5-d3d0-43b8-98dc-\
cb45e8c2fbb4"],

Cell[CellGroupData[{

Cell["Package load section", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.79500899884743*^9}},ExpressionUUID->"93b63510-0fc1-4ebc-ad07-\
750ea7ad18a6"],

Cell["SEI2HR structure in comparison of SEI2R", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.795009027517324*^9}},ExpressionUUID->"e7002967-a828-415b-88eb-\
2c68231de602"],

Cell["Explanations of the equations of SEI2HR", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.795009062977357*^9}},ExpressionUUID->"82fa4414-52d4-47ae-9cb7-\
691b5c4354f1"],

Cell["Parameters and initial conditions setup", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.795009082439451*^9}},ExpressionUUID->"e23379bc-f832-49e3-acea-\
931887395905"],

Cell["Populations, hospital beds, quarantine scenarios", "Subitem",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.79500913405713*^9}},ExpressionUUID->"8f34cdb6-fba6-4e73-910c-\
96a15635cc9b"],

Cell["Interactive interface", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.7950091449685802`*^9}},ExpressionUUID->"5a5d06b4-529d-49ca-857e-\
2e063090fa38"],

Cell["Sensitivity analysis", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 
  3.79500915496677*^9}},ExpressionUUID->"0e912a1d-1ca8-4b99-8c25-\
c4022c1efa56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load packages", "Section",
 CellChangeTimes->{{3.793231620635537*^9, 
  3.793231628723988*^9}},ExpressionUUID->"8aeeeab8-1818-46da-89b7-\
1bac19c8d5fa"],

Cell["\<\
The epidemiological models framework used in this notebook is implemented \
with the packages [AAp1, AAp2, AA3]; the interactive plots functions are from \
the package [AAp4].\
\>", "Text",
 CellChangeTimes->{
  3.792942992304307*^9, {3.793025167381392*^9, 3.7930251825463467`*^9}, {
   3.793050739557584*^9, 
   3.793050740051427*^9}},ExpressionUUID->"5bd1f7ed-13b2-4018-a1bd-\
eb3aadd643e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m\>\"", "]"}],
    ";", 
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m\
\>\"", "]"}], ";", 
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m\>\"", "]"}], ";", 
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
WL/SystemDynamicsInteractiveInterfacesFunctions.m\>\"", "]"}]}], 
  ","}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.792592566628851*^9, 3.792592568040513*^9}, {
   3.7929417944805183`*^9, 3.792941823001656*^9}, {3.792943003403167*^9, 
   3.792943004537126*^9}, 3.792999495215279*^9, {3.793025198963522*^9, 
   3.793025207830246*^9}, {3.79321771518338*^9, 3.793217719433584*^9}, {
   3.7934463196522923`*^9, 3.7934463546370687`*^9}, {3.795024554629533*^9, 
   3.795024561647086*^9}},ExpressionUUID->"3633d78f-638c-4bc4-82a7-\
96efbf1cb21f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR extends SEI2R", "Section",
 CellChangeTimes->{{3.793231378597383*^9, 3.7932314024183617`*^9}, {
  3.793313893383391*^9, 3.793313894666028*^9}, {3.793463858762034*^9, 
  3.793463887359378*^9}, {3.7950247617148542`*^9, 
  3.795024767176201*^9}},ExpressionUUID->"21916156-298d-467d-97d0-\
a7056ad95f19"],

Cell["\<\
The model SEI2HR is an extension of SEI2R, [AA2]. Denote that extension with \
\[OpenCurlyDoubleQuote]SEI2R \[Rule] SEI2HR\[CloseCurlyDoubleQuote]).\
\>", "Text",
 CellChangeTimes->{{3.793464008378028*^9, 3.793464023947825*^9}, {
  3.79346576491387*^9, 3.793465775095315*^9}, {3.79346590801619*^9, 
  3.793465922247696*^9}, {3.795009177972756*^9, 
  3.7950092499839563`*^9}},ExpressionUUID->"5a8412ce-d47e-4ba6-8fa1-\
713f8e582bf3"],

Cell["Here is SEI2R:", "Text",
 CellChangeTimes->{{3.79500925187525*^9, 
  3.795009258444957*^9}},ExpressionUUID->"17a01eb6-8a15-468d-b141-\
b1e3aae743c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"reprTP", "=", "\"\<AlgebraicEquation\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsModelOpts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"TooltipStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Background", "\[Rule]", "Yellow"}], ",", 
        RowBox[{"CellFrameColor", "\[Rule]", "Gray"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "20"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelSEI2R", "=", 
   RowBox[{"SEI2RModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelSEI2R", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793467911948387*^9, 3.793467915610031*^9}, {
  3.795009350159837*^9, 3.795009431847424*^9}, {3.7950095015662823`*^9, 
  3.795009514576685*^9}, {3.795009673959231*^9, 3.795009684738604*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"8dd5eabd-8d6e-4939-9fe5-29ec82eacb42"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{"MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "INSP", "]"}],
                 "\"Contact rate for the normally symptomatic population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Contact rate for the normally symptomatic population", 
                 "Tooltip"]& ],
               "\"Contact rate for the normally symptomatic population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Contact rate for the normally symptomatic population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"ISSP", "[", "t", "]"}],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Severely Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"RP", "[", "t", "]"}],
                 "\"Recovered Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Recovered Population", "Tooltip"]& ],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ]}], "-", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]}], ")"}]}]}]},
       {"7", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the severely symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the severely symptomatic population",
           "Tooltip"]& ], "6"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the normally symptomatic population\"",
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the normally symptomatic population",
           "Tooltip"]& ], "3"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "28"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.793467916046401*^9, 3.7935409066214848`*^9, 
  3.7936507541824512`*^9, 3.793765239911662*^9, 3.793875912707232*^9, 
  3.793898452808222*^9, 3.793898895665287*^9, 3.793901234023343*^9, 
  3.793901409505226*^9, 3.7939819584855957`*^9, 3.794408433037517*^9, 
  3.7944086020686913`*^9, 3.795008762688281*^9, 3.7950092596522083`*^9, 
  3.79500937384764*^9, 3.795009436181391*^9, 3.7950095148921824`*^9, 
  3.795009686152155*^9, 3.7950152193250113`*^9, 3.7950170579690237`*^9, 
  3.79501849957939*^9},
 CellLabel->
  "Out[474]=",ExpressionUUID->"2861cf89-efe9-44d8-9ced-4a7790540fac"]
}, Open  ]],

Cell["Here is SEI2HR:", "Text",
 CellChangeTimes->{{3.795009275737638*^9, 
  3.795009284783505*^9}},ExpressionUUID->"fcef4ad4-0675-40f4-94e1-\
ec3a9502f9b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelSEI2HR", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793314282935193*^9, 3.793314319296172*^9}, {
   3.7934449390958233`*^9, 3.79344493909718*^9}, {3.793463636550662*^9, 
   3.7934636565972357`*^9}, {3.7934674315834093`*^9, 3.793467440716679*^9}, {
   3.7950093912892313`*^9, 3.795009397417891*^9}, 3.795009433917156*^9, {
   3.795009677582673*^9, 3.795009678321662*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"204facf0-05e5-4817-b13b-6239e5308acf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{
        "MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"},
       {"8", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"9", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"10", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"11", 
        RowBox[{
        "MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"},
       {"10", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"11", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"12", 
        RowBox[{
        "nhbr", "[", "TP", "]"}], "\<\"Number of hospital beds rate\"\>"},
       {"13", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"14", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                "\"Contact rate for the normally symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the normally symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the normally symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the normally symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                "\"Contact rate for the severely symptomatic population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the severely symptomatic population", 
                "Tooltip"]& ],
              "\"Contact rate for the severely symptomatic population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the severely symptomatic population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"sspf", "[", "SP", "]"}],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ]}], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox["aincp",
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Average incubation period", "Tooltip"]& ],
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Average incubation period", 
                    "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"9", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"10", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"11", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "INSP", "]"}],
                 "\"Infected Normally Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Normally Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "ISSP", "]"}],
                 "\"Infected Severely Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Severely Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ]}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the severely symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the severely symptomatic population",
           "Tooltip"]& ], "6"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the normally symptomatic population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the normally symptomatic population",
           "Tooltip"]& ], "3"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "28"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Mu]", "[", "ISSP", "]"}],
           "\"Infected Severely Symptomatic Population death rate\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Infected Severely Symptomatic Population death rate",
            "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Beta]", "[", "ISSP", "]"}],
           "\"Contact rate for the severely symptomatic population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Contact rate for the severely symptomatic population", 
           "Tooltip"]& ]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], 
        "0.0029`"},
       {"13", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"14", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
       {"8", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"9", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"10", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Number of hospital beds rate", "Tooltip"]& ],
            "\"Number of hospital beds rate\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"11", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.79323140721065*^9, 3.793231423243856*^9}, 
   3.7932314633138523`*^9, 3.793231559229333*^9, 3.793231803507802*^9, 
   3.793232101081397*^9, 3.793232358309026*^9, {3.7932324442885513`*^9, 
   3.7932324496165333`*^9}, 3.79323261841292*^9, 3.79323285094948*^9, 
   3.7932329410593433`*^9, {3.793232981513753*^9, 3.793232997858766*^9}, 
   3.7932330353673573`*^9, 3.7932333250107317`*^9, 3.7932334840542383`*^9, 
   3.793234113465961*^9, 3.793234603440421*^9, 3.7932346685055428`*^9, 
   3.793234789501622*^9, 3.793234853984918*^9, 3.793234958284458*^9, 
   3.793235236981905*^9, 3.793235456304665*^9, 3.793237168848055*^9, 
   3.793237271808312*^9, 3.793237759462431*^9, 3.79323779962615*^9, 
   3.793237914701756*^9, {3.793238264366856*^9, 3.7932383030387077`*^9}, {
   3.793238412110961*^9, 3.7932384298876133`*^9}, 3.793238981395269*^9, 
   3.793239109926787*^9, 3.793313936300598*^9, 3.79331409691891*^9, {
   3.793314315186651*^9, 3.793314319783519*^9}, 3.793314491847866*^9, 
   3.7933147963771553`*^9, 3.793314936811923*^9, 3.7933150139058437`*^9, 
   3.7933153203912487`*^9, 3.793372057583694*^9, 3.79344495542244*^9, 
   3.793445171841927*^9, 3.7934458980568647`*^9, 3.793445931044035*^9, 
   3.7934464508456*^9, 3.793446506048656*^9, 3.793446942507966*^9, 
   3.793446996408744*^9, 3.793447028826631*^9, 3.7934472011095533`*^9, 
   3.793447309194763*^9, 3.793447665658042*^9, 3.793447740190853*^9, 
   3.793463675376359*^9, 3.793463998170385*^9, 3.793464479786635*^9, 
   3.793465115224902*^9, 3.793465368870697*^9, {3.79346641348979*^9, 
   3.7934664244512377`*^9}, 3.793466528779009*^9, 3.793467291856049*^9, {
   3.793467432360808*^9, 3.7934674412603207`*^9}, 3.7935409066835413`*^9, 
   3.793650754245553*^9, 3.793765239987104*^9, 3.793875912804965*^9, 
   3.7938984528766317`*^9, 3.793898895746327*^9, 3.7939012340855503`*^9, 
   3.7939014096110363`*^9, 3.793981958617288*^9, 3.794408433121138*^9, 
   3.794408602120256*^9, 3.795008762760125*^9, 3.795009436237216*^9, 
   3.795009519137429*^9, 3.7950096892453947`*^9, 3.795015219396764*^9, 
   3.795017058041147*^9, 3.795018499648829*^9},
 CellLabel->
  "Out[476]=",ExpressionUUID->"3e0584b8-d686-4a5e-9663-a4c469b18ea1"]
}, Open  ]],

Cell["Here is the \[OpenCurlyDoubleQuote]difference\[CloseCurlyDoubleQuote] \
between the two models:", "Text",
 CellChangeTimes->{{3.79500929530131*^9, 
  3.795009313537221*^9}},ExpressionUUID->"afbc757b-e4af-468c-8ebe-\
9994292dc48c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ModelGridTableForm", "@", 
  RowBox[{"Merge", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"modelSEI2HR", ",", "modelSEI2R"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AssociationQ", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}], ",", 
       RowBox[{"KeyComplement", "[", "#", "]"}], ",", 
       RowBox[{"Complement", "@@", "#"}]}], "]"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.795009620847085*^9, 3.795009652165576*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"1c7c7d65-85c3-49fc-8d46-d5d6ef58eca8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"2", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"3", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"4", 
        RowBox[{
        "MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"3", 
        RowBox[{
        "nhbr", "[", "TP", "]"}], "\<\"Number of hospital beds rate\"\>"},
       {"4", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"5", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"INSP", "[", "t", "]"}], " ", 
           RowBox[{"\[Mu]", "[", "INSP", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ISSP", "[", "t", "]"}], "-", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], ")"}],
            " ", 
           RowBox[{"\[Mu]", "[", "ISSP", "]"}]}]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"SP", "[", "t", "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           RowBox[{"TP", "[", "t", "]"}]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"INSP", "[", "t", "]"}], " ", 
            RowBox[{"SP", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", "INSP", "]"}]}], 
           RowBox[{"TP", "[", "t", "]"}]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"ISSP", "[", "t", "]"}], "-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HP", "[", "t", "]"}],
                   "\"Hospitalized Population\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ]}]}], 
             "]"}], " ", 
            RowBox[{"SP", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", "ISSP", "]"}]}], 
           RowBox[{"TP", "[", "t", "]"}]], "-", 
          RowBox[{
           RowBox[{"EP", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "aincp"], "+", 
             RowBox[{"\[Mu]", "[", "TP", "]"}]}], ")"}]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"EP", "[", "t", "]"}], " ", 
                    RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"], ",", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "Hospitalized Population", 
                    "Tooltip"]& ]}]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], "aip"], 
          "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"ISSP", "[", "t", "]"}], "aip"]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"EP", "[", "t", "]"}], " ", 
            RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ISSP", "[", "t", "]"}], "-", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], ")"}],
            " ", 
           RowBox[{"\[Mu]", "[", "ISSP", "]"}]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"INSP", "[", "t", "]"}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"INSP", "[", "t", "]"}], " ", 
             RowBox[{"\[Mu]", "[", "INSP", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ISSP", "[", "t", "]"}], "-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HP", "[", "t", "]"}],
                   "\"Hospitalized Population\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
              ")"}], " ", 
             RowBox[{"\[Mu]", "[", "ISSP", "]"}]}]}], ")"}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"SP", "[", "t", "]"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            RowBox[{"TP", "[", "t", "]"}]]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"INSP", "[", "t", "]"}], " ", 
            RowBox[{"SP", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", "INSP", "]"}]}], 
           RowBox[{"TP", "[", "t", "]"}]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"ISSP", "[", "t", "]"}], "-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HP", "[", "t", "]"}],
                   "\"Hospitalized Population\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                 "\"Hospitalized Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ]}]}], 
             "]"}], " ", 
            RowBox[{"SP", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", "ISSP", "]"}]}], 
           RowBox[{"TP", "[", "t", "]"}]], "-", 
          RowBox[{
           RowBox[{"SP", "[", "t", "]"}], " ", 
           RowBox[{"\[Mu]", "[", "TP", "]"}]}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         RowBox[{"\[Mu]", "[", "ISSP", "]"}]}]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         RowBox[{"\[Beta]", "[", "ISSP", "]"}]}]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], 
        "0.0029`"},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"2", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Number of hospital beds rate", "Tooltip"]& ],
            "\"Number of hospital beds rate\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"4", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.795009652552986*^9, 3.795009692004678*^9, 
  3.795015219438767*^9, 3.795017058108329*^9, 3.7950184997132473`*^9},
 CellLabel->
  "Out[477]=",ExpressionUUID->"a9f426cb-cbc2-4fad-9c2e-2d9204bf8c2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations explanations", "Section",
 CellChangeTimes->{{3.795009755643981*^9, 
  3.7950097902152576`*^9}},ExpressionUUID->"59c38173-bf11-4e2b-b6b6-\
22e76203d162"],

Cell["\<\
In this section we provide rationale of the model equations of SEI2HR. \
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010423043984*^9}},ExpressionUUID->"0af4145f-72ae-4407-8866-\
b715d6989280"],

Cell["\<\
The equations for Susceptible, Exposed, Infected, Recovered populations of \
SEI2R are \"standard\" and explanations about them are found in [WK1, HH1]. \
For SEI2HR those equations change because of the stocks Hospitalized \
Population and Hospital Beds.\
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010465495901*^9}},ExpressionUUID->"6fd6ab15-1bc3-4f72-98bd-\
b239a26b83a8"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note that the equations in section have tooltips for the stocks and rates \
(for more convenient reading.)"
}], "Text",
 CellChangeTimes->{{3.79501170809335*^9, 
  3.795011771026613*^9}},ExpressionUUID->"cc7e07f0-7a7b-4639-b189-\
88ce2b3289c4"],

Cell[CellGroupData[{

Cell["The infected and hospitalized populations", "Subsubsection",
 CellChangeTimes->{{3.795012203731121*^9, 
  3.795012248214262*^9}},ExpressionUUID->"f7d4b0fc-1cf2-4f7b-b7d5-\
80995a1c5e4d"],

Cell["\<\
The SEI2HR has two types of infected populations: normally symptomatic one \
and a severely symptomatic one. A major assumption for SEI2R is that only the \
severely symptomatic people are hospitalized. (That assumption is also \
reflected in the diagram in the introduction.)\
\>", "Text",
 CellChangeTimes->{{3.795012170891933*^9, 3.795012197037404*^9}, {
  3.795012261129662*^9, 
  3.7950124243923893`*^9}},ExpressionUUID->"64d528cb-517d-4c90-b233-\
fad94bc8fc63"],

Cell["\<\
Each of those three populations have their own contact rates and mortality \
rates.\
\>", "Text",
 CellChangeTimes->{{3.795012435530241*^9, 3.795012482105783*^9}, 
   3.795012649923788*^9},ExpressionUUID->"ab177d96-650c-415e-b9c1-\
26b7a447b07e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HR", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.7950126193806953`*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"dbadacfb-d76f-4760-8d6e-858eaee2c69f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the normally symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the severely symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the hospitalized population\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Beta][$CellContext`INSP] -> 
    "Contact rate for the normally symptomatic population", $CellContext`\
\[Beta][$CellContext`ISSP] -> 
    "Contact rate for the severely symptomatic population", $CellContext`\
\[Beta][$CellContext`HP] -> "Contact rate for the hospitalized population"}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7950125494249907`*^9, {3.795012579923339*^9, 3.7950126199628*^9}, 
   3.795015219449407*^9, 3.795017058118588*^9, 3.79501849972499*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"5cd44262-b89b-48d3-b327-b45ca9848631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HR", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.795012631947336*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"5fbf641a-9b20-4428-80e5-432e3952a737"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "TP", "]"}], 
      "\[Rule]", "\<\"Population death rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Infected Normally Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Infected Severely Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Hospitalized Population death rate\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Mu][$CellContext`TP] -> 
    "Population death rate", $CellContext`\[Mu][$CellContext`INSP] -> 
    "Infected Normally Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`ISSP] -> 
    "Infected Severely Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`HP] -> "Hospitalized Population death rate"}],
  
  Editable->False]], "Output",
 CellChangeTimes->{{3.795012612268669*^9, 3.7950126325439177`*^9}, 
   3.795015219476671*^9, 3.795017058178907*^9, 3.795018499776371*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"9fe23cdf-00b2-43bd-8a6d-6cf23577a243"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Below with \[OpenCurlyDoubleQuote]Infected Population\
\[CloseCurlyDoubleQuote] we mean both stocks Infected Normally Symptomatic \
Population (INSP) and Infected Severely Symptomatic Population (ISSP)."
}], "Text",
 CellChangeTimes->{{3.795012809518549*^9, 3.795012868053237*^9}, {
  3.795013451701508*^9, 
  3.7950134695881767`*^9}},ExpressionUUID->"892a5009-5dce-47a7-bb23-\
7f2d41686fe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Population", "Subsubsection",
 CellChangeTimes->{{3.795011305110136*^9, 
  3.795011315079767*^9}},ExpressionUUID->"8d5d45d1-12a2-4f9a-927b-\
09d75b72b978"],

Cell["\<\
In this notebook we consider a DAE\[CloseCurlyQuote]s formulation of SEI2HR. \
The stock Total Population has the following (obvious) algebraic equation:\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.7950115573188667`*^9, 
  3.7950116299716253`*^9}},ExpressionUUID->"56e12740-ebac-42c7-bf25-\
9f54345388d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7950113211542873`*^9, 3.7950113212557907`*^9}, {
  3.7950116317514887`*^9, 3.795011696866911*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"b8cff72e-a8a7-4936-bdfd-91e2c3f0a658"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TooltipBox[
    TagBox[
     TooltipBox[
      RowBox[{"TP", "[", "t", "]"}],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ],
    "\"Total Population\"",
    TooltipStyle->{
     Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
      FontSize -> 20}],
   Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
  RowBox[{"Max", "[", 
   RowBox[{"0", ",", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"RP", "[", "t", "]"}],
         "\"Recovered Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Recovered Population", "Tooltip"]& ],
       "\"Recovered Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.795011321532852*^9, 3.795011636154243*^9, {3.795011673796473*^9, 
   3.7950116972691507`*^9}, 3.7950152195087767`*^9, 3.795017058237452*^9, 
   3.795018499833426*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"d02464b0-fe7e-4366-a9a7-1dbcfb2e8eba"]
}, Open  ]],

Cell[TextData[{
 "We have used specified that the total population cannot be less than ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "04dbf0a8-1180-4fd7-a023-ed5449bcfc93"],
 "."
}], "Text",
 CellChangeTimes->{{3.795011824465151*^9, 
  3.7950118660692053`*^9}},ExpressionUUID->"6b3ada03-b48a-4483-a4f3-\
88b57b8f0f57"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " As mentioned in the introduction, the package [AAp1] allows for the use of \
non-algebraic formulation."
}], "Text",
 CellChangeTimes->{{3.795011390804233*^9, 3.795011431203477*^9}, {
  3.795011779812842*^9, 
  3.79501178866679*^9}},ExpressionUUID->"f390e241-7da1-4f7b-a957-\
3426ff40eef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Susceptible Population", "Subsubsection",
 CellChangeTimes->{{3.7924327404893208`*^9, 3.792432755970215*^9}, {
  3.792432786814529*^9, 
  3.792432787106859*^9}},ExpressionUUID->"58a75a4f-af3c-4001-b9a3-\
8aac36a47fb1"],

Cell["\<\
The stock Susceptible Population (SP) is decreased by (1) infections derived \
from stocks Infected Populations and Hospitalized Population (HP), and (2) \
morality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.7950134363343573`*^9, 
  3.795013445243763*^9}},ExpressionUUID->"ab520e84-281a-49f2-8df6-\
6bb7ed75e5ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "3", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795011270778821*^9, 3.795011293503643*^9}, {
  3.795011877427824*^9, 3.7950118807833014`*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"95149a98-b0e7-4f7c-bb3b-9f1f753c5ebd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["SP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"SP", "[", "t", "]"}],
          "\"Susceptible Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Susceptible Population", "Tooltip"]& ],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"TP", "[", "t", "]"}],
         "\"Total Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Total Population", "Tooltip"]& ],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{{3.795011290299103*^9, 3.7950112938777523`*^9}, 
   3.795011881032531*^9, 3.79501521954084*^9, 3.795017058301052*^9, 
   3.795018499892235*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"2d7b0d4e-eb74-4b27-bc5e-58dd875af82f"]
}, Open  ]],

Cell["\<\
Because we hospitalize the severely infected people only instead of the term\
\>", "Text",
 CellChangeTimes->{{3.795013088546363*^9, 
  3.795013112486208*^9}},ExpressionUUID->"a532758d-5d97-4867-94be-\
c8eec1ddf8aa"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"ISSP", "[", "t", "]"}], 
   RowBox[{"SP", "[", "t", "]"}], 
   RowBox[{"\[Beta]", "[", "ISSP", "]"}]}], 
  RowBox[{"TP", "[", "t", "]"}]]], "DisplayFormula",
 CellChangeTimes->{{3.795013137784575*^9, 3.795013155102044*^9}, {
  3.795013235922861*^9, 
  3.795013237228023*^9}},ExpressionUUID->"da26b84c-15d1-472d-95a1-\
fca1b915ce78"],

Cell["we have the terms ", "Text",
 CellChangeTimes->{{3.795013184959922*^9, 
  3.795013188537169*^9}},ExpressionUUID->"8f88d5c3-a041-436a-b6d4-\
9c1964b3d64e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Beta]", "[", "HP", "]"}],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ],
      "\"Contact rate for the hospitalized population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Contact rate for the hospitalized population", 
      "Tooltip"]& ]}], 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"TP", "[", "t", "]"}],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ],
     "\"Total Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], 
   "."}]}]], "DisplayFormula",
 CellChangeTimes->{{3.7950132026218*^9, 
  3.7950132318285713`*^9}},ExpressionUUID->"5557feeb-8a01-4673-81b7-\
e6c8b5e3e5d0"],

Cell[TextData[{
 "The first term is for the infections derived from the hospitalized \
population. The second term for the infections derived from people who \
infected and severely symptomatic and ",
 StyleBox["not",
  FontSlant->"Italic"],
 " hospitalized."
}], "Text",
 CellChangeTimes->{{3.795013242280198*^9, 
  3.795013384583099*^9}},ExpressionUUID->"4ff17277-254d-46eb-b449-\
6d3a410be427"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exposed Population", "Subsubsection",
 CellChangeTimes->{{3.7950129643131742`*^9, 
  3.795012971420479*^9}},ExpressionUUID->"f4b0f0d7-cc04-4bb0-9583-\
75f44afad27d"],

Cell["\<\
The stock Exposed Population (EP) is increased by (1) infections derived from \
stocks Infected Populations and Hospitalized Population, and (2) morality \
cases derived with the typical mortality rate. EP is decreased by (1) the \
people who after a certain average incubation period (aincp) become ill, and \
(2) morality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.795012987496993*^9, 3.795012993503879*^9}, {3.795013405599039*^9, 
  3.795013431811366*^9}, {3.795013483450334*^9, 3.795013611240715*^9}, {
  3.7950145599567747`*^9, 3.795014563905554*^9}, {3.795014710994252*^9, 
  3.795014712678007*^9}},ExpressionUUID->"23eda04c-c024-40f2-8fed-\
1eb31cf445bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "4", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795011270778821*^9, 3.795011293503643*^9}, {
  3.795011877427824*^9, 3.7950118807833014`*^9}, {3.795012925895522*^9, 
  3.7950129291643763`*^9}},
 CellLabel->
  "In[482]:=",ExpressionUUID->"e559fbf3-24dd-432a-a06c-73e9d764826a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["EP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"HP", "[", "t", "]"}],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "HP", "]"}],
         "\"Contact rate for the hospitalized population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the hospitalized population", 
         "Tooltip"]& ],
       "\"Contact rate for the hospitalized population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the hospitalized population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"EP", "[", "t", "]"}],
        "\"Exposed Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Exposed Population", "Tooltip"]& ],
      "\"Exposed Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox["aincp",
           "\"Average incubation period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average incubation period", "Tooltip"]& ],
         "\"Average incubation period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.795012929470562*^9, 3.795015219574144*^9, 
  3.795017058361931*^9, 3.79501849995077*^9},
 CellLabel->
  "Out[482]=",ExpressionUUID->"1bc8938c-7761-48d8-8368-fd5a5264c70f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Normally Symptomatic Population", "Subsubsection",
 CellChangeTimes->{{3.792432758488686*^9, 
  3.792432803735303*^9}},ExpressionUUID->"87767080-69e3-43cb-879c-\
1396889a376f"],

Cell["\<\
INSP is increased by a fraction of the people who have been exposed. That \
fraction is derived from the severely symptomatic population fraction (sspf). \
INSP is decreased by (1) the people who recover after a certain average \
infection period (aip), and (2) the normally symptomatic people who die from \
the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 
  3.795014860425259*^9}},ExpressionUUID->"6f2f2cd1-f842-499e-8e37-\
9775ac0b804a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "5", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795011270778821*^9, 3.795011293503643*^9}, {
  3.795011877427824*^9, 3.7950118807833014`*^9}, {3.795012925895522*^9, 
  3.795012959730999*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"c76d859f-1508-4e56-bb46-e17b166950ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["INSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"sspf", "[", "SP", "]"}],
           "\"Severely Symptomatic Population Fraction\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Severely Symptomatic Population Fraction", 
           "Tooltip"]& ],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ]}], ")"}]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{{3.795012929470562*^9, 3.795012959981968*^9}, 
   3.795015219605378*^9, 3.795017058423285*^9, 3.795018500004985*^9},
 CellLabel->
  "Out[483]=",ExpressionUUID->"a3917a66-cea6-4f4f-9ddb-6ce23d7aa864"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Severely Symptomatic Population", "Subsubsection",
 CellChangeTimes->{{3.792432758488686*^9, 
  3.792432784992174*^9}},ExpressionUUID->"0cedad9c-0ebb-4fc4-b52f-\
ab2dc38ea842"],

Cell["\<\
ISSP is increased by a fraction of the people who have been exposed. That \
fraction is the severely symptomatic population fraction (sspf). ISSP is \
decreased by (1) the people who recover after a certain average infection \
period (aip), (2) the hospitalized severely symptomatic people who die from \
the disease, and (3) the non-hospitalized severely symptomatic people who die \
from the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 3.795014878900036*^9}, {
  3.795015376562159*^9, 
  3.795015415250908*^9}},ExpressionUUID->"2869ec69-72bd-4fda-8f78-\
6953b0fb40d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "6", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795011270778821*^9, 3.795011293503643*^9}, {
  3.795011877427824*^9, 3.7950118807833014`*^9}, {3.795012925895522*^9, 
  3.795012952710886*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"29ce52b1-a98f-44a3-b4f6-c4566323ee90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["ISSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"sspf", "[", "SP", "]"}],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ],
       "\"Severely Symptomatic Population Fraction\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Severely Symptomatic Population Fraction", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{{3.795012929470562*^9, 3.795012953027239*^9}, 
   3.7950152196381598`*^9, 3.7950170584856853`*^9, 3.795018500058897*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"c14837cb-30ed-4b00-9f65-f7c40ca24828"]
}, Open  ]],

Cell["\<\
Note that we do not assume that severely symptomatic people recover faster if \
they are hospitalized, only that they have a different death rate.\
\>", "Text",
 CellChangeTimes->{{3.795015781197987*^9, 
  3.795015848687818*^9}},ExpressionUUID->"fa06293f-06a4-41ea-bf31-\
be16ef4befc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospitalized Population", "Subsubsection",
 CellChangeTimes->{{3.795014886201209*^9, 3.7950148910265713`*^9}, {
  3.795015657276829*^9, 
  3.795015657681332*^9}},ExpressionUUID->"beb0f77d-f9c5-471c-b3a8-\
a2fb4dfed69a"],

Cell["\<\
The amount of people that can be hospitalized is determined by the available \
Hospital Beds (HB) -- the stock Hospitalized Population (HP) is subject to a \
resource limitation by HB.\
\>", "Text",
 CellChangeTimes->{{3.795015965081923*^9, 3.7950161008835*^9}, {
  3.7950161387975473`*^9, 
  3.7950161553116302`*^9}},ExpressionUUID->"bb3c4600-2b15-4077-b5c1-\
5a7a3667cdbc"],

Cell["\<\
The equation of the stock HP can be easily understood from the following \
dynamics description points:\
\>", "Text",
 CellChangeTimes->{{3.7950156429448633`*^9, 
  3.795015722910379*^9}},ExpressionUUID->"b0e1eb60-03d0-4307-a09a-\
19ff3f396d44"],

Cell[CellGroupData[{

Cell["\<\
If the number of hospitalized people is less that the number of hospital beds \
we hospitalize the new ISSP people.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.7950159589622183`*^9}, {3.795016165752198*^9, 
  3.795016271492449*^9}},ExpressionUUID->"3e39e6d1-b589-46a6-ad7f-\
2e1859a9bfc2"],

Cell["\<\
If the new ISSP people are more than the Available Hospital Beds (AHB) we \
take as many as AHB.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016378922151*^9}},ExpressionUUID->"a8ba903b-c3ec-45f0-b253-\
ec41427c93e3"],

Cell["\<\
Hospitalized people have the same average infection period (aip).\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016441181155*^9}},ExpressionUUID->"2dcbaa3e-cf2b-45d5-b149-\
1b03c357c797"],

Cell["\<\
Hospitalized (severely symptomatic) people have their own mortality rate.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016511121223*^9}, {3.795017657941299*^9, 
  3.795017675593258*^9}},ExpressionUUID->"fb115abd-8c70-45f2-a972-\
1b5b6a584b6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "7", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795011270778821*^9, 3.795011293503643*^9}, {
  3.795011877427824*^9, 3.7950118807833014`*^9}, {3.795012925895522*^9, 
  3.795012952710886*^9}, {3.795014893327376*^9, 3.7950148953919487`*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"fee61166-d639-45d8-b120-420d50078b0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], ",", 
             
             FractionBox[
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"EP", "[", "t", "]"}],
                   "\"Exposed Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Exposed Population", "Tooltip"]& ],
                 "\"Exposed Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"sspf", "[", "SP", "]"}],
                   "\"Severely Symptomatic Population Fraction\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Severely Symptomatic Population Fraction", 
                   "Tooltip"]& ],
                 "\"Severely Symptomatic Population Fraction\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Severely Symptomatic Population Fraction", 
                 "Tooltip"]& ]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]]}], 
            "]"}], 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], "<", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HB", "[", "t", "]"}],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}], "-", 
   FractionBox[
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", 
      "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{3.795014895626042*^9, 3.7950152196738787`*^9, 
  3.79501705854986*^9, 3.795018500113387*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"750ba49a-03bf-4427-bbae-a0110bf1f3c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recovered Population", "Subsubsection",
 CellChangeTimes->{{3.792432904959959*^9, 
  3.792432913325151*^9}},ExpressionUUID->"5e05ba14-efcd-40df-8921-\
8ec0d7268588"],

Cell["\<\
The stock Recovered Population (RP) is increased by the recovered infected \
people and decreased by morality cases derived with the typical mortality \
rate.\
\>", "Text",
 CellChangeTimes->{{3.7950176864611464`*^9, 3.795017823952033*^9}, {
  3.795018241646221*^9, 
  3.79501825521381*^9}},ExpressionUUID->"1a765286-5ab8-4506-9572-\
da693f85f06d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "8", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795015464376367*^9, 3.795015469308351*^9}},
 CellLabel->
  "In[486]:=",ExpressionUUID->"75404f44-1762-4999-99c9-64dac085bf00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["RP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"RP", "[", "t", "]"}],
        "\"Recovered Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Recovered Population", "Tooltip"]& ],
      "\"Recovered Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{3.7950154699803553`*^9, 3.795017058610108*^9, 
  3.795018500171644*^9},
 CellLabel->
  "Out[486]=",ExpressionUUID->"ad313548-3d3e-45fd-ad24-a35e7c037252"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deceased Infected Population", "Subsubsection",
 CellChangeTimes->{{3.795015491686062*^9, 3.795015498614624*^9}, {
  3.795017874057209*^9, 
  3.7950178753284683`*^9}},ExpressionUUID->"54142616-530a-4b27-ae9b-\
309ec86001e2"],

Cell["\<\
The stock Deceased Infected Population (DIP) accumulates the deaths of the \
people who are infected. Note that we utilize the different death rates for \
HP and ISSP.\
\>", "Text",
 CellChangeTimes->{{3.7950178311707897`*^9, 3.795017955610054*^9}, {
  3.7950182366955976`*^9, 
  3.795018237010264*^9}},ExpressionUUID->"8d8c241b-f126-4606-af6a-\
1ec9dcca6e03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "9", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795015464376367*^9, 3.795015480052655*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"0ec00681-c57d-4c8f-8fcc-857866b044a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["DIP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "Output",
 CellChangeTimes->{3.795015480823331*^9, 3.795017058670882*^9, 
  3.7950185002313833`*^9},
 CellLabel->
  "Out[487]=",ExpressionUUID->"943d7f95-a95d-428f-80ff-29d8dd5a8efc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospital Beds", "Subsubsection",
 CellChangeTimes->{{3.7924329553216743`*^9, 3.792432978237731*^9}, {
  3.795015560402337*^9, 
  3.795015565205371*^9}},ExpressionUUID->"d8367f9e-b854-4fbe-9074-\
2cf985f0d195"],

Cell["\<\
The stock Hospital Beds (HB) can change with a rate that reflects the number \
of hospital beds change rate (nhbcr) per day. Generally, using nhbcr we can \
capture scenarios, like, extending hospitals, building new hospitals, \
recruitment of new medical personnel, loss of medical personnel (due to \
infections.)\
\>", "Text",
 CellChangeTimes->{{3.795017960256741*^9, 3.795018199075117*^9}, {
  3.795018231925222*^9, 
  3.795018232509716*^9}},ExpressionUUID->"ba2892c0-0c98-4c25-9c36-\
6b8350e0cb2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "10", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795015464376367*^9, 3.795015503654748*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"5aedc992-3d73-4f77-a8ed-904808795423"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HB", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HB", "[", "t", "]"}],
       "\"Hospital Beds\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital Beds", "Tooltip"]& ],
     "\"Hospital Beds\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Number of hospital beds change rate (per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Number of hospital beds change rate (per day)", 
       "Tooltip"]& ],
     "\"Number of hospital beds change rate (per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Number of hospital beds change rate (per day)", 
     "Tooltip"]& ]}]}]], "Output",
 CellChangeTimes->{{3.795015480823331*^9, 3.795015504185567*^9}, 
   3.795017058740653*^9, 3.79501850028902*^9},
 CellLabel->
  "Out[488]=",ExpressionUUID->"fa022c2e-a564-4e90-86d0-dbf65bf497da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money for Hospital Services", "Subsubsection",
 CellChangeTimes->{{3.792432981646702*^9, 3.7924330142384863`*^9}, 
   3.795015555761284*^9},ExpressionUUID->"c81794eb-0416-4d38-8e12-\
c07f285c9f9c"],

Cell["\<\
The stock Money for Hospital Services (MHS) simply tracks expense for the \
hospitalized people.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 
  3.795018289098675*^9}},ExpressionUUID->"d63353c4-31ce-4ce1-93b8-\
05f80203d429"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "11", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795015464376367*^9, 3.795015511185708*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"8c0bd335-9013-4413-9a51-b25a3d34c950"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MHS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HP", "[", "t", "]"}],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ],
     "\"Hospitalized Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"hscr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Hospital services cost rate (per bed per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital services cost rate (per bed per day)", 
       "Tooltip"]& ],
     "\"Hospital services cost rate (per bed per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital services cost rate (per bed per day)", 
     "Tooltip"]& ]}]}]], "Output",
 CellChangeTimes->{3.795015511452425*^9, 3.795017058802524*^9, 
  3.795018500344705*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"8f349f95-7da4-4f80-8182-03c7a58f945f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money from Lost Productivity", "Subsubsection",
 CellChangeTimes->{{3.795015571168536*^9, 
  3.795015582744377*^9}},ExpressionUUID->"ca84c898-87f7-4cbf-8ae8-\
30cb9067d9a8"],

Cell["\<\
The stock Money from Lost Productivity (MLP) simply tracks expense for the \
hospitalized people.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 
  3.795018306109063*^9}},ExpressionUUID->"4d474ab2-b991-495b-804e-\
5aa3bcb93fda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HR", ",", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "12", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.795015464376367*^9, 3.7950155386098146`*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"610ea22c-b413-47f6-95f3-d5ebc49a8a51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MLP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"lpcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Lost productivity cost rate (per person per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Lost productivity cost rate (per person per day)", 
       "Tooltip"]& ],
     "\"Lost productivity cost rate (per person per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Lost productivity cost rate (per person per day)", 
     "Tooltip"]& ], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], 
     "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"INSP", "[", "t", "]"}],
          "\"Infected Normally Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", 
        "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}], ")"}], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7950155388473177`*^9, 3.7950170588769417`*^9, 
  3.795018500399803*^9},
 CellLabel->
  "Out[490]=",ExpressionUUID->"3c8cc17b-039f-4e9b-9974-a0e6e0ffd165"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters and actual simulation equations code", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 3.792782468411478*^9}, {
  3.792783085731715*^9, 
  3.792783104744426*^9}},ExpressionUUID->"479781ed-d869-4843-90e3-\
1008bda138f7"],

Cell["\<\
Here are the parameters we want to experiment with (or do calibration with):\
\>", "Text",
 CellChangeTimes->{{3.792782885557115*^9, 
  3.792782913850957*^9}},ExpressionUUID->"82408e44-ff1c-44a1-b469-\
d1355dda814f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsFocusParams", "=", 
   RowBox[{"{", 
    RowBox[{"aincp", ",", "aip", ",", 
     RowBox[{"sspf", "[", "SP", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "HP", "]"}], ",", "qsd", ",", "ql", ",", "qcrf", 
     ",", 
     RowBox[{"nhbcr", "[", 
      RowBox[{"ISSP", ",", "INSP"}], "]"}], ",", 
     RowBox[{"nhbr", "[", "TP", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aParametricRateRules", "=", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{
     RowBox[{"modelSEI2HR", "[", "\"\<RateRules\>\"", "]"}], ",", 
     "lsFocusParams"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7863148338718843`*^9, 3.7863148644238167`*^9}, {
   3.786314969410964*^9, 3.786314969770688*^9}, {3.786315318877136*^9, 
   3.786315423456758*^9}, {3.786315466907583*^9, 3.786315467039927*^9}, {
   3.786315534473729*^9, 3.786315535036262*^9}, 3.7863155993404713`*^9, 
   3.7863174496926823`*^9, {3.786317496751482*^9, 3.786317565432353*^9}, {
   3.7863177467407846`*^9, 3.786317747077957*^9}, 3.7863179750983877`*^9, {
   3.786318053354103*^9, 3.78631805379137*^9}, {3.7863180874206123`*^9, 
   3.7863180878904448`*^9}, {3.786318193576859*^9, 3.78631819420512*^9}, {
   3.786318225683996*^9, 3.7863182264702682`*^9}, {3.786318451093602*^9, 
   3.786318464796071*^9}, 3.7863185848337793`*^9, {3.786318762276565*^9, 
   3.786318787991737*^9}, {3.786318877363761*^9, 3.7863189048831797`*^9}, {
   3.7863191345789337`*^9, 3.786319179396864*^9}, {3.7863192276959763`*^9, 
   3.786319243996009*^9}, 3.786319882705675*^9, {3.7863204115173597`*^9, 
   3.786320430150361*^9}, {3.786320824602812*^9, 3.786320832250454*^9}, 
   3.786320911094233*^9, {3.786321002131366*^9, 3.786321057592033*^9}, {
   3.786322419080089*^9, 3.786322428376965*^9}, {3.786548989402964*^9, 
   3.786548990706039*^9}, {3.786549162937529*^9, 3.786549163565218*^9}, {
   3.786549287240192*^9, 3.7865492939884253`*^9}, {3.7867549383743258`*^9, 
   3.7867549702797527`*^9}, {3.78681085193745*^9, 3.7868108618553247`*^9}, {
   3.7870672422451077`*^9, 3.787067246810301*^9}, {3.787067293377285*^9, 
   3.787067293937261*^9}, 3.787067362210042*^9, {3.78706807533466*^9, 
   3.7870680757391663`*^9}, {3.7870681214696903`*^9, 3.787068127587439*^9}, {
   3.787501433289083*^9, 3.787501434283085*^9}, {3.7879332682485933`*^9, 
   3.787933290318729*^9}, {3.788011564525116*^9, 3.788011598218856*^9}, {
   3.792338815009306*^9, 3.7923388191018*^9}, {3.792341071071682*^9, 
   3.7923410713251257`*^9}, {3.7923466525491962`*^9, 3.7923466693789043`*^9}, 
   3.792432616989259*^9, 3.7924326928489313`*^9, {3.792443472165268*^9, 
   3.7924434725022078`*^9}, {3.792451530856949*^9, 3.792451539720593*^9}, 
   3.792518559606106*^9, {3.79326158407848*^9, 3.793261592514369*^9}, {
   3.793262125671596*^9, 3.7932621261005783`*^9}, {3.793263354678767*^9, 
   3.7932633548438873`*^9}, {3.7932891569010553`*^9, 3.793289160206669*^9}, {
   3.793290541062859*^9, 3.7932905494816647`*^9}, {3.793466376655335*^9, 
   3.793466377170805*^9}, {3.793466523131755*^9, 3.793466526597267*^9}, 
   3.793765266084045*^9},
 CellLabel->
  "In[493]:=",ExpressionUUID->"afce3302-956c-428b-b428-c7622a0bf9e9"],

Cell["Here we set custom rates and initial conditions:", "Text",
 CellChangeTimes->{{3.7928417223874493`*^9, 
  3.792841744259144*^9}},ExpressionUUID->"575cabdd-2cd3-4c32-95c8-\
e2af9cf9e4c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"10", "^", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"reprTP", "\[Equal]", "\"\<AlgebraicEquation\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"modelSEI2HR", "=", 
      RowBox[{"SetRateRules", "[", 
       RowBox[{"modelSEI2HR", ",", "\[IndentingNewLine]", 
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
           RowBox[{"0.56", "*", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"qcrf", ",", 
                  RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                   RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}],
              "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
           RowBox[{"0.56", "*", 
            RowBox[{"Piecewise", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"qcrf", ",", 
                  RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                   RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}],
              "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"qsd", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ql", "\[Rule]", 
           RowBox[{"8", "*", "7"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
           RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
           RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
           RowBox[{"population", "*", 
            RowBox[{"3", "/", "1000"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"lpcr", "[", 
            RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"hscr", "[", 
            RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}]}], 
         "\[IndentingNewLine]", "|>"}]}], "]"}]}], ";", 
     RowBox[{"modelSEI2HR", "=", 
      RowBox[{"SetInitialConditions", "[", 
       RowBox[{"modelSEI2HR", ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
           RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "population"}], ",", 
          RowBox[{
           RowBox[{"SP", "[", "0", "]"}], "\[Rule]", 
           RowBox[{"population", "-", "1"}]}], ",", 
          RowBox[{
           RowBox[{"ISSP", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{
           RowBox[{"INSP", "[", "0", "]"}], "\[Rule]", "1"}]}], "|>"}]}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "ELSE", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"modelSEI2HR", "=", 
      RowBox[{"SetRateRules", "[", 
       RowBox[{"modelSEI2HR", ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
           RowBox[{"TP", "[", "t", "]"}], "\[Rule]", "population"}], ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", "0.56"}], ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", "0.56"}], ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
           RowBox[{"0.035", "/", "aip"}]}], ",", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
           RowBox[{"0.01", "/", "aip"}]}], ",", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "HP", "]"}], "\[Rule]", 
           RowBox[{"0.005", "/", "aip"}]}], ",", 
          RowBox[{
           RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
           RowBox[{"population", "*", 
            RowBox[{"3", "/", "1000"}]}]}]}], "|>"}]}], "]"}]}], ";", 
     RowBox[{"modelSEI2HR", "=", 
      RowBox[{"SetInitialConditions", "[", 
       RowBox[{"modelSEI2HR", ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
           RowBox[{"SP", "[", "0", "]"}], "\[Rule]", 
           RowBox[{"population", "-", "1"}]}], ",", 
          RowBox[{
           RowBox[{"ISSP", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{
           RowBox[{"INSP", "[", "0", "]"}], "\[Rule]", "1"}]}], "|>"}]}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.792840997471833*^9, 3.7928410014208717`*^9}, {
   3.7928412515120993`*^9, 3.792841338172965*^9}, {3.792841623513248*^9, 
   3.792841624005987*^9}, 3.792841673104003*^9, {3.792842466685299*^9, 
   3.792842493309701*^9}, {3.792842554897097*^9, 3.7928425660755167`*^9}, {
   3.792842634422552*^9, 3.792842653500198*^9}, {3.7932318140523043`*^9, 
   3.7932318159184217`*^9}, {3.793232568306192*^9, 3.793232612889409*^9}, {
   3.7932328265342627`*^9, 3.793232827780119*^9}, {3.7932333137456837`*^9, 
   3.793233319389818*^9}, {3.7932334725987377`*^9, 3.793233481954981*^9}, {
   3.793233567549234*^9, 3.7932335753344173`*^9}, {3.793234109076193*^9, 
   3.79323411002955*^9}, {3.793234625649644*^9, 3.793234666632866*^9}, {
   3.793234753643496*^9, 3.793234787953348*^9}, {3.793237818566841*^9, 
   3.79323784712894*^9}, {3.7932382885097313`*^9, 3.7932382888255787`*^9}, {
   3.793238935032902*^9, 3.793238966746608*^9}, {3.793313925754953*^9, 
   3.793313925762312*^9}, {3.7933140660863247`*^9, 3.793314088892256*^9}, {
   3.7933143247089853`*^9, 3.793314337125317*^9}, {3.79331441978144*^9, 
   3.793314421209125*^9}, {3.7933144629826*^9, 3.7933144874941998`*^9}, {
   3.793444939104265*^9, 3.793444939112287*^9}, {3.7934650562504883`*^9, 
   3.793465094490333*^9}, {3.793465163597599*^9, 3.793465168447773*^9}, {
   3.793466043268198*^9, 3.793466091493733*^9}, {3.793466358624346*^9, 
   3.793466370794099*^9}, {3.793466506015046*^9, 3.793466507433257*^9}, {
   3.793901212182459*^9, 3.7939012155622807`*^9}, {3.793901370610619*^9, 
   3.7939014032602882`*^9}, {3.7939014833062267`*^9, 3.7939014897208033`*^9}},
 
 CellLabel->
  "In[495]:=",ExpressionUUID->"36436f66-50c0-48bf-8760-31d3abc8c600"],

Cell[TextData[{
 "Here is the system of ODE\[CloseCurlyQuote]s we use to do ",
 StyleBox["parametrized",
  FontSlant->"Italic"],
 " simulations:"
}], "Text",
 CellChangeTimes->{{3.792782947793372*^9, 3.792782973825616*^9}, {
  3.7927830226521187`*^9, 3.792783032912167*^9}, {3.7927831258393993`*^9, 
  3.792783136661377*^9}, {3.793898052777491*^9, 
  3.7938980532013817`*^9}},ExpressionUUID->"6783b02d-73a2-4734-b77f-\
00326d25f898"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsActualEquations", "=", "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"modelSEI2HR", "[", "\"\<Equations\>\"", "]"}], "//.", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{
        RowBox[{"modelSEI2HR", "[", "\"\<RateRules\>\"", "]"}], ",", 
        "lsFocusParams"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"modelSEI2HR", "[", "\"\<InitialConditions\>\"", "]"}], "//.", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{
        RowBox[{"modelSEI2HR", "[", "\"\<RateRules\>\"", "]"}], ",", 
        "lsFocusParams"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", "/@", "lsActualEquations"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792781370593688*^9, 3.792781390023394*^9}, {
  3.7927829817931423`*^9, 3.7927830097817163`*^9}, {3.7932318172925797`*^9, 
  3.793231820148613*^9}, {3.793313925767356*^9, 3.793313925768722*^9}, {
  3.7933149092314243`*^9, 3.793314933272561*^9}, {3.793444939116008*^9, 
  3.7934449391183367`*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"0bbf1faa-3778-4145-a006-48d90c80b894"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{"TP", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Max", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}]}], "]"}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"SP", "[", "t", "]"}], "45625"]}], "-", 
       FractionBox[
        RowBox[{"0.56`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{"0.56`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "45625"], "+", 
           FractionBox["1", "aincp"]}], ")"}]}], " ", 
        RowBox[{"EP", "[", "t", "]"}]}], "+", 
       FractionBox[
        RowBox[{"0.56`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{"0.56`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["INSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.01`", " ", 
          RowBox[{"INSP", "[", "t", "]"}]}], "aip"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"sspf", "[", "SP", "]"}]}], ")"}]}], "aincp"]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ISSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"0.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "-", 
       FractionBox[
        RowBox[{"ISSP", "[", "t", "]"}], "aip"], "-", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "+", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"HB", "[", "t", "]"}], "-", 
                  RowBox[{"HP", "[", "t", "]"}]}], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"EP", "[", "t", "]"}], " ", 
                   RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}], "]"}], 
               RowBox[{
                RowBox[{"HP", "[", "t", "]"}], "<", 
                RowBox[{"HB", "[", "t", "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True], ")"}]}]}]},
    {"7", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}]}], "aip"], "-", 
       FractionBox[
        RowBox[{"RP", "[", "t", "]"}], "45625"]}]}]},
    {"8", 
     RowBox[{
      RowBox[{
       SuperscriptBox["DIP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"9", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HB", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}]}]}]},
    {"10", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MHS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"HP", "[", "t", "]"}]}]},
    {"11", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MLP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"INSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"ISSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"12", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "999999"}]},
    {"13", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"14", 
     RowBox[{
      RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"15", 
     RowBox[{
      RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"16", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"17", 
     RowBox[{
      RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"18", 
     RowBox[{
      RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "1000000"}]},
    {"19", 
     RowBox[{
      RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"20", 
     RowBox[{
      RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"21", 
     RowBox[{
      RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"nhbr", "[", "TP", "]"}], " ", 
       RowBox[{"TP", "[", "0", "]"}]}]}]},
    {"22", 
     RowBox[{
      RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.792999558818084*^9, 3.793035090354694*^9, 3.793231824275134*^9, 
   3.793232101116582*^9, 3.7932322741579847`*^9, 3.793232358362792*^9, 
   3.793232449685364*^9, 3.7932326185011683`*^9, 3.793232851005496*^9, 
   3.793232941351387*^9, {3.79323298158007*^9, 3.793232998057612*^9}, 
   3.79323303543067*^9, 3.7932333250757933`*^9, 3.793233484114609*^9, 
   3.793233579159305*^9, 3.793234113530216*^9, 3.793234603541686*^9, 
   3.7932346685833817`*^9, 3.7932347895658903`*^9, 3.79323485417948*^9, 
   3.793234958347126*^9, 3.7932352370926456`*^9, 3.793235456382606*^9, 
   3.793237169020535*^9, 3.7932372718644114`*^9, 3.793237759530428*^9, 
   3.79323784940828*^9, {3.7932379111849737`*^9, 3.793237914793775*^9}, {
   3.79323826445892*^9, 3.793238303100395*^9}, {3.7932384121792593`*^9, 
   3.793238430074218*^9}, 3.7932389814937773`*^9, 3.793239109993849*^9, {
   3.793314094882691*^9, 3.793314120507409*^9}, {3.7933144243086157`*^9, 
   3.793314429932096*^9}, 3.793314491906684*^9, 3.7933147964414387`*^9, {
   3.793314934609267*^9, 3.793314936871611*^9}, 3.793315013994079*^9, 
   3.793315320571965*^9, 3.793372057761404*^9, 3.793444955554646*^9, 
   3.7934451934976673`*^9, 3.793445898115645*^9, 3.793445938737308*^9, 
   3.793446453191989*^9, 3.793446510356444*^9, 3.7934468171933517`*^9, 
   3.793446942771779*^9, 3.79344699776961*^9, {3.7934470289206743`*^9, 
   3.793447045339067*^9}, 3.7934470906513433`*^9, 3.793447201152855*^9, 
   3.793447309389276*^9, 3.7934476657103*^9, 3.793447755045456*^9, 
   3.793463675432293*^9, 3.793464479854129*^9, 3.793465115291359*^9, 
   3.793465172088522*^9, 3.793465207919097*^9, 3.793465368976831*^9, 
   3.793466098589995*^9, {3.793466413546274*^9, 3.793466424525094*^9}, 
   3.793466528881254*^9, 3.7934672920260983`*^9, 3.793540908649539*^9, 
   3.793650754401741*^9, 3.7937652401216383`*^9, 3.7937652710236673`*^9, 
   3.7938759129161777`*^9, 3.793898452966104*^9, 3.79389889582992*^9, {
   3.793901225739807*^9, 3.793901234249524*^9}, 3.793901409798503*^9, 
   3.7939015083550653`*^9, 3.79398195892452*^9, 3.794408433312469*^9, 
   3.794408602258218*^9, 3.795008762943083*^9, 3.795009436371181*^9, 
   3.795015219797015*^9, 3.795017059148876*^9, 3.795018500712482*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"8357fc82-5c8e-45d6-bfdc-124046ef5686"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 
  3.792782468411478*^9}},ExpressionUUID->"44336758-b4ae-493f-b420-\
b3ce98223752"],

Cell[TextData[{
 "Straightforward simulation for one year using ",
 StyleBox["ParametricNDSolve", "Program"],
 " :"
}], "Text",
 CellChangeTimes->{{3.792782841771414*^9, 3.792782873496614*^9}, {
  3.793898064944557*^9, 
  3.793898065666806*^9}},ExpressionUUID->"5489e6c3-9fe4-401a-8943-\
15f75e3adb06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSol", "=", "\[IndentingNewLine]", 
   RowBox[{"Association", "@", 
    RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
     RowBox[{"ParametricNDSolve", "[", 
      RowBox[{"lsActualEquations", ",", 
       RowBox[{"GetStockSymbols", "[", 
        RowBox[{"modelSEI2HR", ",", 
         RowBox[{"__", "~~", "__"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "365"}], "}"}], ",", "lsFocusParams"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.786316903262426*^9, 3.7863169734811277`*^9}, {
   3.786317049414694*^9, 3.78631713801545*^9}, {3.786317170125654*^9, 
   3.786317171341251*^9}, {3.78631721822897*^9, 3.7863172260388107`*^9}, {
   3.786317257776497*^9, 3.786317267675886*^9}, {3.786317579857354*^9, 
   3.786317587100259*^9}, {3.78631771545534*^9, 3.786317717006637*^9}, {
   3.7863178231874437`*^9, 3.7863178266953793`*^9}, {3.7863178625068502`*^9, 
   3.786317867320408*^9}, {3.786318118471575*^9, 3.786318122833959*^9}, {
   3.786318247747398*^9, 3.786318249343207*^9}, {3.786318302895005*^9, 
   3.7863183488188677`*^9}, {3.786318485069227*^9, 3.7863184998946877`*^9}, {
   3.786318551500525*^9, 3.786318556102796*^9}, {3.786318800031804*^9, 
   3.7863188166821404`*^9}, {3.786319912135104*^9, 3.786319912301959*^9}, {
   3.7863203700386868`*^9, 3.7863203933146*^9}, {3.786320438583296*^9, 
   3.786320442702189*^9}, {3.786320631752533*^9, 3.786320633854203*^9}, {
   3.786320929679583*^9, 3.786320929873125*^9}, {3.786321017397238*^9, 
   3.7863210182955933`*^9}, {3.7863213851774387`*^9, 3.786321411762323*^9}, {
   3.786321669705655*^9, 3.7863217071663523`*^9}, {3.786322435235704*^9, 
   3.786322437432716*^9}, {3.786323349728922*^9, 3.7863233540018387`*^9}, {
   3.786323401322722*^9, 3.786323401525729*^9}, {3.7863248813985977`*^9, 
   3.786324930179571*^9}, {3.786325674321974*^9, 3.786325675235272*^9}, {
   3.7863701591118593`*^9, 3.786370159437223*^9}, {3.786548850876053*^9, 
   3.786548851845343*^9}, {3.786549176561618*^9, 3.7865491772010612`*^9}, {
   3.786549298085902*^9, 3.786549301289637*^9}, {3.786549636649568*^9, 
   3.78654963975179*^9}, {3.7865496699444637`*^9, 3.786549708963323*^9}, {
   3.78654974800352*^9, 3.7865497504540453`*^9}, {3.786588245547654*^9, 
   3.7865882529254723`*^9}, {3.786755036973909*^9, 3.7867551453891983`*^9}, {
   3.786755221082431*^9, 3.786755228596093*^9}, {3.786755893831298*^9, 
   3.786755896034431*^9}, {3.786756640888109*^9, 3.7867566794632187`*^9}, {
   3.78675670957026*^9, 3.7867567258817244`*^9}, {3.786756821118629*^9, 
   3.786756826986474*^9}, {3.786757795391692*^9, 3.7867577964710493`*^9}, {
   3.786792236919899*^9, 3.786792238616351*^9}, 3.786792724131291*^9, {
   3.7867928109714937`*^9, 3.786792813826539*^9}, {3.786810851941722*^9, 
   3.7868108618568974`*^9}, {3.786811533778091*^9, 3.786811535552885*^9}, {
   3.7868117540583353`*^9, 3.786811755359893*^9}, {3.787067108222567*^9, 
   3.787067108765233*^9}, {3.787067743880206*^9, 3.7870677507634706`*^9}, {
   3.787067887151634*^9, 3.7870679145325623`*^9}, {3.787068071980609*^9, 
   3.787068072476891*^9}, {3.787068137243256*^9, 3.787068137584405*^9}, 
   3.7871495015779543`*^9, {3.787151638934854*^9, 3.787151641946806*^9}, {
   3.787153204936743*^9, 3.787153209747772*^9}, {3.787153265921918*^9, 
   3.7871532728068857`*^9}, {3.7871533097769413`*^9, 
   3.7871533100451736`*^9}, {3.7871534232247667`*^9, 3.787153423630227*^9}, 
   3.787153464253841*^9, {3.787271547595359*^9, 3.787271582242962*^9}, {
   3.7872718466138*^9, 3.787271862938999*^9}, {3.787273631772451*^9, 
   3.787273633415929*^9}, 3.787273716373279*^9, {3.787327262410672*^9, 
   3.787327262849859*^9}, {3.78733174280494*^9, 3.787331747249434*^9}, {
   3.787331806154708*^9, 3.787331807907237*^9}, {3.7873321332998123`*^9, 
   3.787332145485935*^9}, {3.78735635846045*^9, 3.787356384760757*^9}, {
   3.7875002741900597`*^9, 3.787500274563574*^9}, {3.787501367309001*^9, 
   3.787501367739503*^9}, {3.787504947643713*^9, 3.787504947799387*^9}, {
   3.787932999392992*^9, 3.787933165330158*^9}, {3.7879332121319637`*^9, 
   3.7879332386152782`*^9}, 3.787941235834676*^9, 3.787941321016114*^9, {
   3.7879414282597103`*^9, 3.787941428701593*^9}, {3.7879431075826597`*^9, 
   3.787943108008009*^9}, {3.7879433685629873`*^9, 3.7879433752895947`*^9}, {
   3.787943847230296*^9, 3.787943868519953*^9}, 3.7879440241794357`*^9, 
   3.78794418285363*^9, {3.787961512445311*^9, 3.787961512716276*^9}, {
   3.787963513451579*^9, 3.787963513741569*^9}, {3.787963676343705*^9, 
   3.787963679421777*^9}, {3.787964131053928*^9, 3.7879641394551353`*^9}, {
   3.7879642206153717`*^9, 3.787964229457213*^9}, {3.787965053163312*^9, 
   3.7879650750985823`*^9}, {3.787987508287719*^9, 3.787987509816074*^9}, {
   3.787987640039134*^9, 3.7879876455269737`*^9}, {3.787987696976219*^9, 
   3.787987697648828*^9}, 3.787987859980227*^9, {3.787998453450206*^9, 
   3.7879984858139772`*^9}, {3.787998622711328*^9, 3.7879986509173117`*^9}, {
   3.787998810026828*^9, 3.787998814299572*^9}, {3.78799901615248*^9, 
   3.78799901664534*^9}, {3.788011569396737*^9, 3.7880115696551237`*^9}, {
   3.7880116028083687`*^9, 3.788011604227702*^9}, {3.788014529586891*^9, 
   3.788014529764153*^9}, {3.7880153240175953`*^9, 3.788015324376362*^9}, {
   3.788015431660056*^9, 3.788015431904756*^9}, {3.788105198144033*^9, 
   3.7881052188897943`*^9}, {3.7882764415439377`*^9, 3.788276442285069*^9}, {
   3.792338930312811*^9, 3.792339007145792*^9}, {3.79234005161412*^9, 
   3.792340064685316*^9}, {3.792340155375489*^9, 3.792340187492379*^9}, {
   3.792340443853345*^9, 3.792340449155024*^9}, {3.792341044726254*^9, 
   3.792341045240695*^9}, {3.792343694845417*^9, 3.792343700473075*^9}, {
   3.792518587473897*^9, 3.7925185914766397`*^9}, {3.7925213729847193`*^9, 
   3.792521374941101*^9}, {3.792781292170731*^9, 3.7927812928444138`*^9}, {
   3.7928460287248077`*^9, 3.7928460636774807`*^9}, 3.793231830309168*^9, {
   3.793233202525556*^9, 3.793233247174708*^9}, {3.793233720250177*^9, 
   3.7932337263007402`*^9}, 3.793234140938962*^9, 3.793313925777979*^9, 
   3.793444939121839*^9, {3.793900775654748*^9, 3.7939007762163363`*^9}, {
   3.7939012448674307`*^9, 3.793901246396137*^9}, 3.795014544456517*^9},
 CellLabel->
  "In[500]:=",ExpressionUUID->"d564b6bf-bea3-4b3b-9d8a-f4c336473695"],

Cell["\<\
Example evaluation of a solution using parameters from the model object:\
\>", "Text",
 CellChangeTimes->{{3.793898078455127*^9, 
  3.793898129721397*^9}},ExpressionUUID->"61faff96-c779-4806-ac73-\
76eb2e4dce36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lsFocusParams", "//.", 
  RowBox[{"modelSEI2HR", "[", "\"\<RateRules\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7932331537998257`*^9, 3.7932331704275208`*^9}, {
   3.793233331474634*^9, 3.7932333348719053`*^9}, 3.793313925944232*^9, 
   3.79344493912527*^9, {3.793446909220319*^9, 3.7934469103212633`*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"7fdf830a-e33d-41a1-ba83-074377c3172b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "28", ",", "0.2`", ",", "0.01`", ",", "60", ",", "56", ",", 
   "0.25`", ",", "0", ",", "3000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7932330699100637`*^9, {3.793233166003623*^9, 3.793233170996438*^9}, 
   3.793233251105337*^9, {3.793233325281695*^9, 3.7932333354376097`*^9}, 
   3.793233484320076*^9, 3.7932336118765793`*^9, 3.7932341140717497`*^9, 
   3.7932341481595716`*^9, 3.7932346037023897`*^9, 3.79323466883806*^9, 
   3.793234789821499*^9, 3.793234854467122*^9, 3.793234958559684*^9, 
   3.793235237180949*^9, 3.79323545660684*^9, 3.793237169093782*^9, 
   3.793237272077567*^9, 3.7932377597587023`*^9, 3.793237853496319*^9, 
   3.7932379150021067`*^9, {3.793238264606544*^9, 3.7932383033111267`*^9}, {
   3.793238412394865*^9, 3.793238430338327*^9}, 3.793238981704484*^9, 
   3.79323911020124*^9, 3.793314097268281*^9, 3.7933141273968573`*^9, 
   3.7933142560601482`*^9, 3.793314492191895*^9, 3.793314796797206*^9, 
   3.793314937241446*^9, 3.7933150147401*^9, 3.7933153209272137`*^9, 
   3.793372059864441*^9, 3.793444955607801*^9, 3.793445198788932*^9, 
   3.793445898330881*^9, 3.7934459633037777`*^9, 3.793446458409466*^9, 
   3.7934466560613403`*^9, 3.7934468286521177`*^9, 3.793446945558983*^9, {
   3.793447000754817*^9, 3.79344705455754*^9}, 3.793447097201212*^9, 
   3.793447201717424*^9, 3.793447311820627*^9, 3.793447668121769*^9, 
   3.793447763839527*^9, 3.793463675720327*^9, 3.793464480071329*^9, 
   3.793465115511943*^9, 3.793465177301317*^9, 3.793465212424076*^9, 
   3.793465369157199*^9, 3.793466103657261*^9, {3.793466413728078*^9, 
   3.793466424708877*^9}, 3.7934664741799717`*^9, 3.7934665290630693`*^9, 
   3.793466566234877*^9, 3.793467292314011*^9, 3.7935409092185717`*^9, 
   3.79365075466611*^9, 3.7937652403225317`*^9, 3.793765275538095*^9, 
   3.793875913197962*^9, 3.793898453228887*^9, 3.7938988961478252`*^9, {
   3.793901234574493*^9, 3.793901248843626*^9}, 3.79390141026045*^9, 
   3.793901513002841*^9, 3.793981959248249*^9, 3.794408433544351*^9, 
   3.7944086024546833`*^9, 3.795008763266156*^9, 3.795009436572288*^9, 
   3.795015219828643*^9, 3.795017059211022*^9, 3.7950185007249813`*^9},
 CellLabel->
  "Out[501]=",ExpressionUUID->"1a47a38c-b1d8-4764-bacd-40ac388e5a19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seq", "=", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lsFocusParams", "//.", 
         RowBox[{"modelSEI2HR", "[", "\"\<RateRules\>\"", "]"}]}], "/.", 
        RowBox[{"t", "\[Rule]", "12"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"aSol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "[", "seq", "]"}], "[", "12", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.793233054132896*^9, 3.7932331232760963`*^9}, 
   3.7932331801619873`*^9, {3.793233355853806*^9, 3.7932333939492617`*^9}, {
   3.7932334333792067`*^9, 3.79323344285991*^9}, {3.7932336169053373`*^9, 
   3.793233625596871*^9}, {3.7932379209090233`*^9, 3.793237921178668*^9}, {
   3.793238312886155*^9, 3.793238313223515*^9}, {3.7932389877961903`*^9, 
   3.793238990627001*^9}, 3.793314136831244*^9, {3.793445971889851*^9, 
   3.793445973778126*^9}, {3.793446830670734*^9, 3.793446830873109*^9}, {
   3.793446913629291*^9, 3.793446939659038*^9}, {3.793465232580687*^9, 
   3.793465241758209*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"2eba1d30-a5d6-400d-ae64-46bd76d08c99"],

Cell[BoxData["999720.7469262456`"], "Output",
 CellChangeTimes->{
  3.79344731185432*^9, 3.793447668153408*^9, 3.793447763893282*^9, 
   3.7934636784194183`*^9, 3.793464480107069*^9, 3.7934651155710506`*^9, 
   3.7934651811788588`*^9, {3.7934652149132347`*^9, 3.7934652423253613`*^9}, 
   3.7934653691946497`*^9, 3.7934661037068*^9, {3.79346641376362*^9, 
   3.7934664247561626`*^9}, 3.79346647745317*^9, 3.793466529101006*^9, 
   3.793466568427651*^9, 3.793467292389819*^9, 3.793540909398151*^9, 
   3.793650754771338*^9, 3.7937652403756657`*^9, 3.793765275607584*^9, 
   3.793875913266336*^9, 3.793898453275392*^9, 3.793898896437831*^9, {
   3.7939012351397448`*^9, 3.793901250116961*^9}, 3.793901410563698*^9, 
   3.793901514154525*^9, 3.793981959325169*^9, 3.79440843359291*^9, 
   3.794408602504033*^9, 3.795008763600531*^9, 3.7950094366195383`*^9, 
   3.7950152198739758`*^9, 3.795017059268162*^9, 3.795018500776335*^9},
 CellLabel->
  "Out[502]=",ExpressionUUID->"4fd79a26-eb8d-41de-a8cc-5029834fce3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive interface (quarantine)", "Section",
 CellChangeTimes->{
  3.793465303133876*^9},ExpressionUUID->"830e2313-3daa-4985-90bb-\
533f7c1721e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"opts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsPopulationKeys", "=", 
   RowBox[{"{", 
    RowBox[{
    "TP", ",", "SP", ",", "EP", ",", "ISSP", ",", "INSP", ",", "HP", ",", 
     "RP", ",", "DIP"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsEconKeys", "=", 
   RowBox[{"{", 
    RowBox[{"MHS", ",", "MMSP", ",", "MLP", ",", "DIP"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lsPopulationPlots", ",", "lsEconPlots", ",", "lsRestPlots"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lsPopulationPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"modelSEI2HR", "[", "\"\<Stocks\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"KeyTake", "[", 
          RowBox[{"aSol", ",", "lsPopulationKeys"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "qsd", ",", "ql",
            ",", "qcrf", ",", "nhbcr", ",", 
           RowBox[{"nhbr", "/", "1000"}]}], "}"}], ",", "ndays", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "popLogPlotQ"}], ",", 
         RowBox[{"\"\<Together\>\"", "\[Rule]", "popTogetherQ"}], ",", 
         RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "popDerivativesQ"}], ",", 
         RowBox[{
         "\"\<DerivativePrefix\>\"", "\[Rule]", "\"\<\[CapitalDelta]\>\""}], 
         ",", "opts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsEconPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"modelSEI2HR", "[", "\"\<Stocks\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"KeyTake", "[", 
          RowBox[{"aSol", ",", "lsEconKeys"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "qsd", ",", "ql",
            ",", "qcrf", ",", "nhbcr", ",", 
           RowBox[{"nhbr", "/", "1000"}]}], "}"}], ",", "ndays", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "econLogPlotQ"}], ",", 
         RowBox[{"\"\<Together\>\"", "\[Rule]", "econTogetherQ"}], ",", 
         RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "econDerivativesQ"}], ",", 
         
         RowBox[{
         "\"\<DerivativePrefix\>\"", "\[Rule]", "\"\<\[CapitalDelta]\>\""}], 
         ",", "opts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsRestPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"modelSEI2HR", "[", "\"\<Stocks\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"aSol", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"lsPopulationKeys", ",", "lsEconKeys"}], "]"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "qsd", ",", "ql",
            ",", "qcrf", ",", "nhbcr", ",", 
           RowBox[{"nhbr", "/", "1000"}]}], "}"}], ",", "ndays", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<LogPlot\>\"", "\[Rule]", "econLogPlotQ"}], ",", 
         RowBox[{"\"\<Together\>\"", "\[Rule]", "econTogetherQ"}], ",", 
         RowBox[{"\"\<Derivatives\>\"", "\[Rule]", "econDerivativesQ"}], ",", 
         
         RowBox[{
         "\"\<DerivativePrefix\>\"", "\[Rule]", "\"\<\[CapitalDelta]\>\""}], 
         ",", "opts"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Multicolumn", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
         "lsPopulationPlots", ",", "lsEconPlots", ",", "lsRestPlots"}], "]"}],
         ",", "nPlotColumns", ",", 
        RowBox[{"Dividers", "\[Rule]", "All"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", "0.8", "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aincp", ",", "6.", ",", "\"\<Average incubation period (days)\>\""}], 
      "}"}], ",", "1", ",", "60.", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aip", ",", "21.", ",", "\"\<Average infectious period (days)\>\""}], 
      "}"}], ",", "1", ",", "60.", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "spf", ",", "0.2", ",", 
       "\"\<Severely symptomatic population fraction\>\""}], "}"}], ",", "0", 
     ",", "1", ",", "0.025", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qsd", ",", "60", ",", "\"\<Quarantine start days\>\""}], "}"}],
      ",", "0", ",", "365", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ql", ",", 
       RowBox[{"8", "*", "7"}], ",", "\"\<Quarantine length (in days)\>\""}], 
      "}"}], ",", "0", ",", "120", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qcrf", ",", "0.25", ",", "\"\<Quarantine contact rate fraction\>\""}], 
      "}"}], ",", "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "crhp", ",", "0.1", ",", 
       "\"\<Contact rate of the hospitalized population\>\""}], "}"}], ",", 
     "0", ",", "30", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nhbcr", ",", "0", ",", "\"\<Number of hospital beds change rate\>\""}],
       "}"}], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.001", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nhbr", ",", "2.9", ",", 
       "\"\<Number of hospital beds rate (per 1000 people)\>\""}], "}"}], ",",
      "0", ",", "100", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ndays", ",", "365", ",", "\"\<Number of days\>\""}], "}"}], 
     ",", "1", ",", "365", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popTogetherQ", ",", "True", ",", "\"\<Plot populations together\>\""}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popDerivativesQ", ",", "False", ",", 
       "\"\<Plot populations derivatives\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popLogPlotQ", ",", "False", ",", "\"\<LogPlot populations\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "econTogetherQ", ",", "True", ",", 
       "\"\<Plot economics functions together\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "econDerivativesQ", ",", "False", ",", 
       "\"\<Plot economics functions derivatives\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "econLogPlotQ", ",", "True", ",", 
       "\"\<LogPlot economics functions\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nPlotColumns", ",", "1", ",", "\"\<Number of plot columns\>\""}], 
      "}"}], ",", 
     RowBox[{"Range", "[", "5", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.786317238125729*^9, 3.7863172448803053`*^9}, {
   3.786317305823036*^9, 3.78631742738162*^9}, {3.7863174591434803`*^9, 
   3.7863174710329447`*^9}, {3.7863177602630157`*^9, 3.7863177665402184`*^9}, 
   3.786318439978745*^9, 3.786318474335602*^9, 3.786318595635326*^9, 
   3.7863186886099987`*^9, {3.786318973575309*^9, 3.78631897913483*^9}, {
   3.7863192960522013`*^9, 3.7863193520896606`*^9}, {3.78632045214303*^9, 
   3.786320515851375*^9}, {3.786320548951707*^9, 3.786320608254611*^9}, 
   3.786320716973219*^9, {3.786320747618629*^9, 3.78632078936588*^9}, {
   3.7863209231138277`*^9, 3.7863209233444147`*^9}, {3.786321063354065*^9, 
   3.786321063823612*^9}, {3.7863212618845663`*^9, 3.78632126276233*^9}, {
   3.786321726238051*^9, 3.7863217271097517`*^9}, {3.78632228824187*^9, 
   3.786322300343925*^9}, {3.786322445978818*^9, 3.786322489110881*^9}, {
   3.786322706804262*^9, 3.786322733501684*^9}, {3.7863227654301157`*^9, 
   3.7863227695107727`*^9}, {3.786323789700986*^9, 3.78632380666453*^9}, {
   3.786323871726573*^9, 3.7863238720086412`*^9}, {3.78632406961727*^9, 
   3.786324070807716*^9}, {3.786324647439806*^9, 3.786324648944803*^9}, {
   3.7863248014998913`*^9, 3.78632480579291*^9}, 3.78632483949166*^9, {
   3.786370422850316*^9, 3.786370441179221*^9}, {3.786370523607484*^9, 
   3.786370525157041*^9}, {3.786370570530699*^9, 3.786370673606064*^9}, {
   3.786374148618553*^9, 3.786374241644977*^9}, {3.7863743609559717`*^9, 
   3.786374361166888*^9}, {3.786381001681492*^9, 3.786381006216125*^9}, {
   3.786548862175577*^9, 3.786548863305829*^9}, {3.786549167685629*^9, 
   3.786549168612378*^9}, {3.786549307803813*^9, 3.7865493538855886`*^9}, {
   3.786549836126419*^9, 3.786549865712524*^9}, {3.7867564875938873`*^9, 
   3.78675656453445*^9}, {3.786756607565278*^9, 3.7867566079229097`*^9}, {
   3.7867925577521553`*^9, 3.78679261832148*^9}, {3.786794241339982*^9, 
   3.786794242462961*^9}, {3.786810270344038*^9, 3.78681028617314*^9}, {
   3.786810542579221*^9, 3.786810543566774*^9}, {3.786810852009184*^9, 
   3.786810861918651*^9}, {3.78681123463466*^9, 3.78681124289076*^9}, {
   3.786811763483728*^9, 3.7868117861639633`*^9}, {3.7870671202706223`*^9, 
   3.78706716080371*^9}, {3.787067311693521*^9, 3.787067312074051*^9}, {
   3.787068090702633*^9, 3.787068091276505*^9}, {3.787068141990532*^9, 
   3.787068146399663*^9}, {3.7870738473711643`*^9, 3.787073914759479*^9}, {
   3.787151713207073*^9, 3.787151713454609*^9}, {3.787153279424542*^9, 
   3.7871532799626226`*^9}, {3.787153314727811*^9, 3.787153314950966*^9}, {
   3.7871533640356607`*^9, 3.7871533752955217`*^9}, 3.787153470036459*^9, {
   3.787155281055571*^9, 3.787155288030821*^9}, {3.787156071642871*^9, 
   3.787156186328278*^9}, {3.787273890381342*^9, 3.7872738904914103`*^9}, {
   3.787274893549137*^9, 3.7872748949293633`*^9}, {3.787327417876851*^9, 
   3.78732743026373*^9}, {3.787327476884872*^9, 3.7873274785692587`*^9}, {
   3.787328383609994*^9, 3.7873283890435247`*^9}, {3.787328936726845*^9, 
   3.787329013442053*^9}, {3.787329064023488*^9, 3.787329140479594*^9}, {
   3.787330369395667*^9, 3.787330518033765*^9}, {3.7873559639606047`*^9, 
   3.7873560113171053`*^9}, {3.78735604958642*^9, 3.787356076156808*^9}, {
   3.7873561880659037`*^9, 3.787356218809911*^9}, {3.7873562510666122`*^9, 
   3.78735630362477*^9}, {3.78735650973223*^9, 3.7873565182685537`*^9}, {
   3.7875013748468847`*^9, 3.787501414829297*^9}, {3.787504869994722*^9, 
   3.787504912890319*^9}, {3.788016149006979*^9, 3.78801617031537*^9}, {
   3.7880162029395933`*^9, 3.788016207009506*^9}, {3.78801703767134*^9, 
   3.7880170378863277`*^9}, 3.788497622332589*^9, {3.78849818633349*^9, 
   3.78849823041328*^9}, {3.788498324182007*^9, 3.788498336026155*^9}, {
   3.78854322537654*^9, 3.78854324907491*^9}, {3.788543313700819*^9, 
   3.788543314132841*^9}, {3.788543450641032*^9, 3.788543514124896*^9}, {
   3.788543981727172*^9, 3.788544060080567*^9}, {3.788544117065056*^9, 
   3.788544143693222*^9}, {3.788544439383399*^9, 3.7885444406411324`*^9}, {
   3.788551508962717*^9, 3.788551571896957*^9}, {3.788551617719614*^9, 
   3.7885516339851637`*^9}, {3.788551724089517*^9, 3.788551726732849*^9}, {
   3.7885518598112288`*^9, 3.788551882545281*^9}, {3.7885552485905313`*^9, 
   3.788555290790285*^9}, {3.78855590930855*^9, 3.788555909315702*^9}, {
   3.788555951312861*^9, 3.7885559661624413`*^9}, {3.788556022685916*^9, 
   3.788556048277678*^9}, {3.788556609761383*^9, 3.78855661140443*^9}, {
   3.7885632652501917`*^9, 3.7885632659339657`*^9}, {3.788563328080624*^9, 
   3.788563385762018*^9}, {3.78856346424054*^9, 3.7885634956720552`*^9}, {
   3.788564251507742*^9, 3.788564314407947*^9}, {3.788619666277625*^9, 
   3.788619672286278*^9}, {3.788619916167513*^9, 3.788619919948606*^9}, {
   3.7886199623735447`*^9, 3.7886199671309032`*^9}, {3.7886207821965303`*^9, 
   3.788620782447179*^9}, {3.792339986534932*^9, 3.7923401914305696`*^9}, {
   3.792340224711012*^9, 3.792340246669105*^9}, {3.792340307618897*^9, 
   3.7923403104572763`*^9}, {3.7923403900543823`*^9, 3.792340391289946*^9}, {
   3.792340464305459*^9, 3.7923406632749157`*^9}, {3.7923406983531437`*^9, 
   3.7923408193605003`*^9}, {3.792340858851686*^9, 3.792340877716078*^9}, {
   3.792341004743967*^9, 3.792341011852682*^9}, {3.792341084563244*^9, 
   3.792341144254981*^9}, {3.792344112988242*^9, 3.79234411309833*^9}, {
   3.792345507902218*^9, 3.792345678703079*^9}, {3.792345709888754*^9, 
   3.7923457553491907`*^9}, {3.792345799551609*^9, 3.7923459978244457`*^9}, 
   3.792346177592004*^9, {3.792346360698246*^9, 3.792346504644956*^9}, {
   3.7923466797214737`*^9, 3.7923468010485783`*^9}, {3.792407360686906*^9, 
   3.7924073620792007`*^9}, {3.792409001165797*^9, 3.792409025081437*^9}, {
   3.792409075870474*^9, 3.792409094394063*^9}, 3.792414210709062*^9, {
   3.792414269309236*^9, 3.792414280500248*^9}, {3.792414331724285*^9, 
   3.792414335918174*^9}, {3.792417388251939*^9, 3.792417394169883*^9}, 
   3.792432617000585*^9, 3.792432692853957*^9, {3.792441861005801*^9, 
   3.792441861679482*^9}, {3.792443303379622*^9, 3.792443308936564*^9}, {
   3.792443495105538*^9, 3.792443537958232*^9}, {3.79244357544234*^9, 
   3.7924436487357388`*^9}, {3.792444205747911*^9, 3.792444206195497*^9}, {
   3.792444265904039*^9, 3.792444267206521*^9}, {3.792448308403257*^9, 
   3.79244831195823*^9}, {3.792448917939115*^9, 3.792448919173271*^9}, {
   3.7924493327541637`*^9, 3.7924493450270157`*^9}, {3.792449414645301*^9, 
   3.792449415396982*^9}, {3.792450245661256*^9, 3.7924502491921*^9}, {
   3.792451564969988*^9, 3.792451608707293*^9}, {3.792451665081016*^9, 
   3.7924516737355947`*^9}, {3.7925022126998177`*^9, 3.792502213276998*^9}, {
   3.7925029420290213`*^9, 3.7925030719778976`*^9}, {3.792503103277059*^9, 
   3.792503132829657*^9}, {3.792503170519659*^9, 3.792503274751156*^9}, {
   3.7925033826541777`*^9, 3.792503389415659*^9}, {3.79250342286154*^9, 
   3.792503423510808*^9}, {3.792503827160379*^9, 3.792503827630527*^9}, {
   3.792503871676291*^9, 3.7925039113123827`*^9}, {3.792503964480145*^9, 
   3.79250402746771*^9}, {3.792504177669862*^9, 3.792504181719342*^9}, {
   3.792504319129912*^9, 3.792504378485444*^9}, {3.792504445640291*^9, 
   3.7925045488960257`*^9}, {3.7925046277802353`*^9, 3.792504628273101*^9}, 
   3.792507458337905*^9, {3.792507510773199*^9, 3.7925075136968412`*^9}, {
   3.7925165600903683`*^9, 3.792516578511261*^9}, {3.793112738429776*^9, 
   3.793112756976988*^9}, {3.7932616405793543`*^9, 3.793261678448497*^9}, {
   3.793261821111004*^9, 3.79326183169573*^9}, {3.7932619626261387`*^9, 
   3.7932619872971973`*^9}, {3.793262172487286*^9, 3.793262234285625*^9}, {
   3.793262309020323*^9, 3.7932623108428373`*^9}, {3.793262891544196*^9, 
   3.793262892127975*^9}, {3.793263167893942*^9, 3.79326316973639*^9}, {
   3.793263260818183*^9, 3.793263268906852*^9}, {3.793263319511345*^9, 
   3.7932633472219057`*^9}, {3.793263458204213*^9, 3.793263466294347*^9}, {
   3.79326369145437*^9, 3.793263692168653*^9}, {3.79326403057972*^9, 
   3.793264034367229*^9}, 3.793264070349216*^9, {3.793289181740947*^9, 
   3.793289195875703*^9}, {3.793290603646209*^9, 3.793290668882332*^9}, {
   3.79329070272359*^9, 3.793290753709564*^9}, {3.7932910824415073`*^9, 
   3.7932910829685297`*^9}, {3.79329120313479*^9, 3.793291205044091*^9}, {
   3.7934653220622177`*^9, 3.79346532578456*^9}, {3.7934663308252296`*^9, 
   3.793466349635172*^9}, {3.7934664058527203`*^9, 3.7934664119839087`*^9}, {
   3.7934667146492157`*^9, 3.793466737911417*^9}, {3.7934674041262207`*^9, 
   3.7934674047087717`*^9}, {3.793540934005924*^9, 3.793540934375325*^9}, {
   3.793541032141405*^9, 3.793541032484601*^9}, {3.793898475548843*^9, 
   3.793898490690917*^9}, {3.793898870223071*^9, 3.793898910895124*^9}, {
   3.793898962734329*^9, 3.793898966512385*^9}, {3.7938990591513643`*^9, 
   3.793899079367365*^9}, {3.793899212443462*^9, 3.793899223584831*^9}, {
   3.7939012727118587`*^9, 3.79390127334262*^9}},
 CellLabel->
  "In[503]:=",ExpressionUUID->"da4af440-f91e-492d-b92d-a559ccf35f1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity analysis", "Section",
 CellChangeTimes->{{3.792452366394855*^9, 
  3.792452375114081*^9}},ExpressionUUID->"98d720b2-0ce6-4d18-9411-\
43e6badfbe15"],

Cell["\<\
When making and using this kind of dynamics models it is important to see how \
the solutions react to changes of different parameters. I.e. what ranges of \
the which parameters bring dramatic changes into important stocks.\
\>", "Text",
 CellChangeTimes->{{3.7938981500169888`*^9, 
  3.793898366706668*^9}},ExpressionUUID->"74b72203-418a-49c1-b3ea-\
7f525b81a8e3"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The sensitivity analysis shown below should be done for other stocks and \
rates. (In order to keep this exposition short it is not done here.)"
}], "Text",
 CellChangeTimes->{{3.795013668211664*^9, 3.795013734981288*^9}, {
  3.7950137722199287`*^9, 
  3.795013833600689*^9}},ExpressionUUID->"9434e302-2efd-4827-81e6-\
efd2e7e692c7"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.795016746126457*^9, 
  3.795016749061967*^9}},ExpressionUUID->"37bc969e-4930-4ad0-810a-\
ee45d0055c90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "VariabilityPlots", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "VariabilityPlots", "]"}], "=", 
   RowBox[{"Options", "[", "Plot", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VariabilityPlots", "[", 
    RowBox[{
    "aSol_Association", ",", "FOCUSSymbol_", ",", "parRange_", ",", 
     "operation_String", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aincp", "=", "6.`"}], ",", 
       RowBox[{"aip", "=", "21.`"}], ",", 
       RowBox[{"crhp", "=", "0.1`"}], ",", 
       RowBox[{"econDerivativesQ", "=", "False"}], ",", 
       RowBox[{"econLogPlotQ", "=", "False"}], ",", 
       RowBox[{"econTogetherQ", "=", "False"}], ",", 
       RowBox[{"ndays", "=", "365"}], ",", 
       RowBox[{"nhbcr", "=", "0"}], ",", 
       RowBox[{"nhbr", "=", "2.9"}], ",", 
       RowBox[{"nPlotColumns", "=", "2"}], ",", 
       RowBox[{"popDerivativesQ", "=", "False"}], ",", 
       RowBox[{"popLogPlotQ", "=", "False"}], ",", 
       RowBox[{"popTogetherQ", "=", "True"}], ",", 
       RowBox[{"qcrf", "=", "0.25`"}], ",", 
       RowBox[{"ql", "=", 
        RowBox[{"8", "*", "7"}]}], ",", 
       RowBox[{"qsd", "=", "60"}], ",", 
       RowBox[{"spf", "=", "0.2`"}], ",", "funcs", ",", "funcPaths", ",", 
       "plots"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plots", "=", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"operation", "\[Equal]", "\"\<Identity\>\""}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"prefix", "=", "Nothing"}], ";", "\[IndentingNewLine]", 
          RowBox[{"funcs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"aSol", "[", "FOCUSSymbol", "]"}], "[", 
               RowBox[{
               "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "p", ",", 
                "ql", ",", "qcrf", ",", "nhbcr", ",", 
                FractionBox["nhbr", "1000"]}], "]"}], "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", "parRange"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcPathEnds", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "/.", 
              RowBox[{"t", "->", "ndays"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "funcs"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "@", "funcs"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "ndays"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "opts", "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "parRange"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"operation", "\[Equal]", "\"\<Derivative\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prefix", "=", "\"\<\[CapitalDelta]\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"aSol", "[", "FOCUSSymbol", "]"}], "[", 
                 RowBox[{
                 "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "p", ",", 
                  "ql", ",", "qcrf", ",", "nhbcr", ",", 
                  FractionBox["nhbr", "1000"]}], "]"}], "[", "t", "]"}], ",", 
               "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", "parRange"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcPathEnds", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "/.", 
              RowBox[{"t", "->", "ndays"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "funcs"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "@", "funcs"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "ndays"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "opts", "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "parRange"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"operation", "\[Equal]", "\"\<Integral\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prefix", "=", "\"\<\[Integral]\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"pArg", "=", "p"}], ",", 
                 RowBox[{"fArg", "=", 
                  RowBox[{"aSol", "[", "FOCUSSymbol", "]"}]}]}], "}"}], ",", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", "nd", "}"}], ",", 
                 RowBox[{"NIntegrate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fArg", "[", 
                    RowBox[{
                    "aincp", ",", "aip", ",", "spf", ",", "crhp", ",", "pArg",
                     ",", "ql", ",", "qcrf", ",", "nhbcr", ",", 
                    FractionBox["nhbr", "1000"]}], "]"}], "[", "t", "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "nd"}], "}"}], ",", 
                   RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
                   RowBox[{"AccuracyGoal", "\[Rule]", "3"}], ",", 
                   RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
                    RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
                    "}"}]}]}], "]"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", "parRange"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcPaths", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "funcs"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"Union", "[", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", "ndays", ",", "10"}], "]"}], ",", 
                  "ndays"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"funcPathEnds", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "[", "ndays", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "funcs"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"funcPaths", ",", 
            RowBox[{"Evaluate", "[", "opts", "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "parRange"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "True", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"GridTableForm", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"prefix", ",", "FOCUSSymbol"}], "}"}], "]"}], "\[Rule]", 
           "plots"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Differences at \>\"", ",", "ndays"}], "}"}], "]"}], 
           "\[Rule]", 
           RowBox[{"GridTableForm", "[", 
            RowBox[{
             RowBox[{"List", "@@@", 
              RowBox[{"Normal", "[", 
               RowBox[{"AssociationThread", "[", 
                RowBox[{"parRange", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "#", "]"}], "-", "#"}], "&"}], 
                   ")"}], "@", "funcPathEnds"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Parameter\>\"", ",", "\"\<Difference\>\""}], 
               "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.795019525601142*^9, 3.795019659745584*^9}, {
   3.79501969428517*^9, 3.795019764128581*^9}, {3.795019807758581*^9, 
   3.7950199728729486`*^9}, {3.795020065833293*^9, 3.795020080096696*^9}, {
   3.795020120780368*^9, 3.795020187470046*^9}, {3.7950202304476967`*^9, 
   3.7950202642099953`*^9}, {3.7950203025385723`*^9, 3.795020313876659*^9}, {
   3.795020410293666*^9, 3.795020416377426*^9}, {3.795020466092663*^9, 
   3.795020588697085*^9}, {3.795020695305847*^9, 3.7950206964623823`*^9}, {
   3.795020727884985*^9, 3.795020834649562*^9}, {3.7950208744896317`*^9, 
   3.795020991007753*^9}, {3.7950210617477922`*^9, 3.795021088028009*^9}, {
   3.7950211419512463`*^9, 3.795021199405367*^9}, {3.795021827167058*^9, 
   3.795021869095141*^9}, {3.795021952786387*^9, 3.795021988755126*^9}, {
   3.795023974315866*^9, 3.795024027742176*^9}, 3.795024064570127*^9, {
   3.795024105484709*^9, 3.795024136586335*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"102a36df-9cb6-4e3c-8a2f-49d1fa17d9fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of infected people", "Subsection",
 CellChangeTimes->{{3.795016833191214*^9, 
  3.7950168424507437`*^9}},ExpressionUUID->"cb51a990-bd38-4833-b6cc-\
d24356df346b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsQStartRange", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "365", "}"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"50", ",", "100", ",", "5"}], "]"}], ",", 
      RowBox[{"{", "140", "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795018844330399*^9, 3.795018861372806*^9}, {
  3.795019044464953*^9, 3.7950190528396873`*^9}, {3.795024168251025*^9, 
  3.7950241901548367`*^9}, {3.7950242893051987`*^9, 3.795024314832703*^9}, {
  3.795024345452173*^9, 3.795024352033835*^9}},
 CellLabel->
  "In[661]:=",ExpressionUUID->"67cf8d98-0ee9-4c84-8ee2-6e02931d0f41"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VariabilityPlots", "[", 
    RowBox[{
    "aSol", ",", "ISSP", ",", "lsQStartRange", ",", "#", ",", "opts", ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Identity\>\"", ",", "\"\<Integral\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7950205538299923`*^9, 3.795020555675024*^9}, {
  3.795020593601552*^9, 3.79502060047377*^9}, {3.7950238909039297`*^9, 
  3.7950239588636923`*^9}, {3.795024034377355*^9, 3.795024043396303*^9}, {
  3.7950241454039717`*^9, 3.795024164426311*^9}, {3.795024197616688*^9, 
  3.7950242008125668`*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"8278a7aa-dfdd-4016-80ed-008d5aef4b34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of deceased people", "Subsection",
 CellChangeTimes->{{3.795016833191214*^9, 
  3.795016870260437*^9}},ExpressionUUID->"80bfced1-52dd-4621-adcf-\
43c1cea31c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VariabilityPlots", "[", 
    RowBox[{
    "aSol", ",", "DIP", ",", "lsQStartRange", ",", "#", ",", "opts", ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Identity\>\"", ",", "\"\<Derivative\>\""}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.7950205538299923`*^9, 3.795020555675024*^9}, {
  3.795020593601552*^9, 3.79502060047377*^9}, {3.7950238909039297`*^9, 
  3.7950239588636923`*^9}, {3.795024034377355*^9, 3.795024043396303*^9}, {
  3.7950241454039717`*^9, 3.795024164426311*^9}, {3.795024197616688*^9, 
  3.7950242324444036`*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"6696ff63-ff86-4a49-8a2d-88019965a1c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of hospitalized people", "Subsection",
 CellChangeTimes->{{3.79501688115265*^9, 
  3.7950169009737062`*^9}},ExpressionUUID->"d947a779-6095-4912-98cc-\
c3f7a03238e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VariabilityPlots", "[", 
    RowBox[{
    "aSol", ",", "HP", ",", "lsQStartRange", ",", "#", ",", "opts", ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Identity\>\"", ",", "\"\<Integral\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7950205538299923`*^9, 3.795020555675024*^9}, {
  3.795020593601552*^9, 3.79502060047377*^9}, {3.7950238909039297`*^9, 
  3.7950239588636923`*^9}, {3.795024034377355*^9, 3.795024043396303*^9}, {
  3.7950241454039717`*^9, 3.795024164426311*^9}, {3.795024197616688*^9, 
  3.7950242524363956`*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"80a79b13-9bff-4d2e-bebf-fca06e6f8f00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.793819068515966*^9, 
  3.793819069978736*^9}},ExpressionUUID->"ab99834a-c7fe-497e-87f5-\
f6a971478885"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.7938192941283903`*^9, 
  3.793819299584835*^9}},ExpressionUUID->"f6af8829-08e7-4b6a-93d1-\
d370feef1f68"],

Cell[TextData[{
 "[Wk1] Wikipedia entry, ",
 ButtonBox["\"Compartmental models in epidemiology\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925809029512987`*^9, 
  3.792580956058198*^9}},ExpressionUUID->"d6927d0e-1a89-4fd7-aad6-\
87eaec484ee4"],

Cell[TextData[{
 "[HH1] Herbert W. Hethcote (2000). ",
 ButtonBox["\"The Mathematics of Infectious Diseases\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.\
pdf"], None},
  ButtonNote->
   "http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.pdf"],
 ". SIAM Review. 42 (4): 599\[Dash]653. Bibcode:2000SIAMR..42..599H. \
doi:10.1137/s0036144500371907."
}], "Text",
 CellChangeTimes->{{3.792336502490754*^9, 3.792336535278623*^9}, {
  3.792409361602792*^9, 
  3.792409368869828*^9}},ExpressionUUID->"bfa0e17b-8fc6-40d1-ba29-\
aa9444fe1a68"],

Cell[TextData[{
 "[AA1] Anton Antonov, ",
 ButtonBox["\"Coronavirus propagation modeling considerations\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792580630613844*^9, 3.79258066346693*^9}, {
  3.792580699618342*^9, 
  3.792580699619379*^9}},ExpressionUUID->"8a938d81-d58b-4ec7-a91b-\
9f29ab5c9d48"],

Cell[TextData[{
 "[AA2] Anton Antonov, ",
 ButtonBox["\"Basic experiments workflow for simple epidemiological models\"",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792836760631132*^9, 3.792836844502586*^9}, {
  3.792942846010427*^9, 
  3.792942880222164*^9}},ExpressionUUID->"e3738a95-03e5-45e4-8c49-\
cbb1585ede17"],

Cell[TextData[{
 "[AA3] Anton Antonov, ",
 ButtonBox["\"Scaling of Epidemiology Models with Multi-site Compartments\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
  3.793819286943555*^9, 
  3.793819291565818*^9}},ExpressionUUID->"5b52bb38-6c8b-4391-af62-\
012c049f4b93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repositories, packages", "Subsection",
 CellChangeTimes->{{3.792792973327919*^9, 3.7927929880315247`*^9}, {
  3.7930262856498327`*^9, 
  3.7930262863136473`*^9}},ExpressionUUID->"8334b700-3106-47cd-b11d-\
ce8937986e5d"],

Cell[TextData[{
 "[WRI1] Wolfram Research, Inc., ",
 ButtonBox["\"Epidemic Data for Novel Coronavirus COVID-19\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/resourcesystem/published/DataRepository/\
resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"],
 ", ",
 ButtonBox["WolframCloud",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com"], None},
  ButtonNote->"https://www.wolframcloud.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.79284700154799*^9, 3.792847018423129*^9}, {
  3.792848397923408*^9, 
  3.792848432986006*^9}},ExpressionUUID->"f2d4abbf-5098-4837-9546-\
6f144d2f3755"],

Cell[TextData[{
 "[AAr1] Anton Antonov, ",
 ButtonBox["Coronavirus propagation dynamics project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 
  3.792518811281426*^9}},ExpressionUUID->"1118f3c1-5ac1-4ef3-acf6-\
ab877ea2b4b4"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["\"Epidemiology models Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
  3.792782085248444*^9}, {3.792793007922522*^9, 3.7927930082592697`*^9}, {
  3.792850913255866*^9, 
  3.792850913660157*^9}},ExpressionUUID->"51b8676f-2f5e-4c80-965d-\
885b2cad03cd"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["\"Epidemiology models modifications Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"], None},
  
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
  3.792782085248444*^9}, {3.792782191837761*^9, 3.792782197033924*^9}, {
  3.792782233165003*^9, 3.7927822331669693`*^9}, {3.792793010217144*^9, 
  3.792793010914422*^9}, {3.7928509155729322`*^9, 
  3.7928509156292143`*^9}},ExpressionUUID->"c72f1339-ba77-4a19-9edf-\
a2476f406789"],

Cell[TextData[{
 "[AAp3] Anton Antonov, ",
 ButtonBox["\"Epidemiology modeling visualization functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250981159153`*^9, 3.793025108307509*^9}, {
  3.793025139244979*^9, 
  3.793025139245862*^9}},ExpressionUUID->"826c2d6a-edba-4065-ac63-\
98ac860144a2"],

Cell[TextData[{
 "[AAp4] Anton Antonov, ",
 ButtonBox["\"System dynamics interactive interfaces functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250837820044`*^9, 
  3.793025084411715*^9}},ExpressionUUID->"7fb35ce7-55db-48a3-b91b-\
0d1ac44649f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project management files", "Subsection",
 CellChangeTimes->{{3.793834890921639*^9, 
  3.793834908752763*^9}},ExpressionUUID->"e5060812-09dd-47dd-9541-\
022990b32f85"],

Cell[TextData[{
 "[AAo1] Anton Antonov, ",
 ButtonBox["WirVsVirus-Hackathon-work-plan.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-Hackathon-work-plan.org"], 
    None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-Hackathon-work-plan.org"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793835448988027*^9, 
  3.7938355324749117`*^9}},ExpressionUUID->"ff0705b2-3fb8-484e-9d21-\
b74181b47ee3"],

Cell[TextData[{
 "[AAo2] Anton Antonov, ",
 ButtonBox["WirVsVirus-hackathon-Geo-spatial-temporal-model-mind-map",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-hackathon-Geo-spatial-\
temporal-model-mind-map.pdf"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/org/WirVsVirus-hackathon-Geo-spatial-\
temporal-model-mind-map.pdf"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793835448988027*^9, 3.7938355324749117`*^9}, {
  3.793835598176846*^9, 3.793835616649465*^9}, {3.793895781827621*^9, 
  3.793895781830353*^9}},ExpressionUUID->"643a28e3-d242-4dd7-82b7-\
f05846dde320"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1995, 1342},
WindowMargins->{{Automatic, 651}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 13, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b83af7f-7ff9-4082-8873-4b7e17f71155"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 471, 7, 123, "Title",ExpressionUUID->"2bd8657f-501a-44a7-94dc-8941a5a92819"],
Cell[1054, 31, 159, 3, 67, "Subtitle",ExpressionUUID->"47676929-840e-41ae-a627-b2f184faf4f1"],
Cell[1216, 36, 1061, 25, 131, "Text",ExpressionUUID->"f6053c3c-480e-490f-9a22-3e19ead9ce24"],
Cell[CellGroupData[{
Cell[2302, 65, 159, 3, 84, "Section",ExpressionUUID->"04c76682-7ae6-48c1-8dc3-8ee07083bf48"],
Cell[2464, 70, 317, 7, 44, "Text",ExpressionUUID->"e21dada7-c755-4b2f-97a7-be5e6daec8c0"],
Cell[CellGroupData[{
Cell[2806, 81, 404, 8, 37, "Input",ExpressionUUID->"2c1f215d-af39-4b73-a6f0-42d4b4cc43a6"],
Cell[3213, 91, 387713, 6361, 576, "Output",ExpressionUUID->"1f4bc82c-5882-4d02-8276-68390cdb9f51"]
}, Open  ]],
Cell[390941, 6455, 297, 5, 44, "Text",ExpressionUUID->"962c0488-c0f0-4c2b-8144-8a29eeed7948"],
Cell[391241, 6462, 382, 8, 44, "Text",ExpressionUUID->"e3a9e0f1-c89b-4591-9ae1-208d0e8cf195"],
Cell[391626, 6472, 13124, 278, 1044, "Output",ExpressionUUID->"16253c22-15c1-4b2b-b2f1-ee9c395a7765"],
Cell[CellGroupData[{
Cell[404775, 6754, 158, 3, 67, "Subsection",ExpressionUUID->"fe44ebbf-3242-4acc-92ad-75d4e550863a"],
Cell[CellGroupData[{
Cell[404958, 6761, 158, 3, 56, "Subsubsection",ExpressionUUID->"4aed5812-31ea-46a6-a8b6-20945b0a34e2"],
Cell[405119, 6766, 847, 18, 44, "Text",ExpressionUUID->"70d62aef-97c2-4ab7-87f7-a7bb338b5482"],
Cell[405969, 6786, 356, 7, 44, "Text",ExpressionUUID->"76adf2ab-56f8-4428-8870-294f70a655a3"],
Cell[406328, 6795, 337, 7, 44, "Text",ExpressionUUID->"8df2fbf4-7e2d-4385-8512-714c43a2df4a"],
Cell[406668, 6804, 838, 18, 44, "Text",ExpressionUUID->"d9706f8e-8733-4b70-a7e0-0e7df046ef09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407543, 6827, 157, 3, 56, "Subsubsection",ExpressionUUID->"fa732dfc-ce1d-443a-985c-5ff10796254d"],
Cell[407703, 6832, 456, 9, 44, "Text",ExpressionUUID->"4ca53798-e314-4f33-857a-be694a2915fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408208, 6847, 170, 3, 67, "Subsection",ExpressionUUID->"b6ef7380-6d53-43a7-a5ee-56470f7dde30"],
Cell[408381, 6852, 202, 3, 44, "Text",ExpressionUUID->"bd9ba6f5-d3d0-43b8-98dc-cb45e8c2fbb4"],
Cell[CellGroupData[{
Cell[408608, 6859, 214, 4, 40, "Item",ExpressionUUID->"93b63510-0fc1-4ebc-ad07-750ea7ad18a6"],
Cell[408825, 6865, 234, 4, 40, "Item",ExpressionUUID->"e7002967-a828-415b-88eb-2c68231de602"],
Cell[409062, 6871, 234, 4, 40, "Item",ExpressionUUID->"82fa4414-52d4-47ae-9cb7-691b5c4354f1"],
Cell[409299, 6877, 234, 4, 40, "Item",ExpressionUUID->"e23379bc-f832-49e3-acea-931887395905"],
Cell[409536, 6883, 245, 4, 34, "Subitem",ExpressionUUID->"8f34cdb6-fba6-4e73-910c-96a15635cc9b"],
Cell[409784, 6889, 218, 4, 40, "Item",ExpressionUUID->"5a5d06b4-529d-49ca-857e-2e063090fa38"],
Cell[410005, 6895, 214, 4, 40, "Item",ExpressionUUID->"0e912a1d-1ca8-4b99-8c25-c4022c1efa56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[410280, 6906, 158, 3, 84, "Section",ExpressionUUID->"8aeeeab8-1818-46da-89b7-1bac19c8d5fa"],
Cell[410441, 6911, 403, 9, 44, "Text",ExpressionUUID->"5bd1f7ed-13b2-4018-a1bd-eb3aadd643e7"],
Cell[410847, 6922, 1331, 30, 136, "Input",ExpressionUUID->"3633d78f-638c-4bc4-82a7-96efbf1cb21f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[412215, 6957, 313, 5, 84, "Section",ExpressionUUID->"21916156-298d-467d-97d0-a7056ad95f19"],
Cell[412531, 6964, 442, 8, 44, "Text",ExpressionUUID->"5a8412ce-d47e-4ba6-8fa1-713f8e582bf3"],
Cell[412976, 6974, 155, 3, 44, "Text",ExpressionUUID->"17a01eb6-8a15-468d-b141-b1e3aae743c9"],
Cell[CellGroupData[{
Cell[413156, 6981, 1289, 30, 116, "Input",ExpressionUUID->"8dd5eabd-8d6e-4939-9fe5-29ec82eacb42"],
Cell[414448, 7013, 55263, 1428, 561, "Output",ExpressionUUID->"2861cf89-efe9-44d8-9ced-4a7790540fac"]
}, Open  ]],
Cell[469726, 8444, 157, 3, 44, "Text",ExpressionUUID->"fcef4ad4-0675-40f4-94e1-ec3a9502f9b5"],
Cell[CellGroupData[{
Cell[469908, 8451, 873, 17, 64, "Input",ExpressionUUID->"204facf0-05e5-4817-b13b-6239e5308acf"],
Cell[470784, 8470, 98580, 2498, 1215, "Output",ExpressionUUID->"3e0584b8-d686-4a5e-9663-a4c469b18ea1"]
}, Open  ]],
Cell[569379, 10971, 236, 4, 44, "Text",ExpressionUUID->"afbc757b-e4af-468c-8ebe-9994292dc48c"],
Cell[CellGroupData[{
Cell[569640, 10979, 641, 17, 37, "Input",ExpressionUUID->"1c7c7d65-85c3-49fc-8d46-d5d6ef58eca8"],
Cell[570284, 10998, 31581, 826, 673, "Output",ExpressionUUID->"a9f426cb-cbc2-4fad-9c2e-2d9204bf8c2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601914, 11830, 169, 3, 84, "Section",ExpressionUUID->"59c38173-bf11-4e2b-b6b6-22e76203d162"],
Cell[602086, 11835, 465, 8, 44, "Text",ExpressionUUID->"0af4145f-72ae-4407-8866-b715d6989280"],
Cell[602554, 11845, 649, 11, 73, "Text",ExpressionUUID->"6fd6ab15-1bc3-4f72-98bd-b239a26b83a8"],
Cell[603206, 11858, 307, 8, 44, "Text",ExpressionUUID->"cc7e07f0-7a7b-4639-b189-88ce2b3289c4"],
Cell[CellGroupData[{
Cell[603538, 11870, 192, 3, 56, "Subsubsection",ExpressionUUID->"f7d4b0fc-1cf2-4f7b-b7d5-80995a1c5e4d"],
Cell[603733, 11875, 477, 9, 73, "Text",ExpressionUUID->"64d528cb-517d-4c90-b233-fad94bc8fc63"],
Cell[604213, 11886, 256, 6, 44, "Text",ExpressionUUID->"ab177d96-650c-415e-b9c1-26b7a447b07e"],
Cell[CellGroupData[{
Cell[604494, 11896, 483, 12, 37, "Input",ExpressionUUID->"dbadacfb-d76f-4760-8d6e-858eaee2c69f"],
Cell[604980, 11910, 1194, 29, 89, "Output",ExpressionUUID->"5cd44262-b89b-48d3-b327-b45ca9848631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606211, 11944, 479, 12, 37, "Input",ExpressionUUID->"5fbf641a-9b20-4428-80e5-432e3952a737"],
Cell[606693, 11958, 1323, 34, 112, "Output",ExpressionUUID->"9fe23cdf-00b2-43bd-8a6d-6cf23577a243"]
}, Open  ]],
Cell[608031, 11995, 455, 10, 44, "Text",ExpressionUUID->"892a5009-5dce-47a7-bb23-7f2d41686fe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608523, 12010, 167, 3, 56, "Subsubsection",ExpressionUUID->"8d5d45d1-12a2-4f9a-927b-09d75b72b978"],
Cell[608693, 12015, 360, 7, 44, "Text",ExpressionUUID->"56e12740-ebac-42c7-bf25-9f54345388d7"],
Cell[CellGroupData[{
Cell[609078, 12026, 469, 10, 37, "Input",ExpressionUUID->"b8cff72e-a8a7-4936-bdfd-91e2c3f0a658"],
Cell[609550, 12038, 3891, 105, 42, "Output",ExpressionUUID->"d02464b0-fe7e-4366-a9a7-1dbcfb2e8eba"]
}, Open  ]],
Cell[613456, 12146, 375, 10, 44, "Text",ExpressionUUID->"6b3ada03-b48a-4483-a4f3-88b57b8f0f57"],
Cell[613834, 12158, 353, 9, 44, "Text",ExpressionUUID->"f390e241-7da1-4f7b-a957-3426ff40eef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614224, 12172, 224, 4, 56, "Subsubsection",ExpressionUUID->"58a75a4f-af3c-4001-b9a3-8aac36a47fb1"],
Cell[614451, 12178, 558, 10, 44, "Text",ExpressionUUID->"ab520e84-281a-49f2-8df6-6bb7ed75e5ab"],
Cell[CellGroupData[{
Cell[615034, 12192, 465, 10, 37, "Input",ExpressionUUID->"95149a98-b0e7-4f7c-bb3b-9f1f753c5ebd"],
Cell[615502, 12204, 9879, 265, 62, "Output",ExpressionUUID->"2d7b0d4e-eb74-4b27-bc5e-58dd875af82f"]
}, Open  ]],
Cell[625396, 12472, 226, 5, 44, "Text",ExpressionUUID->"a532758d-5d97-4867-94be-c8eec1ddf8aa"],
Cell[625625, 12479, 383, 10, 53, "DisplayFormula",ExpressionUUID->"da26b84c-15d1-472d-95a1-fca1b915ce78"],
Cell[626011, 12491, 160, 3, 44, "Text",ExpressionUUID->"8f88d5c3-a041-436a-b6d4-9c1964b3d64e"],
Cell[626174, 12496, 5861, 160, 53, "DisplayFormula",ExpressionUUID->"5557feeb-8a01-4673-81b7-e6c8b5e3e5d0"],
Cell[632038, 12658, 397, 10, 44, "Text",ExpressionUUID->"4ff17277-254d-46eb-b449-6d3a410be427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632472, 12673, 171, 3, 56, "Subsubsection",ExpressionUUID->"f4b0f0d7-cc04-4bb0-9583-75f44afad27d"],
Cell[632646, 12678, 907, 14, 73, "Text",ExpressionUUID->"23eda04c-c024-40f2-8fed-1eb31cf445bd"],
Cell[CellGroupData[{
Cell[633578, 12696, 516, 11, 37, "Input",ExpressionUUID->"e559fbf3-24dd-432a-a06c-73e9d764826a"],
Cell[634097, 12709, 10397, 280, 63, "Output",ExpressionUUID->"1bc8938c-7761-48d8-8368-fd5a5264c70f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[644543, 12995, 191, 3, 56, "Subsubsection",ExpressionUUID->"87767080-69e3-43cb-879c-1396889a376f"],
Cell[644737, 13000, 473, 9, 73, "Text",ExpressionUUID->"6f2f2cd1-f842-499e-8e37-9775ac0b804a"],
Cell[CellGroupData[{
Cell[645235, 13013, 514, 11, 37, "Input",ExpressionUUID->"c76d859f-1508-4e56-bb46-e17b166950ed"],
Cell[645752, 13026, 4836, 127, 64, "Output",ExpressionUUID->"a3917a66-cea6-4f4f-9ddb-6ce23d7aa864"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[650637, 13159, 191, 3, 56, "Subsubsection",ExpressionUUID->"0cedad9c-0ebb-4fc4-b52f-ab2dc38ea842"],
Cell[650831, 13164, 603, 11, 73, "Text",ExpressionUUID->"2869ec69-72bd-4fda-8f78-6953b0fb40d4"],
Cell[CellGroupData[{
Cell[651459, 13179, 514, 11, 37, "Input",ExpressionUUID->"29ce52b1-a98f-44a3-b4f6-c4566323ee90"],
Cell[651976, 13192, 6645, 175, 64, "Output",ExpressionUUID->"c14837cb-30ed-4b00-9f65-f7c40ca24828"]
}, Open  ]],
Cell[658636, 13370, 296, 6, 44, "Text",ExpressionUUID->"fa06293f-06a4-41ea-bf31-be16ef4befc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658969, 13381, 225, 4, 56, "Subsubsection",ExpressionUUID->"beb0f77d-f9c5-471c-b3a8-a2fb4dfed69a"],
Cell[659197, 13387, 385, 8, 44, "Text",ExpressionUUID->"bb3c4600-2b15-4077-b5c1-5a7a3667cdbc"],
Cell[659585, 13397, 255, 6, 44, "Text",ExpressionUUID->"b0e1eb60-03d0-4307-a09a-19ff3f396d44"],
Cell[CellGroupData[{
Cell[659865, 13407, 364, 7, 40, "Item",ExpressionUUID->"3e39e6d1-b589-46a6-ad7f-2e1859a9bfc2"],
Cell[660232, 13416, 345, 7, 40, "Item",ExpressionUUID->"a8ba903b-c3ec-45f0-b253-ec41427c93e3"],
Cell[660580, 13425, 314, 6, 40, "Item",ExpressionUUID->"2dcbaa3e-cf2b-45d5-b149-1b03c357c797"],
Cell[660897, 13433, 371, 7, 40, "Item",ExpressionUUID->"fb115abd-8c70-45f2-a972-1b5b6a584b6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661305, 13445, 562, 11, 37, "Input",ExpressionUUID->"fee61166-d639-45d8-b120-420d50078b0a"],
Cell[661870, 13458, 9268, 238, 77, "Output",ExpressionUUID->"750ba49a-03bf-4427-bbae-a0110bf1f3c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671187, 13702, 171, 3, 56, "Subsubsection",ExpressionUUID->"5e05ba14-efcd-40df-8921-8ec0d7268588"],
Cell[671361, 13707, 358, 8, 44, "Text",ExpressionUUID->"1a765286-5ab8-4506-9572-da693f85f06d"],
Cell[CellGroupData[{
Cell[671744, 13719, 414, 9, 37, "Input",ExpressionUUID->"75404f44-1762-4999-99c9-64dac085bf00"],
Cell[672161, 13730, 3323, 90, 63, "Output",ExpressionUUID->"ad313548-3d3e-45fd-ad24-a35e7c037252"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675533, 13826, 230, 4, 56, "Subsubsection",ExpressionUUID->"54142616-530a-4b27-ae9b-309ec86001e2"],
Cell[675766, 13832, 370, 8, 44, "Text",ExpressionUUID->"8d8c241b-f126-4606-af6a-1ec9dcca6e03"],
Cell[CellGroupData[{
Cell[676161, 13844, 414, 9, 37, "Input",ExpressionUUID->"0ec00681-c57d-4c8f-8fcc-857866b044a5"],
Cell[676578, 13855, 4922, 129, 42, "Output",ExpressionUUID->"943d7f95-a95d-428f-80ff-29d8dd5a8efc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[681549, 13990, 215, 4, 56, "Subsubsection",ExpressionUUID->"d8367f9e-b854-4fbe-9074-2cf985f0d195"],
Cell[681767, 13996, 514, 10, 73, "Text",ExpressionUUID->"ba2892c0-0c98-4c25-9c36-6b8350e0cb2b"],
Cell[CellGroupData[{
Cell[682306, 14010, 415, 9, 37, "Input",ExpressionUUID->"5aedc992-3d73-4f77-a8ed-904808795423"],
Cell[682724, 14021, 1534, 42, 42, "Output",ExpressionUUID->"fa022c2e-a564-4e90-86d0-dbf65bf497da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684307, 14069, 203, 3, 56, "Subsubsection",ExpressionUUID->"c81794eb-0416-4d38-8e12-c07f285c9f9c"],
Cell[684513, 14074, 295, 7, 44, "Text",ExpressionUUID->"d63353c4-31ce-4ce1-93b8-05f80203d429"],
Cell[CellGroupData[{
Cell[684833, 14085, 415, 9, 37, "Input",ExpressionUUID->"8c0bd335-9013-4413-9a51-b25a3d34c950"],
Cell[685251, 14096, 1550, 42, 42, "Output",ExpressionUUID->"8f349f95-7da4-4f80-8182-03c7a58f945f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[686850, 14144, 179, 3, 56, "Subsubsection",ExpressionUUID->"ca84c898-87f7-4cbf-8ae8-30cb9067d9a8"],
Cell[687032, 14149, 296, 7, 44, "Text",ExpressionUUID->"4d474ab2-b991-495b-804e-5aa3bcb93fda"],
Cell[CellGroupData[{
Cell[687353, 14160, 417, 9, 37, "Input",ExpressionUUID->"610ea22c-b413-47f6-95f3-d5ebc49a8a51"],
Cell[687773, 14171, 7327, 193, 42, "Output",ExpressionUUID->"3c8cc17b-039f-4e9b-9974-a0e6e0ffd165"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695161, 14371, 390, 6, 84, "Section",ExpressionUUID->"479781ed-d869-4843-90e3-1008bda138f7"],
Cell[695554, 14379, 226, 5, 44, "Text",ExpressionUUID->"82408e44-ff1c-44a1-b469-d1355dda814f"],
Cell[695783, 14386, 3175, 53, 64, "Input",ExpressionUUID->"afce3302-956c-428b-b428-c7622a0bf9e9"],
Cell[698961, 14441, 192, 3, 44, "Text",ExpressionUUID->"575cabdd-2cd3-4c32-95c8-e2af9cf9e4c9"],
Cell[699156, 14446, 6951, 150, 558, "Input",ExpressionUUID->"36436f66-50c0-48bf-8760-31d3abc8c600"],
Cell[706110, 14598, 433, 10, 44, "Text",ExpressionUUID->"6783b02d-73a2-4734-b77f-00326d25f898"],
Cell[CellGroupData[{
Cell[706568, 14612, 1273, 27, 168, "Input",ExpressionUUID->"0bbf1faa-3778-4145-a006-48d90c80b894"],
Cell[707844, 14641, 20021, 536, 753, "Output",ExpressionUUID->"8357fc82-5c8e-45d6-bfdc-124046ef5686"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[727914, 15183, 304, 5, 84, "Section",ExpressionUUID->"44336758-b4ae-493f-b420-b3ce98223752"],
Cell[728221, 15190, 302, 8, 44, "Text",ExpressionUUID->"5489e6c3-9fe4-401a-8943-15f75e3adb06"],
Cell[728526, 15200, 6337, 92, 90, "Input",ExpressionUUID->"d564b6bf-bea3-4b3b-9d8a-f4c336473695"],
Cell[734866, 15294, 222, 5, 44, "Text",ExpressionUUID->"61faff96-c779-4806-ac73-76eb2e4dce36"],
Cell[CellGroupData[{
Cell[735113, 15303, 417, 7, 37, "Input",ExpressionUUID->"7fdf830a-e33d-41a1-ba83-074377c3172b"],
Cell[735533, 15312, 2279, 35, 42, "Output",ExpressionUUID->"1a47a38c-b1d8-4764-bacd-40ac388e5a19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737849, 15352, 1200, 25, 37, "Input",ExpressionUUID->"2eba1d30-a5d6-400d-ae64-46bd76d08c99"],
Cell[739052, 15379, 1009, 15, 42, "Output",ExpressionUUID->"4fd79a26-eb8d-41de-a8cc-5029834fce3c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740110, 15400, 155, 3, 84, "Section",ExpressionUUID->"830e2313-3daa-4985-90bb-533f7c1721e8"],
Cell[740268, 15405, 19121, 385, 1234, "Input",ExpressionUUID->"da4af440-f91e-492d-b92d-a559ccf35f1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[759426, 15795, 165, 3, 84, "Section",ExpressionUUID->"98d720b2-0ce6-4d18-9411-43e6badfbe15"],
Cell[759594, 15800, 376, 7, 44, "Text",ExpressionUUID->"74b72203-418a-49c1-b3ea-7f525b81a8e3"],
Cell[759973, 15809, 396, 9, 44, "Text",ExpressionUUID->"9434e302-2efd-4827-81e6-efd2e7e692c7"],
Cell[CellGroupData[{
Cell[760394, 15822, 159, 3, 67, "Subsection",ExpressionUUID->"37bc969e-4930-4ad0-810a-ee45d0055c90"],
Cell[760556, 15827, 10425, 232, 1169, "Input",ExpressionUUID->"102a36df-9cb6-4e3c-8a2f-49d1fa17d9fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771018, 16064, 175, 3, 67, "Subsection",ExpressionUUID->"cb51a990-bd38-4833-b6cc-d24356df346b"],
Cell[771196, 16069, 664, 15, 37, "Input",ExpressionUUID->"67cf8d98-0ee9-4c84-8ee2-6e02931d0f41"],
Cell[771863, 16086, 722, 15, 37, "Input",ExpressionUUID->"8278a7aa-dfdd-4016-80ed-008d5aef4b34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[772622, 16106, 173, 3, 67, "Subsection",ExpressionUUID->"80bfced1-52dd-4621-adcf-43c1cea31c7c"],
Cell[772798, 16111, 725, 16, 37, "Input",ExpressionUUID->"6696ff63-ff86-4a49-8a2d-88019965a1c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773560, 16132, 178, 3, 67, "Subsection",ExpressionUUID->"d947a779-6095-4912-98cc-c3f7a03238e9"],
Cell[773741, 16137, 720, 15, 37, "Input",ExpressionUUID->"80a79b13-9bff-4d2e-bebf-fca06e6f8f00"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[774510, 16158, 155, 3, 84, "Section",ExpressionUUID->"ab99834a-c7fe-497e-87f5-f6a971478885"],
Cell[CellGroupData[{
Cell[774690, 16165, 158, 3, 67, "Subsection",ExpressionUUID->"f6af8829-08e7-4b6a-93d1-d370feef1f68"],
Cell[774851, 16170, 465, 13, 44, "Text",ExpressionUUID->"d6927d0e-1a89-4fd7-aad6-87eaec484ee4"],
Cell[775319, 16185, 628, 15, 44, "Text",ExpressionUUID->"bfa0e17b-8fc6-40d1-ba29-aa9444fe1a68"],
Cell[775950, 16202, 936, 23, 44, "Text",ExpressionUUID->"8a938d81-d58b-4ec7-a91b-9f29ab5c9d48"],
Cell[776889, 16227, 979, 24, 44, "Text",ExpressionUUID->"e3738a95-03e5-45e4-8c49-cbb1585ede17"],
Cell[777871, 16253, 973, 23, 44, "Text",ExpressionUUID->"5b52bb38-6c8b-4391-af62-012c049f4b93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778881, 16281, 225, 4, 67, "Subsection",ExpressionUUID->"8334b700-3106-47cd-b11d-ce8937986e5d"],
Cell[779109, 16287, 819, 21, 44, "Text",ExpressionUUID->"f2d4abbf-5098-4837-9546-6f144d2f3755"],
Cell[779931, 16310, 951, 23, 44, "Text",ExpressionUUID->"1118f3c1-5ac1-4ef3-acf6-ab877ea2b4b4"],
Cell[780885, 16335, 1005, 23, 44, "Text",ExpressionUUID->"51b8676f-2f5e-4c80-965d-885b2cad03cd"],
Cell[781893, 16360, 1145, 25, 44, "Text",ExpressionUUID->"c72f1339-ba77-4a19-9edf-a2476f406789"],
Cell[783041, 16387, 1087, 26, 44, "Text",ExpressionUUID->"826c2d6a-edba-4065-ac63-98ac860144a2"],
Cell[784131, 16415, 957, 23, 44, "Text",ExpressionUUID->"7fb35ce7-55db-48a3-b91b-0d1ac44649f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785125, 16443, 172, 3, 67, "Subsection",ExpressionUUID->"e5060812-09dd-47dd-9541-022990b32f85"],
Cell[785300, 16448, 832, 21, 44, "Text",ExpressionUUID->"ff0705b2-3fb8-484e-9d21-b74181b47ee3"],
Cell[786135, 16471, 1000, 23, 44, "Text",ExpressionUUID->"643a28e3-d242-4dd7-82b7-f05846dde320"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

